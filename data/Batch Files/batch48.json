{
  "deadlock": {
    "eli5": "Deadlock is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Deadlock is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Deadlock refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "deadlock",
      "DEADLOCK"
    ],
    "use_case": "A DBA uses Deadlock to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "locking": {
    "eli5": "Locking is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Locking is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Locking refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "locking",
      "LOCKING"
    ],
    "use_case": "A DBA uses Locking to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "row lock": {
    "eli5": "Row Lock is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Row Lock is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Row Lock refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "row lock",
      "ROW LOCK"
    ],
    "use_case": "A DBA uses Row Lock to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "table lock": {
    "eli5": "Table Lock is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Table Lock is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Table Lock refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "table lock",
      "TABLE LOCK"
    ],
    "use_case": "A DBA uses Table Lock to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "shared lock": {
    "eli5": "Shared Lock is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Shared Lock is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Shared Lock refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "shared lock",
      "SHARED LOCK"
    ],
    "use_case": "A DBA uses Shared Lock to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "exclusive lock": {
    "eli5": "Exclusive Lock is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Exclusive Lock is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Exclusive Lock refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "exclusive lock",
      "EXCLUSIVE LOCK"
    ],
    "use_case": "A DBA uses Exclusive Lock to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "pessimistic locking": {
    "eli5": "Pessimistic Locking is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Pessimistic Locking is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Pessimistic Locking refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "pessimistic locking",
      "PESSIMISTIC LOCKING"
    ],
    "use_case": "A DBA uses Pessimistic Locking to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "optimistic locking": {
    "eli5": "Optimistic Locking is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Optimistic Locking is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Optimistic Locking refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "optimistic locking",
      "OPTIMISTIC LOCKING"
    ],
    "use_case": "A DBA uses Optimistic Locking to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "normalization": {
    "eli5": "Normalization is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Normalization is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Normalization refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "normalization",
      "NORMALIZATION"
    ],
    "use_case": "A DBA uses Normalization to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "1nf": {
    "eli5": "1NF is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "1NF is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "1NF refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "1nf",
      "1NF"
    ],
    "use_case": "A DBA uses 1NF to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "2nf": {
    "eli5": "2NF is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "2NF is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "2NF refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "2nf",
      "2NF"
    ],
    "use_case": "A DBA uses 2NF to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "3nf": {
    "eli5": "3NF is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "3NF is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "3NF refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "3nf",
      "3NF"
    ],
    "use_case": "A DBA uses 3NF to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "bcnf": {
    "eli5": "BCNF is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "BCNF is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "BCNF refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "bcnf",
      "BCNF"
    ],
    "use_case": "A DBA uses BCNF to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "denormalization": {
    "eli5": "Denormalization is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Denormalization is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Denormalization refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "denormalization",
      "DENORMALIZATION"
    ],
    "use_case": "A DBA uses Denormalization to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "query optimizer": {
    "eli5": "Query Optimizer is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Query Optimizer is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Query Optimizer refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "query optimizer",
      "QUERY OPTIMIZER"
    ],
    "use_case": "A DBA uses Query Optimizer to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "execution plan": {
    "eli5": "Execution Plan is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Execution Plan is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Execution Plan refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "execution plan",
      "EXECUTION PLAN"
    ],
    "use_case": "A DBA uses Execution Plan to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "query plan": {
    "eli5": "Query Plan is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Query Plan is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Query Plan refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "query plan",
      "QUERY PLAN"
    ],
    "use_case": "A DBA uses Query Plan to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "cost-based optimization": {
    "eli5": "Cost-Based Optimization is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Cost-Based Optimization is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Cost-Based Optimization refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "cost-based optimization",
      "COST-BASED OPTIMIZATION"
    ],
    "use_case": "A DBA uses Cost-Based Optimization to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "index scan": {
    "eli5": "Index Scan is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Index Scan is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Index Scan refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "index scan",
      "INDEX SCAN"
    ],
    "use_case": "A DBA uses Index Scan to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "index seek": {
    "eli5": "Index Seek is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Index Seek is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Index Seek refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "index seek",
      "INDEX SEEK"
    ],
    "use_case": "A DBA uses Index Seek to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "full table scan": {
    "eli5": "Full Table Scan is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Full Table Scan is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Full Table Scan refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "full table scan",
      "FULL TABLE SCAN"
    ],
    "use_case": "A DBA uses Full Table Scan to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "query cache": {
    "eli5": "Query Cache is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Query Cache is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Query Cache refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "query cache",
      "QUERY CACHE"
    ],
    "use_case": "A DBA uses Query Cache to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "query hint": {
    "eli5": "Query Hint is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Query Hint is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Query Hint refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "query hint",
      "QUERY HINT"
    ],
    "use_case": "A DBA uses Query Hint to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "statistics": {
    "eli5": "Statistics is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Statistics is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Statistics refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "statistics",
      "STATISTICS"
    ],
    "use_case": "A DBA uses Statistics to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data migration": {
    "eli5": "Data Migration is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Migration is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Migration refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data migration",
      "DATA MIGRATION"
    ],
    "use_case": "A DBA uses Data Migration to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "etl (extract, transform, load)": {
    "eli5": "ETL (Extract, Transform, Load) is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "ETL (Extract, Transform, Load) is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "ETL (Extract, Transform, Load) refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "etl (extract, transform, load)",
      "ETL (EXTRACT, TRANSFORM, LOAD)"
    ],
    "use_case": "A DBA uses ETL (Extract, Transform, Load) to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "elt (extract, load, transform)": {
    "eli5": "ELT (Extract, Load, Transform) is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "ELT (Extract, Load, Transform) is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "ELT (Extract, Load, Transform) refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "elt (extract, load, transform)",
      "ELT (EXTRACT, LOAD, TRANSFORM)"
    ],
    "use_case": "A DBA uses ELT (Extract, Load, Transform) to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data integration": {
    "eli5": "Data Integration is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Integration is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Integration refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data integration",
      "DATA INTEGRATION"
    ],
    "use_case": "A DBA uses Data Integration to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data replication": {
    "eli5": "Data Replication is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Replication is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Replication refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data replication",
      "DATA REPLICATION"
    ],
    "use_case": "A DBA uses Data Replication to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data federation": {
    "eli5": "Data Federation is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Federation is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Federation refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data federation",
      "DATA FEDERATION"
    ],
    "use_case": "A DBA uses Data Federation to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "change data capture (cdc)": {
    "eli5": "Change Data Capture (CDC) is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Change Data Capture (CDC) is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Change Data Capture (CDC) refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "change data capture (cdc)",
      "CHANGE DATA CAPTURE (CDC)"
    ],
    "use_case": "A DBA uses Change Data Capture (CDC) to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data transformation": {
    "eli5": "Data Transformation is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Transformation is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Transformation refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data transformation",
      "DATA TRANSFORMATION"
    ],
    "use_case": "A DBA uses Data Transformation to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "data cleansing": {
    "eli5": "Data Cleansing is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Data Cleansing is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Data Cleansing refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "data cleansing",
      "DATA CLEANSING"
    ],
    "use_case": "A DBA uses Data Cleansing to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "master-slave replication": {
    "eli5": "Master-Slave Replication is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Master-Slave Replication is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Master-Slave Replication refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "master-slave replication",
      "MASTER-SLAVE REPLICATION"
    ],
    "use_case": "A DBA uses Master-Slave Replication to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "primary-secondary": {
    "eli5": "Primary-Secondary is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Primary-Secondary is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Primary-Secondary refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "primary-secondary",
      "PRIMARY-SECONDARY"
    ],
    "use_case": "A DBA uses Primary-Secondary to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "multi-master": {
    "eli5": "Multi-Master is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Multi-Master is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Multi-Master refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "multi-master",
      "MULTI-MASTER"
    ],
    "use_case": "A DBA uses Multi-Master to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "synchronous replication": {
    "eli5": "Synchronous Replication is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Synchronous Replication is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Synchronous Replication refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "synchronous replication",
      "SYNCHRONOUS REPLICATION"
    ],
    "use_case": "A DBA uses Synchronous Replication to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "asynchronous replication": {
    "eli5": "Asynchronous Replication is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Asynchronous Replication is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Asynchronous Replication refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "asynchronous replication",
      "ASYNCHRONOUS REPLICATION"
    ],
    "use_case": "A DBA uses Asynchronous Replication to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "high availability (ha)": {
    "eli5": "High Availability (HA) is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "High Availability (HA) is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "High Availability (HA) refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "high availability (ha)",
      "HIGH AVAILABILITY (HA)"
    ],
    "use_case": "A DBA uses High Availability (HA) to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "cluster": {
    "eli5": "Cluster is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Cluster is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Cluster refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "cluster",
      "CLUSTER"
    ],
    "use_case": "A DBA uses Cluster to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "sharding": {
    "eli5": "Sharding is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Sharding is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Sharding refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "sharding",
      "SHARDING"
    ],
    "use_case": "A DBA uses Sharding to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "partitioning": {
    "eli5": "Partitioning is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Partitioning is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Partitioning refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "partitioning",
      "PARTITIONING"
    ],
    "use_case": "A DBA uses Partitioning to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "horizontal scaling": {
    "eli5": "Horizontal Scaling is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Horizontal Scaling is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Horizontal Scaling refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "horizontal scaling",
      "HORIZONTAL SCALING"
    ],
    "use_case": "A DBA uses Horizontal Scaling to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "vertical scaling": {
    "eli5": "Vertical Scaling is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Vertical Scaling is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Vertical Scaling refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "vertical scaling",
      "VERTICAL SCALING"
    ],
    "use_case": "A DBA uses Vertical Scaling to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "read replica": {
    "eli5": "Read Replica is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Read Replica is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Read Replica refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "read replica",
      "READ REPLICA"
    ],
    "use_case": "A DBA uses Read Replica to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "backup": {
    "eli5": "Backup is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Backup is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Backup refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "backup",
      "BACKUP"
    ],
    "use_case": "A DBA uses Backup to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "point-in-time recovery (pitr)": {
    "eli5": "Point-in-Time Recovery (PITR) is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Point-in-Time Recovery (PITR) is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Point-in-Time Recovery (PITR) refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "point-in-time recovery (pitr)",
      "POINT-IN-TIME RECOVERY (PITR)"
    ],
    "use_case": "A DBA uses Point-in-Time Recovery (PITR) to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "connection pooling": {
    "eli5": "Connection Pooling is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Connection Pooling is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Connection Pooling refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "connection pooling",
      "CONNECTION POOLING"
    ],
    "use_case": "A DBA uses Connection Pooling to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "connection string": {
    "eli5": "Connection String is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "Connection String is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "Connection String refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "connection string",
      "CONNECTION STRING"
    ],
    "use_case": "A DBA uses Connection String to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  },
  "odbc": {
    "eli5": "ODBC is like a rule, shortcut, or strategy that helps big computer databases work faster and not get stuck.",
    "boss": "ODBC is a strategy, concept, or optimization tool used in database systems to prevent conflict, speed up queries, or ensure data reliability.",
    "sysadmin": "ODBC refers to a database mechanism for transaction locking, data replication, query optimization, or scaling architecture. It plays a critical role in consistency, performance, and fault tolerance.",
    "emoji": "\ud83d\udea6\ud83e\udde0\ud83d\udd01",
    "categories": [
      "Database",
      "SQL",
      "Data Processing",
      "Backup",
      "Infrastructure"
    ],
    "related": [
      "replication",
      "etl",
      "query plan",
      "lock",
      "sharding"
    ],
    "aliases": [
      "odbc",
      "ODBC"
    ],
    "use_case": "A DBA uses ODBC to prevent bottlenecks, replicate data, or design scalable and highly available systems.",
    "jargon_score": 5,
    "level": "Expert"
  }
}
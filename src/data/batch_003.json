{
  "apache": {
    "eli5": "It’s one of the oldest and most popular programs that helps deliver websites to your browser.",
    "boss": "Apache is a widely used open-source web server software that delivers content over the internet using HTTP and HTTPS.",
    "sysadmin": "Apache HTTP Server is a modular, process-based web server that supports .htaccess rules, virtual hosts, reverse proxy, and load balancing. It's part of the LAMP stack.",
    "emoji": "🔥🌐🖥️",
    "categories": ["Web", "Infrastructure"],
    "related": ["nginx", "web server", "hosting"],
    "aliases": ["apache http server"],
    "use_case": "Used to serve a WordPress site on a traditional LAMP server setup.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "litespeed": {
    "eli5": "It’s like Apache’s faster cousin—does the same job but quicker and more efficient.",
    "boss": "LiteSpeed is a high-performance commercial web server known for its speed and compatibility with Apache configurations.",
    "sysadmin": "LiteSpeed supports .htaccess, mod_rewrite, and uses an event-driven architecture for high concurrency. It includes built-in caching and security features.",
    "emoji": "⚡🖥️🌍",
    "categories": ["Web", "Infrastructure"],
    "related": ["apache", "nginx", "web server"],
    "aliases": [],
    "use_case": "Used to power high-traffic e-commerce websites with faster page loads and reduced server load.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "node server": {
    "eli5": "It’s like a waiter that uses JavaScript to serve your website’s content to visitors.",
    "boss": "A Node server runs JavaScript on the backend to handle web requests and serve dynamic content.",
    "sysadmin": "Node.js servers use non-blocking I/O and event-driven architecture. Common frameworks include Express for handling routing and middleware.",
    "emoji": "🌱📡📦",
    "categories": ["Web", "Infrastructure"],
    "related": ["node.js", "express", "serverless"],
    "aliases": ["node.js server"],
    "use_case": "Used to create a REST API that handles authentication and returns JSON data.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "static hosting": {
    "eli5": "It’s like putting your website’s files in a folder and letting people open them—no fancy backend needed.",
    "boss": "Static hosting serves HTML, CSS, JS, and media files directly to the browser without server-side processing.",
    "sysadmin": "Static hosts like Netlify, Vercel, and GitHub Pages serve pre-built files from a CDN, often using JAMstack architectures.",
    "emoji": "📁🌐🚀",
    "categories": ["Web", "Infrastructure"],
    "related": ["netlify", "vercel", "cdn"],
    "aliases": [],
    "use_case": "Used to host a portfolio site with no database or server-side logic.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "serverless": {
    "eli5": "It’s like renting tiny helpers who run your code only when needed, instead of owning a whole computer.",
    "boss": "Serverless is a cloud computing model where backend logic runs on demand, without managing server infrastructure.",
    "sysadmin": "Serverless platforms (e.g., AWS Lambda, Cloudflare Workers) run stateless functions in response to events. Billing is per execution, and scaling is automatic.",
    "emoji": "🧞‍♂️⚙️☁️",
    "categories": ["Web", "Infrastructure"],
    "related": ["lambda function", "edge function", "cloudflare workers"],
    "aliases": [],
    "use_case": "Used to process form submissions on a static site without maintaining a backend server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "edge function": {
    "eli5": "It’s like a mini brain that runs code close to your location so the website loads faster.",
    "boss": "Edge functions execute code at data centers closer to users, reducing latency and improving performance.",
    "sysadmin": "Edge functions are serverless scripts deployed to CDN edge nodes. They handle tasks like redirects, headers, or authentication before reaching the origin.",
    "emoji": "🛰️📍⚡",
    "categories": ["Web", "Infrastructure"],
    "related": ["cloudflare workers", "serverless", "edge caching"],
    "aliases": [],
    "use_case": "Used to personalize content by region before serving it from a static site.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "cloudflare workers": {
    "eli5": "They’re tiny programs that run near your location to make websites faster and smarter.",
    "boss": "Cloudflare Workers are serverless functions that run at Cloudflare’s edge network, enabling fast and secure custom logic.",
    "sysadmin": "Workers execute JavaScript or WASM in isolated V8 environments. They support routing, caching, API calls, and middleware at the edge.",
    "emoji": "🌩️👷‍♂️🧠",
    "categories": ["Web", "Infrastructure"],
    "related": ["edge function", "cloudflare", "serverless"],
    "aliases": [],
    "use_case": "Used to rewrite URLs and handle A/B testing at the edge for a global website.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "lambda function": {
    "eli5": "It’s a bit of code that wakes up, does its job, and goes back to sleep—like a helpful gnome.",
    "boss": "AWS Lambda lets you run functions on-demand in the cloud without managing servers.",
    "sysadmin": "Lambda runs code in response to events (HTTP, S3, etc.) in a containerized runtime. Supports many languages and integrates with AWS services.",
    "emoji": "🧙‍♂️☁️⚙️",
    "categories": ["Web", "Infrastructure"],
    "related": ["serverless", "aws", "api gateway"],
    "aliases": [],
    "use_case": "Used to resize uploaded images in S3 automatically upon upload.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "render": {
    "eli5": "It’s a one-stop shop to host your website or backend without needing to know how servers work.",
    "boss": "Render is a cloud platform that deploys websites, APIs, databases, and cron jobs with simple automation.",
    "sysadmin": "Render supports static sites, Docker containers, and web services. Offers managed SSL, autoscaling, cron jobs, and Git integration.",
    "emoji": "🖼️🚀🛠️",
    "categories": ["Web", "Infrastructure"],
    "related": ["vercel", "netlify", "heroku"],
    "aliases": [],
    "use_case": "Used to deploy a full-stack Node and PostgreSQL app with zero server setup.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "vercel": {
    "eli5": "It’s like a turbo button for deploying React and frontend apps with almost no setup.",
    "boss": "Vercel is a frontend cloud platform designed for fast deployment and hosting of modern web apps.",
    "sysadmin": "Vercel auto-builds from Git, optimizes with edge functions, supports Next.js natively, and offers CDN, SSL, and analytics.",
    "emoji": "⏩🌐📦",
    "categories": ["Web", "Infrastructure"],
    "related": ["netlify", "static hosting", "next.js"],
    "aliases": [],
    "use_case": "Used to deploy a Next.js blog with edge caching and automatic previews.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "netlify": {
    "eli5": "It’s a magic button for turning your website code into a live site.",
    "boss": "Netlify is a platform that hosts static sites and serverless functions, automating builds and deployments.",
    "sysadmin": "Netlify integrates with Git, runs CI/CD pipelines, deploys to CDN, and supports edge functions, redirects, and Netlify CMS.",
    "emoji": "🎛️🌐📦",
    "categories": ["Web", "Infrastructure"],
    "related": ["vercel", "static hosting", "netlify cms"],
    "aliases": [],
    "use_case": "Used to host a JAMstack portfolio with continuous deployment from GitHub.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "heroku": {
    "eli5": "It’s a place where you drop your app code and it just works—no server setup needed.",
    "boss": "Heroku is a cloud platform that simplifies deploying and scaling apps by abstracting server management.",
    "sysadmin": "Heroku uses dynos (containers) to run apps. It supports Git-based deployments, Postgres, Redis, config vars, and auto-scaling.",
    "emoji": "☁️📤🔄",
    "categories": ["Web", "Infrastructure"],
    "related": ["render", "netlify", "dyno"],
    "aliases": [],
    "use_case": "Used by startups to quickly deploy prototypes and internal tools without infrastructure knowledge.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "firebase hosting": {
    "eli5": "It’s Google’s way of letting you show your website to the world, fast and secure.",
    "boss": "Firebase Hosting is a Google service for deploying fast, secure static and dynamic web apps globally.",
    "sysadmin": "Firebase Hosting offers CDN-backed SSL hosting for HTML/CSS/JS and supports custom domains, caching, and Cloud Functions.",
    "emoji": "📡🔐🚀",
    "categories": ["Web", "Infrastructure"],
    "related": ["google cloud", "serverless", "static hosting"],
    "aliases": [],
    "use_case": "Used to host a single-page app with custom domain and secure HTTPS out of the box.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "digitalocean app platform": {
    "eli5": "It’s like a launchpad for your website—just push your code and it runs.",
    "boss": "DigitalOcean App Platform is a platform-as-a-service (PaaS) for deploying apps and static sites without managing servers.",
    "sysadmin": "Supports Git push deployments, autoscaling, managed SSL, PostgreSQL, and Docker. Built on Kubernetes for scalability.",
    "emoji": "🛰️📦☁️",
    "categories": ["Web", "Infrastructure"],
    "related": ["render", "heroku", "netlify"],
    "aliases": [],
    "use_case": "Used to deploy a Node.js API with PostgreSQL and auto HTTPS in minutes.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cloudflare": {
    "eli5": "It’s like a bodyguard and speed booster for websites.",
    "boss": "Cloudflare is a CDN and security service that protects and accelerates websites through global edge delivery.",
    "sysadmin": "Cloudflare offers DNS, CDN, WAF, DDoS protection, SSL, Workers, and Zero Trust services. Sits in front of your site as a reverse proxy.",
    "emoji": "🛡️🌍⚡",
    "categories": ["Web", "Infrastructure", "Web Security"],
    "related": ["cdn", "cloudflare workers", "edge function"],
    "aliases": [],
    "use_case": "Used to protect a website from DDoS attacks and reduce latency with global caching.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "fastly": {
    "eli5": "It’s like Cloudflare’s speed-obsessed cousin that helps big websites load lightning fast.",
    "boss": "Fastly is a high-performance CDN and edge cloud platform used by enterprises for low-latency delivery and edge logic.",
    "sysadmin": "Fastly offers edge caching, image optimization, WAF, and real-time log streaming. VCL scripting allows request manipulation at the edge.",
    "emoji": "⚡🗺️📉",
    "categories": ["Web", "Infrastructure"],
    "related": ["cdn", "cloudflare", "edge function"],
    "aliases": [],
    "use_case": "Used to serve a video-heavy news site with real-time purging and edge rules.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "akamai": {
    "eli5": "It’s like a giant network of helpers making sure websites don’t crash and stay fast around the world.",
    "boss": "Akamai is a global CDN and cybersecurity provider trusted by large enterprises for content delivery and protection.",
    "sysadmin": "Akamai provides DNS, edge servers, DDoS mitigation, and application acceleration with advanced caching and routing.",
    "emoji": "🌍🛡️🚀",
    "categories": ["Web", "Infrastructure", "Web Security"],
    "related": ["cdn", "cloudflare", "fastly"],
    "aliases": [],
    "use_case": "Used by banks and media companies for high availability, low latency, and security at global scale.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "image optimization": {
    "eli5": "It’s like shrinking your pictures so your website loads faster but still looks good.",
    "boss": "Image optimization reduces file size without sacrificing quality, improving site speed and user experience.",
    "sysadmin": "Involves compression (lossy/lossless), resizing, format conversion (WebP, AVIF), and lazy loading to reduce load time and bandwidth.",
    "emoji": "🖼️📉🚀",
    "categories": ["Web", "Infrastructure"],
    "related": ["compression", "cdn", "performance tab"],
    "aliases": [],
    "use_case": "Used to convert hero images to WebP and lazy load them on a homepage for faster load times.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "edge caching": {
    "eli5": "It’s like keeping a copy of your website close to where people live so it loads faster.",
    "boss": "Edge caching stores website content on servers around the world to speed up delivery and reduce latency.",
    "sysadmin": "CDNs cache content at edge nodes near users, reducing round-trips to origin. TTL and cache headers control freshness.",
    "emoji": "🧊🌍⚡",
    "categories": ["Web", "Infrastructure"],
    "related": ["cdn", "cloudflare", "cache-control"],
    "aliases": [],
    "use_case": "Used to store static assets like CSS and JS closer to users globally for a React app.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "asset pipeline": {
    "eli5": "It’s like an assembly line for your website’s code—it cleans, shrinks, and packs everything before shipping.",
    "boss": "An asset pipeline automates processing of CSS, JS, and images to prepare them for fast web delivery.",
    "sysadmin": "It includes steps like minification, transpilation, concatenation, fingerprinting, and bundling using tools like Webpack, Gulp, or Vite.",
    "emoji": "🏭📦🎯",
    "categories": ["Web", "Programming"],
    "related": ["bundling", "vite", "compression"],
    "aliases": [],
    "use_case": "Used in a Rails app to compress and version images, CSS, and JS files before deployment.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "http caching": {
    "eli5": "It’s like your browser taking a photo of a page so it doesn’t have to ask for it again next time.",
    "boss": "HTTP caching saves web resources on the browser or CDN to improve load speed and reduce bandwidth.",
    "sysadmin": "Controlled via headers like Cache-Control, ETag, Expires. Can be private (browser) or shared (CDN/intermediaries).",
    "emoji": "🧠📁🔁",
    "categories": ["Web", "Infrastructure"],
    "related": ["cache-control", "etag", "cdn"],
    "aliases": [],
    "use_case": "Used to cache CSS files for 30 days to avoid re-downloading on every visit.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "service worker": {
    "eli5": "It’s a helper that runs in the background and lets websites work even when you’re offline.",
    "boss": "A service worker is a script that runs in the background of the browser to enable offline access and background sync.",
    "sysadmin": "Service workers intercept network requests, cache assets, and enable progressive web apps (PWAs). They work independently of web pages.",
    "emoji": "🔧📦🌐",
    "categories": ["Web", "Programming"],
    "related": ["pwa", "cache api", "offline"],
    "aliases": [],
    "use_case": "Used to enable offline viewing of a news site’s last-read articles.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "http/2": {
    "eli5": "It’s a newer, faster way for websites to talk to your browser—like upgrading from a walkie-talkie to a phone.",
    "boss": "HTTP/2 improves performance with multiplexing, header compression, and server push features.",
    "sysadmin": "HTTP/2 allows concurrent streams over a single TCP connection, reduces latency with HPACK, and supports binary framing.",
    "emoji": "🚄🌐📡",
    "categories": ["Web", "Networking Protocols"],
    "related": ["http/3", "tls", "gzip"],
    "aliases": ["http2"],
    "use_case": "Used to serve a website with multiple JS and image files more efficiently.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "http/3": {
    "eli5": "It’s the newest way the internet sends info—faster and more secure, even on spotty connections.",
    "boss": "HTTP/3 builds on HTTP/2 using QUIC protocol for lower latency and better performance.",
    "sysadmin": "HTTP/3 uses QUIC over UDP with TLS 1.3 built-in. It improves handshake time, connection migration, and resilience to packet loss.",
    "emoji": "🚀🔐📶",
    "categories": ["Web", "Networking Protocols"],
    "related": ["http/2", "tls", "quic"],
    "aliases": ["http3"],
    "use_case": "Used to serve a high-traffic web app with faster loading in poor network conditions.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "tls": {
    "eli5": "It’s like wrapping your message in a lockbox so no one can peek on its way to the website.",
    "boss": "TLS (Transport Layer Security) encrypts data between browsers and servers to protect privacy and security.",
    "sysadmin": "TLS uses asymmetric encryption for key exchange and symmetric encryption for data. Supports protocols like HTTPS, SMTP, and VPN tunneling.",
    "emoji": "🔐🛡️📡",
    "categories": ["Web Security", "Networking Protocols"],
    "related": ["ssl certificate", "http/3", "encryption"],
    "aliases": ["transport layer security"],
    "use_case": "Used to secure login credentials sent to a banking website.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ssl certificate": {
    "eli5": "It’s like a secret handshake that proves a website is safe to talk to.",
    "boss": "An SSL certificate is a digital credential that enables encrypted communication between a browser and a website.",
    "sysadmin": "SSL certificates use public key infrastructure (PKI) to verify server identity and encrypt data. They're required for HTTPS and issued by CAs.",
    "emoji": "🔏📜🌐",
    "categories": ["Web Security", "Networking Protocols"],
    "related": ["tls", "let's encrypt", "https"],
    "aliases": [],
    "use_case": "Used to secure an e-commerce site’s checkout page and display the padlock icon in the browser.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "let's encrypt": {
    "eli5": "It’s a free service that gives websites a lock symbol and makes them secure.",
    "boss": "Let’s Encrypt is a nonprofit certificate authority that provides free SSL/TLS certificates for HTTPS.",
    "sysadmin": "Let’s Encrypt uses the ACME protocol to automate domain validation and certificate issuance. Certificates are typically valid for 90 days.",
    "emoji": "🔐🆓📈",
    "categories": ["Web Security", "Web"],
    "related": ["ssl certificate", "tls", "certbot"],
    "aliases": ["lets encrypt"],
    "use_case": "Used to secure a personal blog with automatic SSL renewal using Certbot.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "compression": {
    "eli5": "It’s like squishing your website files so they load faster.",
    "boss": "Compression reduces the size of data sent over the internet, improving page load speed and efficiency.",
    "sysadmin": "Web servers use Gzip or Brotli to compress responses. Compression is controlled via the `Content-Encoding` HTTP header.",
    "emoji": "📦📉🚀",
    "categories": ["Web", "Infrastructure"],
    "related": ["gzip", "brotli", "http caching"],
    "aliases": [],
    "use_case": "Used to compress HTML, CSS, and JS files before serving them to browsers.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gzip": {
    "eli5": "It’s a way to shrink your website files like a vacuum bag for clothes.",
    "boss": "Gzip is a popular file compression format used to reduce web page and asset sizes for faster delivery.",
    "sysadmin": "Gzip compresses data at the server before sending to the client. Supported by all modern browsers and controlled via web server config.",
    "emoji": "🧳💨📁",
    "categories": ["Web", "Networking Protocols"],
    "related": ["compression", "brotli", "content-encoding"],
    "aliases": [],
    "use_case": "Used to reduce HTML payload size by over 70% for faster site loading.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "brotli": {
    "eli5": "It’s a newer, smarter way to squish files even smaller than Gzip.",
    "boss": "Brotli is a modern compression algorithm developed by Google that achieves better compression ratios than Gzip.",
    "sysadmin": "Brotli uses context modeling and entropy coding for high compression. It’s supported by most browsers and NGINX/Apache.",
    "emoji": "📦🧠💡",
    "categories": ["Web", "Networking Protocols"],
    "related": ["gzip", "compression", "http/2"],
    "aliases": [],
    "use_case": "Used to compress JavaScript and CSS files for a production web build.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "etag": {
    "eli5": "It’s like a name tag for a web file that helps your browser know if it changed or not.",
    "boss": "ETag (Entity Tag) is an HTTP header used for efficient caching by validating whether a resource has changed.",
    "sysadmin": "ETags are hash-like identifiers sent with responses. Clients can send `If-None-Match` to validate cache freshness without re-downloading.",
    "emoji": "🏷️📁🔁",
    "categories": ["Web", "Networking"],
    "related": ["http caching", "cache-control", "ttl"],
    "aliases": ["entity tag"],
    "use_case": "Used to reduce bandwidth by validating image freshness during repeat visits.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cache-control": {
    "eli5": "It’s a set of rules that tells your browser how long to keep stuff before asking again.",
    "boss": "Cache-Control is an HTTP header that defines how and for how long resources should be cached.",
    "sysadmin": "It supports directives like `max-age`, `no-cache`, `public`, and `private`. Influences browser and CDN caching behavior.",
    "emoji": "🧭📜🕒",
    "categories": ["Web", "Networking"],
    "related": ["etag", "http caching", "ttl"],
    "aliases": [],
    "use_case": "Used to prevent caching of sensitive pages like `/login` while caching static files for 1 year.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "status code": {
    "eli5": "It’s a number the website sends to your browser to say how things went—like 'all good' or 'not found'.",
    "boss": "HTTP status codes are numeric messages from the server that indicate the result of a web request.",
    "sysadmin": "Codes are grouped by type: 2xx (success), 3xx (redirects), 4xx (client errors), 5xx (server errors). Key for debugging and logging.",
    "emoji": "📟✅❌",
    "categories": ["Web", "Networking Protocols"],
    "related": ["http", "devtools", "console"],
    "aliases": ["http status code"],
    "use_case": "Used to show a 404 error page when a user visits a non-existent URL.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cache api": {
    "eli5": "It’s like giving websites a backpack to carry things they’ll need again later, even offline.",
    "boss": "The Cache API is a browser API that lets web apps store and retrieve network requests for offline or performance use.",
    "sysadmin": "Exposed in service workers, the Cache API allows storing responses keyed by request. It's central to building PWAs.",
    "emoji": "🎒🔁📦",
    "categories": ["Web", "Programming"],
    "related": ["service worker", "http caching", "offline"],
    "aliases": [],
    "use_case": "Used to store API responses in a weather app for use when the device is offline.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "devtools": {
    "eli5": "It’s like a toolkit inside your browser that lets you peek behind the curtain of any website.",
    "boss": "DevTools are built-in browser tools used to inspect, debug, and optimize websites.",
    "sysadmin": "Chrome, Firefox, and Edge DevTools include tabs for inspecting HTML/CSS, network traffic, console logs, performance, and accessibility.",
    "emoji": "🧰💻🕵️",
    "categories": ["Web", "Programming"],
    "related": ["console", "network tab", "performance tab"],
    "aliases": ["developer tools"],
    "use_case": "Used to debug layout issues and network errors on a slow-loading page.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "network tab": {
    "eli5": "It shows all the behind-the-scenes stuff your browser loads—like pictures, scripts, and fonts.",
    "boss": "The Network Tab in DevTools tracks all network activity, showing how and when resources are loaded.",
    "sysadmin": "Provides insights on request timing, size, status codes, headers, and caching. Useful for diagnosing performance and fetch errors.",
    "emoji": "🌐📊⏱️",
    "categories": ["Web", "Programming"],
    "related": ["devtools", "status code", "console"],
    "aliases": [],
    "use_case": "Used to identify slow-loading scripts that delay first paint.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "console": {
    "eli5": "It’s like a message board where the website tells you what’s going right or wrong.",
    "boss": "The Console in DevTools displays messages from the website and is used to debug errors or run commands.",
    "sysadmin": "Displays logs, warnings, and errors via `console.log`, `console.error`, etc. Supports interactive JS execution.",
    "emoji": "🖥️💬⚠️",
    "categories": ["Web", "Programming"],
    "related": ["devtools", "network tab", "debugging"],
    "aliases": [],
    "use_case": "Used to inspect JavaScript errors and view output during development.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "elements panel": {
    "eli5": "It’s like x-ray vision—you can click and change anything on the page, just for you.",
    "boss": "The Elements panel lets you view and modify the structure and styles of a webpage in real time.",
    "sysadmin": "Shows the live DOM and applied CSS. Developers can inspect elements, test style changes, and debug layout issues.",
    "emoji": "🔍🧱🎨",
    "categories": ["Web", "Programming"],
    "related": ["devtools", "css", "html"],
    "aliases": [],
    "use_case": "Used to test padding and color changes directly in the browser.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "performance tab": {
    "eli5": "It’s like a stopwatch and magnifying glass for your website to see what slows it down.",
    "boss": "The Performance tab in DevTools helps analyze how long each part of a website takes to load or run.",
    "sysadmin": "Provides flame charts, FPS, scripting time, paint duration, and layout shifts to diagnose performance bottlenecks.",
    "emoji": "⏱️📈🔥",
    "categories": ["Web", "Programming"],
    "related": ["core web vitals", "lighthouse", "devtools"],
    "aliases": [],
    "use_case": "Used to identify long JavaScript execution during page load on a slow device.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "lighthouse": {
    "eli5": "It’s a robot that checks how good your website is and gives you a scorecard.",
    "boss": "Lighthouse is a tool that audits web pages for performance, accessibility, SEO, and best practices.",
    "sysadmin": "Lighthouse runs in Chrome or CLI and generates a report with metrics like LCP, CLS, and opportunities for improvement.",
    "emoji": "🚨📊🌟",
    "categories": ["Web", "Analytics"],
    "related": ["pagespeed insights", "core web vitals", "performance tab"],
    "aliases": [],
    "use_case": "Used to evaluate and improve a mobile site’s load speed and SEO score.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "pagespeed insights": {
    "eli5": "It’s a tool from Google that tells you how fast your website is and how to make it better.",
    "boss": "PageSpeed Insights analyzes a site’s load performance and provides suggestions to optimize user experience.",
    "sysadmin": "Provides field and lab data including Core Web Vitals. Based on Lighthouse and CrUX dataset.",
    "emoji": "📉🔍🚀",
    "categories": ["Web", "Analytics"],
    "related": ["lighthouse", "core web vitals", "performance tab"],
    "aliases": [],
    "use_case": "Used to improve a homepage’s mobile score by reducing render-blocking scripts.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "core web vitals": {
    "eli5": "It’s a report card that shows how smooth and fast your website feels to real people.",
    "boss": "Core Web Vitals are Google’s metrics for measuring real-world user experience, especially load, interaction, and visual stability.",
    "sysadmin": "Includes LCP (loading), FID (interactivity), CLS (visual stability). Used in performance scoring and SEO ranking.",
    "emoji": "📊💻❤️",
    "categories": ["Web", "Analytics"],
    "related": ["lighthouse", "pagespeed insights", "performance tab"],
    "aliases": [],
    "use_case": "Used to optimize a blog’s LCP by lazy-loading images below the fold.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "fcp": {
    "eli5": "It’s how long it takes before the first thing shows up on your screen.",
    "boss": "FCP (First Contentful Paint) measures how quickly the browser renders the first visible element.",
    "sysadmin": "FCP is recorded in performance APIs and tools like Lighthouse. Lower FCP means faster perceived load time.",
    "emoji": "🖥️🕒🌄",
    "categories": ["Web", "Analytics"],
    "related": ["core web vitals", "lcp", "performance tab"],
    "aliases": ["first contentful paint"],
    "use_case": "Used to benchmark how fast a marketing site starts showing content.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "lcp": {
    "eli5": "It’s how long before the biggest part of the page finishes loading—like a big picture or heading.",
    "boss": "LCP (Largest Contentful Paint) tracks when the main content of a page becomes visible.",
    "sysadmin": "Part of Core Web Vitals. Measures time from navigation to render of the largest visible element in the viewport.",
    "emoji": "🖼️⏲️📱",
    "categories": ["Web", "Analytics"],
    "related": ["core web vitals", "fcp", "performance tab"],
    "aliases": ["largest contentful paint"],
    "use_case": "Used to identify image load delays on homepage banners affecting SEO.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "critical css": {
    "eli5": "It’s the CSS needed to show the top part of your page fast—everything else can wait.",
    "boss": "Critical CSS is the minimum CSS required to render above-the-fold content quickly.",
    "sysadmin": "Extracted and inlined in HTML to speed up FCP/LCP. Reduces render-blocking and improves perceived performance.",
    "emoji": "🎯📄🎨",
    "categories": ["Web", "Programming"],
    "related": ["lcp", "css", "performance tab"],
    "aliases": [],
    "use_case": "Used to improve load speed by inlining styles needed for the first screen of a landing page.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "defer script": {
    "eli5": "It tells the browser, 'Don’t stop loading the page—run this script after you’re done.'",
    "boss": "Using `defer` on script tags delays JavaScript execution until after HTML is parsed, improving page load.",
    "sysadmin": "The `defer` attribute prevents blocking render while preserving script order. It’s ideal for non-critical JS files.",
    "emoji": "🕓📜⚡",
    "categories": ["Web", "Programming"],
    "related": ["critical css", "lcp", "performance tab"],
    "aliases": [],
    "use_case": "Used to defer analytics scripts to avoid slowing down page rendering.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "favicon": {
    "eli5": "It’s the little picture you see on your browser tab for a website.",
    "boss": "A favicon is a small icon displayed in browser tabs, bookmarks, and address bars to represent a website.",
    "sysadmin": "Typically an ICO or PNG file linked via `<link rel='icon'>`. Can also support SVG or multiple sizes for device compatibility.",
    "emoji": "🔖🧩🌐",
    "categories": ["Web"],
    "related": ["manifest.json", "html", "seo"],
    "aliases": [],
    "use_case": "Used to brand a blog by showing a unique icon in the browser tab.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "manifest.json": {
    "eli5": "It’s like an app’s business card—it tells your phone how to install and display it.",
    "boss": "`manifest.json` is a file that tells browsers how to treat a website like an installable app.",
    "sysadmin": "Defines app name, icons, colors, display mode, and start URL for PWAs. Linked in `<head>` to enable Add to Home Screen.",
    "emoji": "📇📱🛠️",
    "categories": ["Web", "Programming"],
    "related": ["pwa", "favicon", "service worker"],
    "aliases": [],
    "use_case": "Used to make a weather app installable on Android as a PWA.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "radarr": {
    "eli5": "It’s like a robot that finds and downloads your favorite movies automatically.",
    "boss": "Radarr is an open-source tool for automating movie downloads, organization, and monitoring.",
    "sysadmin": "Radarr monitors RSS feeds and indexers, integrates with download clients (e.g., qBittorrent, NZBGet), and renames/moves files based on metadata.",
    "emoji": "🎬🤖📥",
    "categories": ["Self-hosting", "Automation"],
    "related": ["sonarr", "plex", "jellyfin"],
    "aliases": [],
    "use_case": "Used to automatically fetch and organize new 4K movie releases in a Plex library.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "borgbackup": {
    "eli5": "It’s like a super-smart copy machine that only saves what changed to keep things small and fast.",
    "boss": "BorgBackup is a deduplicating backup program that encrypts and compresses data efficiently.",
    "sysadmin": "Borg uses content-defined chunking for deduplication, supports AES encryption, and compresses data with zlib, lz4, or zstd. CLI-based.",
    "emoji": "📦🔁🔐",
    "categories": ["Backup", "Open Source"],
    "related": ["restic", "rsync", "cron"],
    "aliases": [],
    "use_case": "Used to back up a homelab server nightly with deduplication and remote SSH targets.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "robots.txt": {
    "eli5": "Imagine a 'do not enter' sign on a door that tells friendly robots (like Google) where they're not allowed to go in your house (website).",
    "boss": "robots.txt is a small text file on a website that gives search engines instructions on which pages or sections to skip or avoid indexing.",
    "sysadmin": "robots.txt is a plain text file located at the root of a domain, using the Robots Exclusion Protocol to specify user-agent-specific access rules, often to prevent indexing of non-public or duplicate content.",
    "emoji": "🤖🚫📄",
    "categories": ["Web"],
    "related": ["sitemap.xml", "google search console", "crawl delay", "meta description"],
    "aliases": ["robots file"],
    "use_case": "Blocking Googlebot from indexing staging or development areas of a website.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "sitemap.xml": {
    "eli5": "Think of it like a treasure map that tells search engines where all the rooms in your website are and how to get to them.",
    "boss": "sitemap.xml is an XML file that lists all the important URLs on a website to help search engines crawl and index content more effectively.",
    "sysadmin": "sitemap.xml is an XML-based protocol used to define the full structure of a website, including URL priority, update frequency, and last modification dates, aiding in SEO and crawl efficiency.",
    "emoji": "🗺️🧭🌐",
    "categories": ["Web"],
    "related": ["robots.txt", "google search console", "bing webmaster tools", "page view"],
    "aliases": ["xml sitemap"],
    "use_case": "Submitting a sitemap.xml to Google Search Console to speed up indexing of a new blog.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "google search console": {
    "eli5": "It’s like a report card from Google that tells you how your website is doing in search results.",
    "boss": "Google Search Console is a free tool by Google that provides insights into how a website performs in search, including visibility, errors, and indexing issues.",
    "sysadmin": "Google Search Console offers a suite of SEO diagnostic and monitoring tools, enabling submission of sitemaps, tracking of crawl errors, search analytics, and structured data validation.",
    "emoji": "📈🔍💻",
    "categories": ["Web", "Analytics"],
    "related": ["robots.txt", "sitemap.xml", "page view", "bounce rate"],
    "aliases": [],
    "use_case": "Using Search Console to troubleshoot why product pages aren’t appearing in Google results.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "bing webmaster tools": {
    "eli5": "It’s like Google Search Console but for Bing—it tells you how your site shows up in Bing search results.",
    "boss": "Bing Webmaster Tools helps website owners understand their site’s performance in Bing, offering similar tools as Google Search Console.",
    "sysadmin": "Bing Webmaster Tools provides URL inspection, crawl statistics, and SEO reporting to enhance indexing and performance in the Bing search engine.",
    "emoji": "🔎📊🧰",
    "categories": ["Web", "Analytics"],
    "related": ["google search console", "sitemap.xml", "robots.txt", "page view"],
    "aliases": [],
    "use_case": "Submitting a site’s sitemap.xml to Bing to improve its presence in Bing search.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "accessibility": {
    "eli5": "Like putting ramps and braille signs on a website so everyone, no matter their abilities, can use it.",
    "boss": "Accessibility ensures that websites and digital tools are usable by people with disabilities, including visual, auditory, or motor impairments.",
    "sysadmin": "Accessibility involves implementing standards like WCAG to ensure that web content is perceivable, operable, understandable, and robust across assistive technologies.",
    "emoji": "♿🌐👩‍🦯",
    "categories": ["Web"],
    "related": ["screen reader", "alt attribute", "aria roles", "keyboard navigation"],
    "aliases": [],
    "use_case": "Designing a product page that works well with screen readers for visually impaired users.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "screen reader": {
    "eli5": "It’s like a talking robot that reads the screen out loud so blind users know what's there.",
    "boss": "A screen reader is software that converts digital content into speech or braille, helping visually impaired users interact with websites and apps.",
    "sysadmin": "Screen readers parse semantic HTML and ARIA landmarks to provide audio-based navigation for blind and low-vision users.",
    "emoji": "🗣️🧑‍🦯📱",
    "categories": ["Web"],
    "related": ["accessibility", "aria roles", "alt attribute", "focus ring"],
    "aliases": [],
    "use_case": "Testing a website with a screen reader like NVDA to verify that all interactive elements are accessible.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "contrast ratio": {
    "eli5": "It’s how much a text color stands out from the background—like black words on white paper versus gray on gray.",
    "boss": "Contrast ratio measures the difference in brightness between text and background to ensure readability, especially for users with visual impairments.",
    "sysadmin": "Contrast ratio is calculated from luminance values between foreground and background colors, and must meet WCAG standards (e.g., 4.5:1 for normal text).",
    "emoji": "🌗🔤🖥️",
    "categories": ["Web"],
    "related": ["accessibility", "screen reader", "focus ring", "aria roles"],
    "aliases": [],
    "use_case": "Using a contrast checker to ensure button text is legible for all users.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "focus ring": {
    "eli5": "A glowing outline that shows which button or link you’re about to click using your keyboard.",
    "boss": "Focus rings visually indicate which element on the page is selected when navigating with a keyboard, helping with accessibility.",
    "sysadmin": "Focus rings are CSS outlines or highlights applied to focused elements, aiding keyboard users in maintaining navigation context.",
    "emoji": "🟦⌨️🔲",
    "categories": ["Web"],
    "related": ["keyboard navigation", "tab index", "accessibility", "screen reader"],
    "aliases": [],
    "use_case": "Styling form fields with a visible focus ring to help keyboard users know where they are.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "tab index": {
    "eli5": "It’s like a line number that tells the keyboard where to jump next when you press the tab key.",
    "boss": "Tab index defines the order in which elements receive keyboard focus, helping users navigate forms and pages without a mouse.",
    "sysadmin": "The `tabindex` attribute controls focus order; positive values alter navigation sequence, zero keeps natural order, and -1 removes focus from tab sequence.",
    "emoji": "↹🔢🧭",
    "categories": ["Web"],
    "related": ["focus ring", "keyboard navigation", "skip link", "accessibility"],
    "aliases": ["tabindex"],
    "use_case": "Reordering form inputs so the tab key moves in a logical order on mobile devices.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "keyboard navigation": {
    "eli5": "Using arrow keys or Tab instead of a mouse to move around a website.",
    "boss": "Keyboard navigation allows users to interact with web content using keys like Tab, Enter, and Arrow keys—essential for accessibility.",
    "sysadmin": "Keyboard navigation depends on HTML semantics, focus management, and JavaScript event handling to support tabbing, skipping, and activating UI elements.",
    "emoji": "⌨️🧭🚶",
    "categories": ["Web"],
    "related": ["focus ring", "tab index", "accessibility", "screen reader"],
    "aliases": [],
    "use_case": "Ensuring a custom dropdown menu is fully operable with keyboard shortcuts alone.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "skip link": {
    "eli5": "It’s a shortcut button that lets people jump straight to the main content instead of going through all the menus first.",
    "boss": "A skip link is a hidden link that appears when tabbing, letting users bypass navigation and jump to key page content.",
    "sysadmin": "Skip links are anchor tags with `href` targets to main content regions, revealed on focus to support screen readers and keyboard users.",
    "emoji": "⏭️🔗📄",
    "categories": ["Web"],
    "related": ["keyboard navigation", "tab index", "accessibility", "screen reader"],
    "aliases": [],
    "use_case": "Adding a skip link to a government website to improve screen reader usability.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "alt attribute": {
    "eli5": "It's like a photo's caption that tells blind people what the picture shows when they can't see it.",
    "boss": "The alt attribute provides a text description of images for screen readers and also displays if the image fails to load.",
    "sysadmin": "The `alt` attribute in HTML is used to describe image content for assistive technologies and to support SEO and fallback rendering.",
    "emoji": "🖼️🔤♿",
    "categories": ["Web"],
    "related": ["accessibility", "screen reader", "aria roles", "image optimization"],
    "aliases": ["alt text"],
    "use_case": "Adding descriptive alt attributes to product images on an e-commerce site to support screen readers.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "aria roles": {
    "eli5": "They’re like name tags that help screen readers understand what each part of a page is supposed to do.",
    "boss": "ARIA roles define the purpose of web elements, especially dynamic ones, so assistive tools can better understand the interface.",
    "sysadmin": "ARIA (Accessible Rich Internet Applications) roles are added to HTML elements to define roles, states, and properties for assistive technologies.",
    "emoji": "🏷️🧑‍🦯🔧",
    "categories": ["Web"],
    "related": ["accessibility", "screen reader", "alt attribute", "keyboard navigation"],
    "aliases": ["aria"],
    "use_case": "Adding `role=button` to a clickable div so screen readers announce it correctly.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "web analytics": {
    "eli5": "It’s like counting how many people walk into a store and what they do while browsing.",
    "boss": "Web analytics tools collect data about website traffic and user behavior to help improve content, SEO, and conversions.",
    "sysadmin": "Web analytics platforms track events, sessions, and user behavior using JavaScript snippets and cookies for reporting and optimization.",
    "emoji": "📊🌐📈",
    "categories": ["Analytics", "Web"],
    "related": ["google analytics", "plausible analytics", "event tracking", "bounce rate"],
    "aliases": [],
    "use_case": "Using web analytics to discover users are dropping off after the checkout page loads slowly.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "google analytics": {
    "eli5": "It tells you who visited your website, when they came, and what they clicked on—like a digital guestbook.",
    "boss": "Google Analytics is a free tool for tracking user behavior, traffic sources, and conversions on a website.",
    "sysadmin": "Google Analytics uses a JavaScript tracker to collect pageviews, sessions, and event data, sent to Google's servers for analysis and reporting.",
    "emoji": "📈📍📉",
    "categories": ["Analytics", "Web"],
    "related": ["web analytics", "event tracking", "conversion rate", "bounce rate"],
    "aliases": [],
    "use_case": "Using Google Analytics to track how many users complete a purchase funnel.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "plausible analytics": {
    "eli5": "It’s a simpler, privacy-friendly tool that tells you how many people visit your site—without spying on them.",
    "boss": "Plausible Analytics is a privacy-focused alternative to Google Analytics, offering clean, cookie-free tracking.",
    "sysadmin": "Plausible Analytics is a lightweight JavaScript-based web analytics tool that avoids cookies, supports EU privacy laws, and can be self-hosted.",
    "emoji": "🔍📉🕵️‍♂️❌",
    "categories": ["Analytics", "Web"],
    "related": ["google analytics", "matomo", "cookies", "web analytics"],
    "aliases": [],
    "use_case": "Switching to Plausible Analytics to comply with GDPR and eliminate cookie banners.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "matomo": {
    "eli5": "It’s like a private Google Analytics that you can run on your own server and control completely.",
    "boss": "Matomo is an open-source web analytics platform that gives full control over data collection, storage, and reporting.",
    "sysadmin": "Matomo offers self-hosted or cloud analytics with detailed visitor tracking, goal conversion, heatmaps, and GDPR compliance features.",
    "emoji": "📈🔐📦",
    "categories": ["Analytics", "Web", "Self-hosting"],
    "related": ["web analytics", "plausible analytics", "google analytics", "cookies"],
    "aliases": ["piwik"],
    "use_case": "Using Matomo in an enterprise environment to store visitor analytics locally for compliance reasons.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "event tracking": {
    "eli5": "It’s like keeping count of every time someone clicks a button, watches a video, or fills out a form on your site.",
    "boss": "Event tracking records user actions on a website to understand engagement beyond simple page views.",
    "sysadmin": "Event tracking uses JavaScript or tag managers to log user-triggered actions (clicks, scrolls, video plays) for analytical reporting.",
    "emoji": "🎯🖱️📋",
    "categories": ["Analytics", "Web"],
    "related": ["google analytics", "web analytics", "conversion rate", "page view"],
    "aliases": [],
    "use_case": "Setting up event tracking to see how many people click the ‘Download’ button.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "page view": {
    "eli5": "Every time someone opens a web page, that’s one page view—like turning a page in a book.",
    "boss": "A page view is recorded when a user loads a page on your website; it’s a basic metric of site traffic.",
    "sysadmin": "A page view occurs when a browser loads or reloads a document; most analytics tools trigger this via a JavaScript snippet.",
    "emoji": "📖👀📄",
    "categories": ["Analytics", "Web"],
    "related": ["event tracking", "bounce rate", "google analytics", "web analytics"],
    "aliases": ["pageview"],
    "use_case": "Analyzing which blog posts receive the most page views per week.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "bounce rate": {
    "eli5": "If someone walks into a store and immediately walks out, that’s a bounce—and websites track that too.",
    "boss": "Bounce rate shows the percentage of users who visit one page and leave without interacting further.",
    "sysadmin": "Bounce rate is calculated when a single-page session ends without any further tracked interactions (events or clicks).",
    "emoji": "🏀🚪📉",
    "categories": ["Analytics", "Web"],
    "related": ["page view", "event tracking", "google analytics", "session duration"],
    "aliases": [],
    "use_case": "Using bounce rate to identify poorly engaging landing pages.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "session duration": {
    "eli5": "It’s how long someone hangs out on your site before leaving—like timing a guest’s visit.",
    "boss": "Session duration measures how long a user spends on your website during a single visit.",
    "sysadmin": "Session duration is computed from the time between the first and last user interaction tracked during a session.",
    "emoji": "⏱️🧍‍♂️🌐",
    "categories": ["Analytics", "Web"],
    "related": ["page view", "bounce rate", "event tracking", "conversion rate"],
    "aliases": [],
    "use_case": "Checking average session duration to assess how long visitors engage with content.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "conversion rate": {
    "eli5": "It’s the number of people who do what you hoped they would—like signing up or buying something—out of everyone who visited.",
    "boss": "Conversion rate is the percentage of website visitors who complete a desired goal, such as a signup or purchase.",
    "sysadmin": "Conversion rate = (Number of conversions ÷ Total sessions) × 100; it's key for evaluating funnel performance and A/B tests.",
    "emoji": "✅📈💸",
    "categories": ["Analytics", "Web"],
    "related": ["event tracking", "google analytics", "a/b testing", "bounce rate"],
    "aliases": [],
    "use_case": "Monitoring conversion rates during a marketing campaign to see if changes lead to more sales.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "heatmap": {
    "eli5": "It’s like a thermal camera for your website—it shows where people click, move, or hover the most.",
    "boss": "Heatmaps visually represent user interaction data, like clicks or scrolling behavior, to improve site design and UX.",
    "sysadmin": "A heatmap overlays data visualizations onto web pages to track user interactions, often using client-side event logging.",
    "emoji": "🔥🖱️📊",
    "categories": ["Analytics", "Web"],
    "related": ["conversion rate", "event tracking", "a/b testing", "web analytics"],
    "aliases": [],
    "use_case": "Using heatmaps to optimize the homepage layout based on user click patterns.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "a/b testing": {
    "eli5": "It’s like trying two versions of a lemonade stand sign to see which one brings in more customers.",
    "boss": "A/B testing compares two versions of a webpage or feature to see which performs better based on user behavior.",
    "sysadmin": "A/B testing splits traffic between variant A and B, tracking conversion or event metrics to evaluate statistical significance.",
    "emoji": "🅰️🆚🅱️📊",
    "categories": ["Analytics", "Web"],
    "related": ["conversion rate", "heatmap", "event tracking", "google analytics"],
    "aliases": ["split testing"],
    "use_case": "Running A/B tests on two signup button styles to see which gets more clicks.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cookies": {
    "eli5": "They’re tiny notes your browser keeps to remember who you are when you come back to a site.",
    "boss": "Cookies are small text files stored in a user’s browser to remember login info, preferences, and activity.",
    "sysadmin": "Cookies are HTTP header-based storage mechanisms used to persist session data, preferences, and tracking identifiers on client browsers.",
    "emoji": "🍪🧠🛜",
    "categories": ["Web", "Privacy"],
    "related": ["first-party cookie", "third-party cookie", "secure cookie", "local storage"],
    "aliases": [],
    "use_case": "Using cookies to keep a user logged in across sessions.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "first-party cookie": {
    "eli5": "It’s like a store giving you a loyalty card—it only works at that one store.",
    "boss": "First-party cookies are created by the website you're visiting to remember preferences, logins, or settings.",
    "sysadmin": "First-party cookies are set by the domain shown in the browser's address bar and are typically used for session persistence and user preferences.",
    "emoji": "🍪🏠🔐",
    "categories": ["Web", "Privacy"],
    "related": ["cookies", "third-party cookie", "secure cookie", "httponly cookie"],
    "aliases": [],
    "use_case": "Remembering a user's preferred language when they return to your website.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "third-party cookie": {
    "eli5": "It’s like a stranger watching what stores you visit so they can show you ads later.",
    "boss": "Third-party cookies are created by domains other than the one you're visiting and are often used for ad tracking.",
    "sysadmin": "Third-party cookies are set by embedded scripts or services from other domains (like ad networks), often triggering privacy concerns and restrictions.",
    "emoji": "🍪🕵️‍♂️🌍",
    "categories": ["Web", "Privacy"],
    "related": ["cookies", "first-party cookie", "secure cookie", "samesite cookie"],
    "aliases": [],
    "use_case": "Tracking user behavior across websites for retargeted advertising.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "secure cookie": {
    "eli5": "It’s like putting your cookie in a locked box that only opens on secure (HTTPS) roads.",
    "boss": "A secure cookie is only sent over HTTPS connections, protecting it from eavesdropping.",
    "sysadmin": "Secure cookies have the `Secure` attribute set, ensuring transmission only over encrypted HTTPS to mitigate sniffing attacks.",
    "emoji": "🔒🍪🌐",
    "categories": ["Web", "Privacy"],
    "related": ["cookies", "httponly cookie", "samesite cookie"],
    "aliases": [],
    "use_case": "Using secure cookies for session tokens to avoid exposure over unencrypted connections.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "httponly cookie": {
    "eli5": "It’s a cookie that only your browser can see—not websites or sneaky scripts.",
    "boss": "HttpOnly cookies can’t be accessed by JavaScript, helping protect against XSS attacks.",
    "sysadmin": "An HttpOnly cookie is set with the `HttpOnly` flag, preventing access via client-side scripts, enhancing session security.",
    "emoji": "🍪⛔🧠",
    "categories": ["Web", "Privacy"],
    "related": ["cookies", "secure cookie", "xss", "samesite cookie"],
    "aliases": [],
    "use_case": "Securing authentication tokens by marking them as HttpOnly to prevent theft via JavaScript.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "samesite cookie": {
    "eli5": "It's a cookie that refuses to travel to other websites—like a homebody that stays put.",
    "boss": "SameSite cookies help limit cross-site tracking by restricting when cookies are sent to other domains.",
    "sysadmin": "SameSite is a cookie attribute (`Strict`, `Lax`, or `None`) that controls cross-site request behavior to prevent CSRF attacks.",
    "emoji": "🍪🏡🚫🌐",
    "categories": ["Web", "Privacy"],
    "related": ["cookies", "secure cookie", "third-party cookie", "csrf"],
    "aliases": [],
    "use_case": "Setting `SameSite=Lax` on login cookies to avoid cross-site request forgery.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "local storage": {
    "eli5": "It’s like a small notepad your browser keeps for each website to remember stuff, even when you leave.",
    "boss": "Local storage lets websites store data on your browser that doesn’t disappear when you close the page.",
    "sysadmin": "LocalStorage is a Web Storage API providing persistent key-value storage in the browser with no expiration.",
    "emoji": "💾🧠🌍",
    "categories": ["Web"],
    "related": ["session storage", "cookies", "indexeddb"],
    "aliases": [],
    "use_case": "Saving theme preference or user settings between sessions without using cookies.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "session storage": {
    "eli5": "It’s a chalkboard that gets erased when you close the browser tab.",
    "boss": "Session storage holds website data temporarily and clears it once the browser tab is closed.",
    "sysadmin": "SessionStorage is part of the Web Storage API that stores key-value pairs scoped to a single session and tab.",
    "emoji": "📝🧽🧠",
    "categories": ["Web"],
    "related": ["local storage", "cookies", "indexeddb"],
    "aliases": [],
    "use_case": "Storing temporary form data while filling out a multi-page signup flow.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "indexeddb": {
    "eli5": "It’s a mini filing cabinet in your browser where websites can store more complex data.",
    "boss": "IndexedDB is a browser-based database that lets websites store large amounts of structured data locally.",
    "sysadmin": "IndexedDB is a low-level API for storing structured data (like JSON or blobs) using object stores and indexes for offline-ready apps.",
    "emoji": "🗃️🌐📚",
    "categories": ["Web"],
    "related": ["local storage", "session storage", "database"],
    "aliases": [],
    "use_case": "Using IndexedDB to cache app data for offline use in a progressive web app.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "media queries": {
    "eli5": "They let your website wear different clothes depending on screen size—like jeans for a phone and a suit for a desktop.",
    "boss": "Media queries are CSS rules that adjust a website’s layout and styles based on the device's screen size or type.",
    "sysadmin": "Media queries use the `@media` rule in CSS to apply conditional styling based on viewport size, resolution, orientation, and more.",
    "emoji": "📱🖥️🎨",
    "categories": ["Web"],
    "related": ["responsive design", "device pixel ratio", "touch events"],
    "aliases": [],
    "use_case": "Creating different layouts for mobile and desktop using CSS media queries.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "touch events": {
    "eli5": "They help websites know when you’re poking or swiping your screen instead of clicking a mouse.",
    "boss": "Touch events let websites respond to finger gestures on touchscreens, like taps, swipes, or pinches.",
    "sysadmin": "Touch Events API provides access to input from touch-enabled devices via events like `touchstart`, `touchmove`, and `touchend`.",
    "emoji": "👆📱🔄",
    "categories": ["Web"],
    "related": ["media queries", "device pixel ratio", "event tracking"],
    "aliases": [],
    "use_case": "Adding swipe navigation to a mobile web gallery using touch events.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "device pixel ratio": {
    "eli5": "It’s how many tiny dots your screen uses to draw one ‘regular’ dot—more dots = sharper image.",
    "boss": "Device Pixel Ratio (DPR) compares physical screen pixels to CSS pixels, affecting how crisp content appears.",
    "sysadmin": "DPR is the ratio of physical pixels to device-independent pixels, often used for responsive images and scaling UI elements.",
    "emoji": "🧮🖥️🔍",
    "categories": ["Web"],
    "related": ["media queries", "responsive design", "image optimization"],
    "aliases": [],
    "use_case": "Serving high-resolution images to retina displays using the device’s pixel ratio.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "performance optimization": {
    "eli5": "It’s like cleaning your room so visitors don’t trip over stuff—your website runs faster and smoother.",
    "boss": "Performance optimization improves website speed and responsiveness to enhance user experience and search rankings.",
    "sysadmin": "Performance optimization involves reducing render-blocking resources, minimizing asset size, optimizing network requests, and improving runtime execution.",
    "emoji": "⚡🚀🧹",
    "categories": ["Web"],
    "related": ["lazy loading", "minification", "image compression", "preload"],
    "aliases": [],
    "use_case": "Reducing page load time by lazy-loading images and minifying scripts.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "lazy loading": {
    "eli5": "It means loading stuff only when you need it—like grabbing snacks from the fridge when you're hungry, not all at once.",
    "boss": "Lazy loading delays loading of non-essential content, like images or videos, until it’s visible on screen.",
    "sysadmin": "Lazy loading defers fetching or rendering DOM elements until triggered by viewport intersection or scrolling events to save bandwidth.",
    "emoji": "🛋️📦🕒",
    "categories": ["Web", "Performance Optimization"],
    "related": ["performance optimization", "image compression", "preload"],
    "aliases": [],
    "use_case": "Improving initial load speed by lazy loading product images below the fold.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "image compression": {
    "eli5": "It’s like zipping your pictures so they load faster but still look nice.",
    "boss": "Image compression reduces file size to speed up website loading without noticeably losing quality.",
    "sysadmin": "Image compression uses lossy or lossless algorithms (like WebP, MozJPEG) to minimize file size for faster transfer and rendering.",
    "emoji": "📷📉⚙️",
    "categories": ["Web"],
    "related": ["performance optimization", "lazy loading", "media queries"],
    "aliases": [],
    "use_case": "Compressing product photos to reduce page weight and improve mobile performance.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "minification": {
    "eli5": "It’s like shortening your grocery list by removing all the extra spaces and comments—same info, smaller package.",
    "boss": "Minification shrinks code files by removing spaces, comments, and unused code to boost load speed.",
    "sysadmin": "Minification removes unnecessary characters from CSS, JS, or HTML using tools like UglifyJS or Terser to optimize performance.",
    "emoji": "📄✂️🚀",
    "categories": ["Web"],
    "related": ["performance optimization", "tree shaking", "bundling"],
    "aliases": [],
    "use_case": "Minifying CSS and JS files before deploying a production website.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "debounce": {
    "eli5": "It’s like waiting for someone to stop talking before you reply—prevents too many reactions too fast.",
    "boss": "Debouncing limits how often a function runs, making apps faster and smoother by reducing unnecessary calls.",
    "sysadmin": "Debounce is a programming technique that ensures a function executes only after a defined delay since the last call, often used in input events.",
    "emoji": "⏳🔇📉",
    "categories": ["Web", "Scripting"],
    "related": ["throttle", "event tracking", "performance optimization"],
    "aliases": [],
    "use_case": "Debouncing a search input so it only fetches results after the user stops typing.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "throttle": {
    "eli5": "It’s like putting a speed limit on how often something can happen—even if you keep asking, it’ll only respond so fast.",
    "boss": "Throttling ensures that a function runs at a consistent rate, preventing performance issues from rapid triggers.",
    "sysadmin": "Throttling enforces a limit on how frequently a function can be called over time—unlike debounce, it ensures periodic execution.",
    "emoji": "🚦⏱️📊",
    "categories": ["Web", "Scripting"],
    "related": ["debounce", "performance optimization", "event tracking"],
    "aliases": [],
    "use_case": "Throttling scroll events to avoid janky performance during heavy user interaction.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "preload": {
    "eli5": "It’s like setting out ingredients before cooking—things are ready before you need them.",
    "boss": "Preload is a hint to the browser to fetch important resources early to speed up rendering.",
    "sysadmin": "Using `<link rel='preload'>`, developers can instruct the browser to prioritize loading specific assets like fonts or scripts before rendering begins.",
    "emoji": "⏩📦🔗",
    "categories": ["Web", "Performance Optimization"],
    "related": ["prefetch", "lazy loading", "performance optimization"],
    "aliases": [],
    "use_case": "Preloading fonts to prevent flash of unstyled text (FOIT) during initial page load.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "prefetch": {
    "eli5": "It’s like packing snacks in case you get hungry later—it loads stuff you might need soon.",
    "boss": "Prefetching lets a browser download resources it might need later, improving speed for future pages.",
    "sysadmin": "Using `<link rel='prefetch'>`, a browser loads resources in idle time based on expected future navigation or use.",
    "emoji": "🔮📥🕓",
    "categories": ["Web", "Performance Optimization"],
    "related": ["preload", "lazy loading", "performance optimization"],
    "aliases": [],
    "use_case": "Prefetching the next article's script to speed up navigation in a blog.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "lxd": {
    "eli5": "It’s like having little apartments (containers) inside your computer that act like mini-computers.",
    "boss": "LXD is a container manager for running and managing system containers with virtual machine-like capabilities.",
    "sysadmin": "LXD is a REST API-driven manager for LXC containers, offering user-friendly commands and support for full system containers and VMs.",
    "emoji": "📦🧱🖥️",
    "categories": ["Containers", "Virtualization"],
    "related": ["kubernetes", "microk8s", "containers"],
    "aliases": [],
    "use_case": "Running multiple isolated Ubuntu environments on a single host using LXD.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "kubernetes": {
    "eli5": "It’s like a robot manager that keeps lots of little apps running smoothly across many computers.",
    "boss": "Kubernetes is an open-source platform that automates deploying, scaling, and managing containerized applications.",
    "sysadmin": "Kubernetes orchestrates container workloads across clusters, managing pods, services, volumes, and deployments using declarative configs and controllers.",
    "emoji": "☸️📦🛠️",
    "categories": ["Containers", "DevOps", "Infrastructure"],
    "related": ["k3s", "replicaset", "microk8s"],
    "aliases": ["k8s"],
    "use_case": "Using Kubernetes to manage scalable microservices across multiple cloud servers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "k3s": {
    "eli5": "It’s a smaller, simpler version of Kubernetes that fits on your Raspberry Pi.",
    "boss": "K3s is a lightweight Kubernetes distribution designed for resource-constrained devices and edge computing.",
    "sysadmin": "K3s is a single-binary Kubernetes distribution optimized for IoT, edge, and CI/CD, reducing dependencies and resource usage.",
    "emoji": "🔧☸️🍃",
    "categories": ["Containers", "DevOps", "Infrastructure"],
    "related": ["kubernetes", "microk8s", "lxd"],
    "aliases": [],
    "use_case": "Running k3s on a home lab to deploy small-scale container apps with minimal overhead.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "microk8s": {
    "eli5": "It’s a pocket-sized version of Kubernetes for quick testing and small environments.",
    "boss": "MicroK8s is a minimal, easy-to-install Kubernetes distribution ideal for development and edge devices.",
    "sysadmin": "MicroK8s is a Canonical-supported, snap-based Kubernetes deployment targeting developers, IoT, and lightweight clusters.",
    "emoji": "🧪☸️💡",
    "categories": ["Containers", "DevOps", "Infrastructure"],
    "related": ["kubernetes", "k3s", "lxd"],
    "aliases": [],
    "use_case": "Spinning up a MicroK8s cluster on a laptop for local testing of Kubernetes manifests.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "samba": {
    "eli5": "It’s like giving your Linux computer the ability to share folders with Windows computers.",
    "boss": "Samba is software that lets Linux systems share files and printers with Windows over a network.",
    "sysadmin": "Samba implements SMB/CIFS protocols, enabling interoperability with Windows file and printer sharing, Active Directory, and network browsing.",
    "emoji": "🗂️🔄🖥️",
    "categories": ["Networking", "Filesystems", "Self-hosting"],
    "related": ["file sharing", "windows server", "network drives"],
    "aliases": [],
    "use_case": "Using Samba on a NAS to share a folder with Windows machines in a home network.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "replicaset": {
    "eli5": "It’s like a clone machine in Kubernetes that makes sure you always have a certain number of identical workers.",
    "boss": "A ReplicaSet in Kubernetes ensures a specified number of identical pod copies are always running.",
    "sysadmin": "ReplicaSet is a Kubernetes controller that maintains a stable set of replica pods by monitoring and adjusting the number based on desired state.",
    "emoji": "📎🧬📦",
    "categories": ["Containers", "Infrastructure"],
    "related": ["kubernetes", "deployment", "pod"],
    "aliases": [],
    "use_case": "Using a ReplicaSet to ensure three instances of a web service are always available in a cluster.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "csrf": {
    "eli5": "It’s like someone tricking your browser into pressing a button on a site while you're still logged in.",
    "boss": "Cross-Site Request Forgery (CSRF) is an attack that tricks users into performing actions on a website without their intent.",
    "sysadmin": "CSRF exploits the trust a site has in a user’s browser by forging unauthorized requests, often mitigated using CSRF tokens or SameSite cookies.",
    "emoji": "🎭🖱️🔒",
    "categories": ["Web Security"],
    "related": ["httponly cookie", "samesite cookie", "secure headers"],
    "aliases": ["cross site request forgery"],
    "use_case": "Adding CSRF tokens to form submissions in a banking app to prevent unauthorized transfers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "subresource integrity": {
    "eli5": "It’s like checking the fingerprint of a file before using it to make sure it wasn’t tampered with.",
    "boss": "Subresource Integrity (SRI) ensures that third-party scripts or stylesheets haven’t been altered before loading them into your site.",
    "sysadmin": "SRI uses cryptographic hash attributes in `<script>` or `<link>` tags to verify the integrity of externally loaded resources.",
    "emoji": "🔐📦🧪",
    "categories": ["Web Security"],
    "related": ["secure headers", "cdn", "referrer policy"],
    "aliases": ["sri"],
    "use_case": "Adding SRI hashes to CDN-hosted JavaScript libraries to prevent malicious code injection.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "hsts": {
    "eli5": "It tells browsers, 'Always use the secure door (HTTPS) from now on.'",
    "boss": "HTTP Strict Transport Security (HSTS) forces browsers to use HTTPS connections only, protecting users from downgrade attacks.",
    "sysadmin": "HSTS is an HTTP response header (`Strict-Transport-Security`) that instructs browsers to enforce HTTPS-only communication with a domain.",
    "emoji": "🚫🔓➡️🔐",
    "categories": ["Web Security"],
    "related": ["secure headers", "ssl", "tls", "https"],
    "aliases": ["http strict transport security"],
    "use_case": "Configuring HSTS on a website to prevent users from accidentally visiting the HTTP version.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "referrer policy": {
    "eli5": "It controls how much of your website’s 'where I came from' info gets shared with others.",
    "boss": "Referrer Policy is a browser setting that controls how much referral information is passed when navigating between pages or sites.",
    "sysadmin": "Set via the `Referrer-Policy` header, it dictates whether full, partial, or no referrer URLs are sent in requests for privacy and security.",
    "emoji": "🔗🚷🔍",
    "categories": ["Web Security"],
    "related": ["secure headers", "hsts", "subresource integrity"],
    "aliases": [],
    "use_case": "Using `Referrer-Policy: strict-origin` to hide query strings when users navigate away from your site.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "permissions policy": {
    "eli5": "It’s like telling your browser which tools (like camera or location) it’s allowed to use on a website.",
    "boss": "Permissions Policy allows websites to control which features like camera, mic, or fullscreen are allowed to run in the browser.",
    "sysadmin": "Formerly Feature-Policy, it's an HTTP header or meta tag restricting access to powerful browser features like geolocation or clipboard.",
    "emoji": "🛑📍🎙️",
    "categories": ["Web Security"],
    "related": ["secure headers", "referrer policy", "privacy"],
    "aliases": ["feature policy"],
    "use_case": "Restricting iframe access to geolocation using `Permissions-Policy: geolocation=()`.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "secure headers": {
    "eli5": "They’re like instructions on your front door telling visitors how to behave safely.",
    "boss": "Secure headers are HTTP response headers that help protect websites from common attacks like XSS, clickjacking, and content sniffing.",
    "sysadmin": "Secure headers include HSTS, CSP, X-Frame-Options, Referrer-Policy, and others that enforce security controls at the browser level.",
    "emoji": "🛡️📨🧱",
    "categories": ["Web Security"],
    "related": ["hsts", "referrer policy", "permissions policy", "subresource integrity"],
    "aliases": [],
    "use_case": "Using a middleware to automatically set secure headers in a Node.js app.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "version control": {
    "eli5": "It’s like having a time machine for your code—you can rewind, fast forward, or branch off to try new things.",
    "boss": "Version control systems track changes to code over time, allowing teams to collaborate and revert mistakes easily.",
    "sysadmin": "Version control manages source code history using tools like Git, enabling branching, merging, tagging, and rollback.",
    "emoji": "🕰️📁🔁",
    "categories": ["Version Control", "Collaboration"],
    "related": ["git", "github", "branch", "commit"],
    "aliases": [],
    "use_case": "Using version control to track changes and collaborate on a web development project.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "git": {
    "eli5": "Git helps you save your work and go back if you mess up—like checkpoint saves in a video game.",
    "boss": "Git is a distributed version control system that helps developers track, share, and manage code changes.",
    "sysadmin": "Git stores snapshots of file states, supports branching and merging, and enables decentralized workflows through commits and repositories.",
    "emoji": "🔧🗃️🔄",
    "categories": ["Version Control"],
    "related": ["github", "gitlab", "commit", "branch"],
    "aliases": [],
    "use_case": "Using Git to manage feature development in separate branches before merging into production.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "github": {
    "eli5": "It’s like social media for code—where developers share, review, and work on code together.",
    "boss": "GitHub is a platform for hosting Git repositories with tools for collaboration, CI/CD, and project management.",
    "sysadmin": "GitHub offers Git-based source control with web UI, issue tracking, pull requests, GitHub Actions, and integration with third-party tools.",
    "emoji": "🐙📂🌐",
    "categories": ["Version Control", "Collaboration"],
    "related": ["git", "github actions", "pull request", "ci/cd"],
    "aliases": [],
    "use_case": "Hosting an open-source library on GitHub and using pull requests for contributions.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gitlab": {
    "eli5": "It’s like GitHub’s cousin that also helps with building and testing your code automatically.",
    "boss": "GitLab is a DevOps platform combining Git repository hosting with built-in CI/CD and issue tracking.",
    "sysadmin": "GitLab provides source control, CI/CD pipelines, container registry, and project planning features in a single interface.",
    "emoji": "🦊🔁💻",
    "categories": ["Version Control", "Collaboration", "CI/CD"],
    "related": ["git", "ci/cd", "pull request"],
    "aliases": [],
    "use_case": "Using GitLab to host private repositories and automate builds with GitLab CI.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "bitbucket": {
    "eli5": "It’s another place to store your code and work on it with friends, like GitHub or GitLab.",
    "boss": "Bitbucket is a code hosting and collaboration platform by Atlassian that supports Git and Mercurial.",
    "sysadmin": "Bitbucket offers Git repository hosting with Jira integration, CI/CD (Bitbucket Pipelines), and permissions management.",
    "emoji": "📦🐳🔗",
    "categories": ["Version Control", "Collaboration"],
    "related": ["git", "branch", "pull request"],
    "aliases": [],
    "use_case": "Using Bitbucket for source control in an organization that already uses Jira for project tracking.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "commit": {
    "eli5": "It’s like saving a snapshot of your project so you can go back to it later.",
    "boss": "A commit saves a set of changes in version control, acting as a checkpoint in the project’s history.",
    "sysadmin": "A Git commit records staged changes in the repository along with a message and unique hash ID.",
    "emoji": "💾📝🔐",
    "categories": ["Version Control"],
    "related": ["git", "branch", "merge", "pull request"],
    "aliases": [],
    "use_case": "Writing meaningful commit messages to document progress during development.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "branch": {
    "eli5": "It’s like making a copy of your project so you can try new ideas without messing up the original.",
    "boss": "Branches allow teams to work on features or fixes in isolation before merging them into the main project.",
    "sysadmin": "A branch in Git is a pointer to a commit, enabling concurrent development and isolated testing of changes.",
    "emoji": "🌿🧪📂",
    "categories": ["Version Control"],
    "related": ["git", "commit", "merge", "pull request"],
    "aliases": [],
    "use_case": "Creating a new branch to develop a login feature separately from the main codebase.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "merge": {
    "eli5": "It’s like putting two versions of a story together into one final copy.",
    "boss": "Merging combines code changes from different branches into a single unified version.",
    "sysadmin": "Git merge integrates commits from a source branch into a target branch, preserving history and resolving conflicts.",
    "emoji": "🔀📘🧩",
    "categories": ["Version Control"],
    "related": ["branch", "commit", "pull request"],
    "aliases": [],
    "use_case": "Merging a feature branch into `main` after successful testing.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "pull request": {
    "eli5": "It’s like asking your team, 'Can you check and add my changes to the main story?'",
    "boss": "A pull request is a request to review and merge code changes from one branch into another, often with comments and approvals.",
    "sysadmin": "Pull requests in GitHub or GitLab facilitate code review, discussion, and testing before merging branches.",
    "emoji": "📬🔍🧪",
    "categories": ["Version Control", "Collaboration"],
    "related": ["git", "merge", "branch", "commit"],
    "aliases": ["pr"],
    "use_case": "Submitting a pull request for code review after finishing a new feature.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ci/cd": {
    "eli5": "It’s like a robot that tests and ships your code every time you make a change.",
    "boss": "CI/CD automates the building, testing, and deployment of code changes to speed up development and reduce errors.",
    "sysadmin": "CI/CD stands for Continuous Integration and Continuous Deployment/Delivery—pipelines that automate code validation and deployment across environments.",
    "emoji": "🤖🚢🧪",
    "categories": ["DevOps"],
    "related": ["github actions", "gitlab", "netlify deploys", "vercel previews"],
    "aliases": ["continuous integration", "continuous deployment"],
    "use_case": "Using CI/CD to automatically test and deploy code to staging after each push to GitHub.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "github actions": {
    "eli5": "They’re like little robots that do jobs for you when something happens in your GitHub project.",
    "boss": "GitHub Actions automate workflows like testing and deployment directly from your GitHub repositories.",
    "sysadmin": "GitHub Actions run configurable YAML workflows triggered by repository events, supporting build/test/deploy automation via runners and containers.",
    "emoji": "⚙️🤖📦",
    "categories": ["DevOps", "Version Control"],
    "related": ["ci/cd", "github", "netlify deploys"],
    "aliases": [],
    "use_case": "Using GitHub Actions to run unit tests every time someone submits a pull request.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "netlify deploys": {
    "eli5": "It’s like auto-uploading your updated website every time you make a change.",
    "boss": "Netlify Deploys automatically publish your site whenever you push new code to a connected Git repo.",
    "sysadmin": "Netlify listens for Git events and runs build scripts to deploy static or Jamstack sites with preview URLs and atomic updates.",
    "emoji": "🚀🌐🔁",
    "categories": ["Web", "DevOps"],
    "related": ["ci/cd", "github actions", "static site generator", "jamstack"],
    "aliases": [],
    "use_case": "Triggering a Netlify deploy every time changes are pushed to the `main` branch.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "vercel previews": {
    "eli5": "Every time you make a change, it gives you a sneak peek before showing it to the world.",
    "boss": "Vercel Previews provide temporary URLs for each pull request or branch so teams can review changes before going live.",
    "sysadmin": "Vercel auto-deploys preview environments from Git branches or PRs, enabling visual testing with custom domains and rollback.",
    "emoji": "👀🌍📸",
    "categories": ["Web", "DevOps"],
    "related": ["netlify deploys", "ci/cd", "github", "jamstack"],
    "aliases": [],
    "use_case": "Using Vercel Previews to show stakeholders the staging version of a new landing page.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "static site generator": {
    "eli5": "It’s like baking a cake ahead of time so it’s ready to serve fast—your website is pre-made, not built on demand.",
    "boss": "Static site generators turn content and templates into ready-to-serve HTML pages, boosting performance and security.",
    "sysadmin": "Static site generators like Hugo or Jekyll compile markdown and templates into HTML at build time, often used in Jamstack.",
    "emoji": "🏗️📄⚡",
    "categories": ["Web"],
    "related": ["jamstack", "build time", "incremental static regeneration"],
    "aliases": ["ssg"],
    "use_case": "Using Eleventy to generate a fast-loading personal blog with no backend server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "build time": {
    "eli5": "It’s the time your site spends getting dressed and ready before going out to the internet.",
    "boss": "Build time is when a static site or app is compiled or assembled before deployment to a server or CDN.",
    "sysadmin": "Build time refers to the process where source code, templates, and assets are compiled into a deployable format, often via CI/CD pipelines.",
    "emoji": "🏗️⏱️📦",
    "categories": ["Web", "DevOps"],
    "related": ["static site generator", "jamstack", "ci/cd", "incremental static regeneration"],
    "aliases": [],
    "use_case": "Monitoring build time in Netlify to speed up large blog site deployments.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "incremental static regeneration": {
    "eli5": "It’s like updating only the parts of your website that change, instead of rebuilding the whole thing.",
    "boss": "Incremental Static Regeneration (ISR) lets static websites update individual pages after deployment without a full rebuild.",
    "sysadmin": "ISR is a feature in frameworks like Next.js allowing statically generated pages to be re-rendered on-demand or on a timer, combining static speed with dynamic flexibility.",
    "emoji": "🔁⚡🧱",
    "categories": ["Web"],
    "related": ["static site generator", "build time", "jamstack"],
    "aliases": ["isr"],
    "use_case": "Using ISR to regenerate only blog post pages when content updates in a headless CMS.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "server-side rendering": {
    "eli5": "It’s like the chef making your burger before you walk in, instead of giving you raw ingredients.",
    "boss": "Server-side rendering (SSR) builds web pages on the server and sends the finished HTML to the browser, improving SEO and initial load speed.",
    "sysadmin": "SSR renders content on each request via backend logic, commonly used in frameworks like Next.js or Nuxt for dynamic data and SEO advantages.",
    "emoji": "🧑‍🍳🌐📤",
    "categories": ["Web"],
    "related": ["client-side rendering", "hybrid rendering", "static site generator"],
    "aliases": ["ssr"],
    "use_case": "Using SSR to improve SEO for a product page that displays dynamic inventory data.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "client-side rendering": {
    "eli5": "It’s like a make-your-own-sundae bar—you get the ingredients, and your browser does the assembling.",
    "boss": "Client-side rendering (CSR) builds web pages in the user’s browser, allowing for smoother interactions but slower first loads.",
    "sysadmin": "CSR delivers a basic HTML shell and relies on JavaScript (usually via SPA frameworks) to render content on the client after load.",
    "emoji": "🧁🧠💻",
    "categories": ["Web"],
    "related": ["server-side rendering", "hybrid rendering", "static site generator"],
    "aliases": ["csr"],
    "use_case": "Using React for CSR to build a dynamic dashboard that updates live data after load.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "hybrid rendering": {
    "eli5": "It’s like a restaurant where some meals are made ahead and others cooked fresh when you order—best of both worlds.",
    "boss": "Hybrid rendering combines server-side and client-side rendering to optimize both speed and interactivity.",
    "sysadmin": "In frameworks like Next.js, hybrid rendering allows per-route control over SSR, CSR, and static generation depending on the page’s content type.",
    "emoji": "🍱🧠🧑‍🍳",
    "categories": ["Web"],
    "related": ["server-side rendering", "client-side rendering", "incremental static regeneration"],
    "aliases": [],
    "use_case": "Using hybrid rendering to pre-render marketing pages while dynamically rendering user dashboards.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "jamstack": {
    "eli5": "It’s like a pre-packed lunch—you prepare everything ahead so it’s fast and ready to go.",
    "boss": "Jamstack is a modern web architecture that uses pre-rendered static content served via CDNs, backed by APIs and JavaScript.",
    "sysadmin": "Jamstack (JavaScript, APIs, Markup) decouples the frontend from the backend, using static site generators, headless CMSs, and serverless functions for performance and scalability.",
    "emoji": "🍓🔗📦",
    "categories": ["Web"],
    "related": ["static site generator", "vercel previews", "netlify deploys", "incremental static regeneration"],
    "aliases": [],
    "use_case": "Building a fast-loading blog using Jamstack with a headless CMS and Netlify for deployment.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "web fonts": {
    "eli5": "They’re fancy text styles your website downloads so it can look cooler than plain old fonts.",
    "boss": "Web fonts are downloadable typefaces that improve design consistency across devices and browsers.",
    "sysadmin": "Web fonts are served via CSS `@font-face` or external services like Google Fonts to deliver typography independent of system defaults.",
    "emoji": "🔤🌐🎨",
    "categories": ["Web"],
    "related": ["google fonts", "font display", "fout", "foit"],
    "aliases": [],
    "use_case": "Using web fonts to apply brand-consistent typography on a landing page.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "google fonts": {
    "eli5": "It’s a free online font library your website can use to make text look stylish.",
    "boss": "Google Fonts provides a library of web-safe fonts that designers and developers can integrate into websites for free.",
    "sysadmin": "Google Fonts hosts open-source font files via CDN, used by linking CSS stylesheets or embedding `@import` in stylesheets.",
    "emoji": "🔠📡🌍",
    "categories": ["Web"],
    "related": ["web fonts", "font display", "fout", "foit"],
    "aliases": [],
    "use_case": "Embedding Google Fonts into a portfolio site for consistent typography across browsers.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "font display": {
    "eli5": "It’s how a website decides whether to show fallback text or wait for your fancy font to load.",
    "boss": "Font display controls how web fonts load and render—instantly with fallback or delayed until fully ready.",
    "sysadmin": "The `font-display` CSS property determines whether text uses fallback fonts, blocks rendering, or swaps in custom fonts when available.",
    "emoji": "🔤⌛👀",
    "categories": ["Web"],
    "related": ["web fonts", "google fonts", "fout", "foit"],
    "aliases": [],
    "use_case": "Using `font-display: swap` to prevent blank text while a web font loads.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "fout": {
    "eli5": "It’s when your site shows the backup font for a second before switching to the pretty one.",
    "boss": "Flash of Unstyled Text (FOUT) is a momentary appearance of fallback fonts before the custom font loads.",
    "sysadmin": "FOUT occurs when text is rendered using a fallback font until the custom web font is loaded, often mitigated using `font-display: swap`.",
    "emoji": "⚡🔤👓",
    "categories": ["Web"],
    "related": ["font display", "web fonts", "foit"],
    "aliases": ["flash of unstyled text"],
    "use_case": "Accepting FOUT behavior on mobile to prioritize quick content visibility.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "foit": {
    "eli5": "It’s when your website hides all text until the fancy font finishes loading—like waiting to change clothes before showing up.",
    "boss": "Flash of Invisible Text (FOIT) happens when a browser hides text until the custom font loads, causing a temporary blank area.",
    "sysadmin": "FOIT is caused by `font-display: block`, where browsers delay rendering text until the web font is fully available.",
    "emoji": "👻🔠📴",
    "categories": ["Web"],
    "related": ["fout", "font display", "web fonts"],
    "aliases": ["flash of invisible text"],
    "use_case": "Reducing FOIT by setting `font-display: fallback` in font styles.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mobile web": {
    "eli5": "It’s just the internet—but designed to look good and work smoothly on your phone.",
    "boss": "Mobile web refers to websites optimized for viewing and interaction on smartphones and tablets.",
    "sysadmin": "Mobile web uses responsive design, viewport settings, and mobile-first CSS/media queries to ensure usability across screen sizes.",
    "emoji": "📱🌐📏",
    "categories": ["Web"],
    "related": ["viewport", "media queries", "responsive design"],
    "aliases": [],
    "use_case": "Designing a product landing page to load quickly and render well on mobile browsers.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "viewport": {
    "eli5": "It’s the window your phone or browser uses to look at a website—different sizes mean different views.",
    "boss": "Viewport defines the visible area of a webpage within the browser window, especially important for mobile responsiveness.",
    "sysadmin": "The viewport is controlled via the `<meta name='viewport'>` tag, affecting scaling and layout on different device screens.",
    "emoji": "🪟📐📱",
    "categories": ["Web"],
    "related": ["mobile web", "media queries", "responsive design"],
    "aliases": [],
    "use_case": "Using the viewport meta tag to enable proper scaling on smartphones.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gpu passthrough": {
    "eli5": "It’s like letting a virtual computer borrow your graphics card to play games or do video editing.",
    "boss": "GPU passthrough allows a virtual machine to directly access a physical GPU for improved graphics performance.",
    "sysadmin": "GPU passthrough uses technologies like VT-d and IOMMU to assign a physical GPU to a VM, bypassing the host OS.",
    "emoji": "🎮💻🚀",
    "categories": ["Virtualization", "Hardware"],
    "related": ["nested virtualization", "vm templates", "cloning"],
    "aliases": [],
    "use_case": "Running Windows in a VM with GPU passthrough for gaming on a Linux host.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "nested virtualization": {
    "eli5": "It’s like running a computer inside a computer that’s inside another computer—super Inception style.",
    "boss": "Nested virtualization enables running a virtual machine inside another virtual machine for testing or dev environments.",
    "sysadmin": "Nested virtualization leverages hypervisor extensions (like Intel VT-x or AMD-V) to allow a VM to host additional VMs.",
    "emoji": "🧠📦📦",
    "categories": ["Virtualization"],
    "related": ["gpu passthrough", "vm templates", "cloning"],
    "aliases": [],
    "use_case": "Testing Proxmox inside a VM on a cloud provider that supports nested virtualization.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "vswitch": {
    "eli5": "It’s like a digital power strip for connecting virtual computers together on the same network.",
    "boss": "A vSwitch (virtual switch) is software that connects virtual machines to each other and the physical network.",
    "sysadmin": "vSwitches simulate Ethernet switching at the hypervisor level, enabling inter-VM communication and external network access via bridges.",
    "emoji": "🔌📡🖧",
    "categories": ["Virtualization", "Networking"],
    "related": ["nested virtualization", "cloning", "bonding"],
    "aliases": ["virtual switch"],
    "use_case": "Using a vSwitch in VMware to isolate internal traffic between test VMs.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "snapshots": {
    "eli5": "They’re like save points in a video game—you can go back to them if something breaks.",
    "boss": "Snapshots capture the exact state of a virtual machine or filesystem at a point in time for recovery.",
    "sysadmin": "Snapshots preserve VM memory, disk state, and settings for rollback, backup, or cloning, often used in hypervisors and ZFS.",
    "emoji": "📸💾⏪",
    "categories": ["Virtualization", "Backup", "Storage"],
    "related": ["zfs snapshot", "cloning", "vm templates"],
    "aliases": [],
    "use_case": "Taking a snapshot before applying system updates on a production VM.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "vm templates": {
    "eli5": "They’re like pre-built blueprints for new virtual computers—just copy and go.",
    "boss": "VM templates are preconfigured virtual machines used to quickly deploy new VMs with consistent settings.",
    "sysadmin": "A VM template is a base image with pre-installed OS and settings, allowing efficient provisioning and standardization of VMs.",
    "emoji": "🧱🖥️📤",
    "categories": ["Virtualization"],
    "related": ["cloning", "snapshots", "nested virtualization"],
    "aliases": [],
    "use_case": "Using VM templates to deploy multiple Ubuntu VMs with the same config in Proxmox.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cloning": {
    "eli5": "It’s like making a twin of your virtual computer to use for testing or backups.",
    "boss": "Cloning creates an identical copy of a VM or disk, useful for testing, scaling, or backups.",
    "sysadmin": "Cloning duplicates a VM, including its storage and config, either as a full or linked clone, depending on the platform.",
    "emoji": "👯🖥️📦",
    "categories": ["Virtualization"],
    "related": ["vm templates", "snapshots", "nested virtualization"],
    "aliases": [],
    "use_case": "Cloning a base VM to quickly spin up multiple isolated test environments.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ha": {
    "eli5": "It makes sure your services stay up and running—even if something crashes.",
    "boss": "High Availability (HA) ensures systems automatically recover from failure, minimizing downtime.",
    "sysadmin": "HA uses redundancy, failover mechanisms, and clustering to maintain service uptime during hardware or software failures.",
    "emoji": "🔁🛡️⚙️",
    "categories": ["Infrastructure"],
    "related": ["snapshots", "bonding", "docker"],
    "aliases": ["high availability"],
    "use_case": "Setting up HA for Docker containers using Keepalived and a floating IP.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "docker": {
    "eli5": "It’s like a magic lunchbox—you pack up an app and everything it needs to run, and it works anywhere.",
    "boss": "Docker packages apps into containers with their dependencies so they can run consistently across environments.",
    "sysadmin": "Docker uses containerization to isolate applications in lightweight, portable units with their runtime, libraries, and configs.",
    "emoji": "🐳📦🚀",
    "categories": ["Containers"],
    "related": ["docker compose", "podman", "lxc", "haproxy"],
    "aliases": [],
    "use_case": "Running a WordPress site in a Docker container on your local machine.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "docker compose": {
    "eli5": "It’s like a recipe for your app—it tells Docker what to cook and how to serve everything together.",
    "boss": "Docker Compose simplifies managing multi-container apps with a single YAML file defining services and configurations.",
    "sysadmin": "Docker Compose reads a `docker-compose.yml` file to spin up multiple services with shared networks, volumes, and environment configs.",
    "emoji": "📜🐳🛠️",
    "categories": ["Containers"],
    "related": ["docker", "podman", "lxc"],
    "aliases": [],
    "use_case": "Using Docker Compose to run a web app, database, and cache in one command.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "podman": {
    "eli5": "It’s like Docker’s quieter cousin—it runs containers but doesn’t need a big boss program running in the background.",
    "boss": "Podman is a daemonless container engine compatible with Docker that emphasizes security and rootless containers.",
    "sysadmin": "Podman runs OCI containers and pods without requiring a daemon, supporting rootless execution, systemd integration, and Docker CLI compatibility.",
    "emoji": "🍵📦🔧",
    "categories": ["Containers"],
    "related": ["docker", "docker compose", "lxc"],
    "aliases": [],
    "use_case": "Using Podman to run containers in rootless mode on a secure server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "lxc": {
    "eli5": "It’s like giving each app its own little jail cell with its own kitchen and bathroom.",
    "boss": "LXC is a lightweight virtualization method that runs multiple isolated Linux systems on a single host.",
    "sysadmin": "LXC (Linux Containers) provides OS-level virtualization using cgroups and namespaces to isolate environments.",
    "emoji": "🏗️🐧🔒",
    "categories": ["Containers", "Virtualization"],
    "related": ["lxd", "docker", "podman"],
    "aliases": ["linux containers"],
    "use_case": "Using LXC to run an Ubuntu container alongside a CentOS one on the same host.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "haproxy": {
    "eli5": "It’s like a smart traffic cop that directs cars (users) to the right lane (server).",
    "boss": "HAProxy is a reliable open-source load balancer that distributes traffic across multiple servers.",
    "sysadmin": "HAProxy is a high-performance TCP/HTTP load balancer and reverse proxy with advanced routing, health checks, and SSL termination.",
    "emoji": "🚦🧭📶",
    "categories": ["Networking", "Infrastructure"],
    "related": ["docker", "ha", "reverse proxy"],
    "aliases": [],
    "use_case": "Using HAProxy to balance traffic between multiple web servers behind a single IP.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "jellyfin": {
    "eli5": "It’s like your own private Netflix that you run at home and control yourself.",
    "boss": "Jellyfin is a free, open-source media server that lets users organize and stream movies, TV shows, and music.",
    "sysadmin": "Jellyfin offers self-hosted media library management with support for transcoding, user profiles, and web-based streaming.",
    "emoji": "🎬🎵🖥️",
    "categories": ["Self-hosting"],
    "related": ["plex", "emby", "docker"],
    "aliases": [],
    "use_case": "Setting up Jellyfin on a Raspberry Pi to stream your local movie collection to smart TVs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "plex": {
    "eli5": "It’s like a digital DVD shelf that you can watch from anywhere—even on your phone.",
    "boss": "Plex is a media server that organizes your personal media and streams it to various devices with a polished interface.",
    "sysadmin": "Plex offers centralized media library management, transcoding, remote access, and integration with Plex’s online content services.",
    "emoji": "📺🍿🌐",
    "categories": ["Self-hosting"],
    "related": ["jellyfin", "emby", "docker"],
    "aliases": [],
    "use_case": "Using Plex to stream your personal movie collection from a NAS to a smart TV and mobile devices.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "emby": {
    "eli5": "It’s another home media server—like Jellyfin or Plex—but with some features behind a paywall.",
    "boss": "Emby is a media server for managing and streaming personal content, offering both free and premium features.",
    "sysadmin": "Emby provides cross-platform media management, user profiles, and transcoding, with optional paid features like DVR and app support.",
    "emoji": "📼🧑‍💻📡",
    "categories": ["Self-hosting"],
    "related": ["plex", "jellyfin", "docker"],
    "aliases": [],
    "use_case": "Hosting Emby on a home server to stream family videos to multiple smart TVs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "zfs snapshot": {
    "eli5": "It’s like a magical photo of your data that you can use to go back in time if something breaks.",
    "boss": "ZFS snapshots are instant, space-efficient copies of your data that can be used for backups or rollbacks.",
    "sysadmin": "ZFS snapshots capture block-level changes in the filesystem, enabling rollback, replication, and backup consistency with minimal overhead.",
    "emoji": "📸🧊🗃️",
    "categories": ["Filesystems", "Backup"],
    "related": ["snapshots", "zfs", "cloning"],
    "aliases": [],
    "use_case": "Creating ZFS snapshots before applying updates to a file server for rollback protection.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "bonding": {
    "eli5": "It’s like tying two internet cables together to get more speed or backup in case one breaks.",
    "boss": "Network bonding combines multiple network interfaces into one for increased bandwidth or redundancy.",
    "sysadmin": "Bonding uses link aggregation techniques (like LACP or active-backup) to combine NICs at the OS level for performance or failover.",
    "emoji": "🪢🌐📶",
    "categories": ["Networking", "Infrastructure"],
    "related": ["vswitch", "ha", "load balancer"],
    "aliases": ["link aggregation"],
    "use_case": "Bonding two Ethernet ports on a NAS for faster transfers and failover protection.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "installable app": {
    "eli5": "Like saving a website to your phone's home screen so it works almost like a regular app.",
    "boss": "An installable app is a web-based application that users can add to their device's home screen for faster, app-like access.",
    "sysadmin": "Installable apps refer to Progressive Web Apps (PWAs) that utilize a web app manifest and service worker to allow users to install them on their devices, enabling features like offline usage and push notifications.",
    "emoji": "📲🌐📥",
    "categories": ["Web","Mobile"],
    "related": ["add to home screen", "progressive web app", "web app manifest", "background sync"],
    "aliases": ["pwa installable"],
    "use_case": "A user installs a budgeting PWA on their phone to manage finances offline without going through the app store.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "add to home screen": {
    "eli5": "It's like pinning your favorite website to your phone for quick access.",
    "boss": "A feature allowing users to save web apps to their home screen for an app-like experience.",
    "sysadmin": "This feature is part of Progressive Web Apps (PWAs), utilizing a manifest and service worker to create a shortcut icon on mobile or desktop devices, enabling quick launches and full-screen operation.",
    "emoji": "📲➕🏠",
    "categories": ["Web","Mobile"],
    "related": ["installable app", "progressive web app", "web app manifest"],
    "aliases": ["a2hs"],
    "use_case": "A news site prompts users to 'Add to Home Screen' for faster daily updates with fewer taps.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "background sync": {
    "eli5": "It’s like sending a message while offline, and your phone automatically sends it once you’re back online.",
    "boss": "Background Sync lets web apps schedule tasks to complete later when a device regains connectivity.",
    "sysadmin": "A service worker API that allows deferred actions (like sending POST data) to execute when the device reconnects to the internet, maintaining app functionality offline.",
    "emoji": "🔄📡📶",
    "categories": ["Web","Mobile"],
    "related": ["progressive web app", "installable app", "add to home screen"],
    "aliases": [],
    "use_case": "A user fills out a support form on a web app offline, and it's submitted automatically once they reconnect.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "home lab": {
    "eli5": "Like building your own mini data center at home to play with tech stuff safely.",
    "boss": "A home lab is a private setup of servers, networking, and software used for learning, testing, or running personal projects.",
    "sysadmin": "A self-managed environment where IT professionals or hobbyists use virtualization, containerization, and automation to simulate production scenarios or host services for experimentation.",
    "emoji": "🏠🧪🖥️",
    "categories": ["Infrastructure","Virtualization","Self-hosting"],
    "related": ["proxmox", "virtualbox", "rackmount server", "diy nas"],
    "aliases": ["homelab"],
    "use_case": "A sysadmin uses a home lab running Proxmox to test out an Ansible deployment strategy before rolling it to production.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "rackmount server": {
    "eli5": "A big, flat computer that slides into a tech closet like a DVD into a player.",
    "boss": "Rackmount servers are flat, horizontal systems designed to be mounted in standardized server racks for organized IT infrastructure.",
    "sysadmin": "A 1U-4U form factor server that mounts in a 19-inch rack, offering scalability and centralized management in data centers or home labs.",
    "emoji": "🗄️🧱🖥️",
    "categories": ["Infrastructure","Hardware"],
    "related": ["home lab", "managed switch", "proxmox"],
    "aliases": ["rack server"],
    "use_case": "A user mounts a used Dell PowerEdge in their home lab rack to host VMs using ESXi.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mini pc": {
    "eli5": "A tiny computer that fits in your hand but does almost everything a big one can.",
    "boss": "Mini PCs are compact computers used for basic workloads, media centers, or light server tasks.",
    "sysadmin": "Small-form-factor systems with low power consumption and enough resources to act as edge devices, media servers, or lightweight virtualization nodes.",
    "emoji": "🖥️📦🔌",
    "categories": ["Hardware","Self-hosting"],
    "related": ["nuc", "home lab", "diy nas"],
    "aliases": [],
    "use_case": "Using a Mini PC as a low-power Plex server for home streaming.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "nuc": {
    "eli5": "A super tiny computer made by Intel that still packs a punch.",
    "boss": "Intel's NUC (Next Unit of Computing) is a compact PC often used in home labs, kiosks, and media centers.",
    "sysadmin": "Intel NUCs are ultra-small-form-factor PCs that offer configurable CPU/RAM/storage options, ideal for silent, energy-efficient computing in confined spaces.",
    "emoji": "🔌🧠💻",
    "categories": ["Hardware","Self-hosting"],
    "related": ["mini pc", "home lab", "diy nas"],
    "aliases": ["next unit of computing"],
    "use_case": "Deploying Home Assistant OS on an Intel NUC to control an entire smart home setup.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "diy nas": {
    "eli5": "Building your own digital closet to store and share files with your household.",
    "boss": "A DIY NAS is a custom-built storage server for backups, media, or file sharing, often using open-source software.",
    "sysadmin": "User-built network-attached storage using commodity hardware and software like TrueNAS, often for media, backups, or VM storage in home labs.",
    "emoji": "🛠️💾📡",
    "categories": ["Storage","Self-hosting"],
    "related": ["zfs", "btrfs", "home lab", "external drive"],
    "aliases": ["build your own nas"],
    "use_case": "Someone builds a DIY NAS using TrueNAS SCALE and old PC parts to store family videos and photos.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "external drive": {
    "eli5": "A pocket-sized box that holds your files and plugs into your computer with a cable.",
    "boss": "An external drive is a portable storage device used to back up data or transfer files between systems.",
    "sysadmin": "USB, Thunderbolt, or eSATA storage media (HDD or SSD) used for backups, data recovery, or temporary off-host storage.",
    "emoji": "💽🔌📁",
    "categories": ["Storage"],
    "related": ["backup", "diy nas", "raid"],
    "aliases": ["external hdd"],
    "use_case": "Using a 2TB external drive to back up a laptop before upgrading the OS.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "raid": {
    "eli5": "Think of multiple hard drives working together like a team—some boost speed, others add safety.",
    "boss": "RAID is a method of combining multiple drives to improve performance, redundancy, or both.",
    "sysadmin": "Redundant Array of Independent Disks (RAID) is a data storage method that distributes or mirrors data across multiple drives using levels like RAID 0, 1, 5, 6, and 10.",
    "emoji": "🧱📁🛡️",
    "categories": ["Storage"],
    "related": ["zfs", "btrfs", "raidz", "diy nas"],
    "aliases": [],
    "use_case": "A small business uses RAID 5 in their NAS for performance and fault tolerance.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "raidz": {
    "eli5": "A special kind of RAID used by ZFS that's like putting guards in your file vault.",
    "boss": "RAIDZ is a ZFS-specific RAID type that combines redundancy and efficient storage for fault tolerance.",
    "sysadmin": "ZFS RAIDZ is a parity-based software RAID similar to RAID 5/6, providing single, double, or triple parity (RAIDZ1, 2, 3) with variable block sizes and integrated checksumming.",
    "emoji": "🧱🔐📊",
    "categories": ["Storage"],
    "related": ["zfs", "raid", "diy nas"],
    "aliases": [],
    "use_case": "A homelabber uses RAIDZ2 in TrueNAS to safely store large family media collections.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "zfs": {
    "eli5": "A smart storage system that protects your files from getting messed up.",
    "boss": "ZFS is an advanced file system that offers data integrity, compression, snapshots, and built-in RAID.",
    "sysadmin": "ZFS (Zettabyte File System) is a robust file system and volume manager supporting copy-on-write, self-healing, snapshots, and RAIDZ levels for storage pools.",
    "emoji": "🧠💾🛡️",
    "categories": ["Storage","Filesystems"],
    "related": ["raidz", "diy nas", "btrfs", "zfs snapshot"],
    "aliases": [],
    "use_case": "Using ZFS with RAIDZ on a TrueNAS SCALE server to host media and VM backups.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "btrfs": {
    "eli5": "A filing cabinet that tracks everything and can undo mistakes.",
    "boss": "Btrfs is a modern Linux file system with features like snapshots, compression, and RAID-like functionality.",
    "sysadmin": "Btrfs (B-tree FS) is a copy-on-write file system for Linux with support for snapshots, checksums, subvolumes, and native RAID capabilities.",
    "emoji": "🗃️🔄🧩",
    "categories": ["Filesystems","Storage"],
    "related": ["zfs", "raid", "diy nas"],
    "aliases": [],
    "use_case": "Setting up a low-power Debian NAS with Btrfs to enable weekly snapshots and rollback features.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "afp": {
    "eli5": "A special way older Macs used to share files like neighbors passing notes.",
    "boss": "AFP is Apple's legacy file-sharing protocol used mainly with older macOS systems.",
    "sysadmin": "Apple Filing Protocol (AFP) is a network protocol from Apple for file services on macOS, now deprecated in favor of SMB.",
    "emoji": "🍏📁📡",
    "categories": ["Filesystems","Networking"],
    "related": ["smb", "filesystems", "diy nas"],
    "aliases": ["apple filing protocol"],
    "use_case": "An old MacBook connects to a Time Capsule over AFP to restore Time Machine backups.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "iscsi": {
    "eli5": "Makes a hard drive in another room look like it’s plugged into your computer.",
    "boss": "iSCSI lets a computer use storage over a network as if it were a local disk.",
    "sysadmin": "Internet Small Computer System Interface (iSCSI) transports SCSI commands over IP networks, allowing clients to mount block storage remotely.",
    "emoji": "🌐💽🎯",
    "categories": ["Storage","Networking"],
    "related": ["zfs", "diy nas", "virtualization"],
    "aliases": ["internet scsi"],
    "use_case": "A Proxmox VM uses an iSCSI target from a NAS as its primary disk.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "jumbo frames": {
    "eli5": "Like sending fewer but bigger boxes to move more stuff at once.",
    "boss": "Jumbo frames are oversized network packets that improve performance in high-speed LANs by reducing packet overhead.",
    "sysadmin": "Jumbo frames are Ethernet frames with payloads larger than 1500 bytes, typically set to 9000 bytes, reducing CPU usage during data transfers like iSCSI or backups.",
    "emoji": "📦📶🚚",
    "categories": ["Networking"],
    "related": ["iscsi", "managed switch", "raid"],
    "aliases": [],
    "use_case": "Enabling jumbo frames on a NAS and Proxmox node to speed up VM storage access over a 10GbE network.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "managed switch": {
    "eli5": "A smart traffic controller for your network that lets you decide who goes where.",
    "boss": "A managed switch gives admins control over network traffic, VLANs, and monitoring features.",
    "sysadmin": "Managed switches offer administrative control over LAN features like VLAN tagging, QoS, link aggregation, SNMP, and port mirroring via CLI or web UI.",
    "emoji": "🔧📡🔀",
    "categories": ["Networking","Infrastructure"],
    "related": ["unmanaged switch", "poe switch", "vlan"],
    "aliases": [],
    "use_case": "Using a managed switch to create isolated VLANs for smart home devices and guest Wi-Fi.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "unmanaged switch": {
    "eli5": "A plug-and-play power strip for your internet cables—no buttons or settings.",
    "boss": "An unmanaged switch automatically connects devices in a network without any configuration.",
    "sysadmin": "Unmanaged switches are basic Ethernet switches with no configuration interface, ideal for simple plug-and-play LAN connectivity.",
    "emoji": "🔌🖧🤖",
    "categories": ["Networking"],
    "related": ["managed switch", "poe switch"],
    "aliases": [],
    "use_case": "Adding an unmanaged switch in a living room to connect a TV, game console, and media box to Ethernet.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "poe switch": {
    "eli5": "A power strip for network stuff that sends internet *and* electricity through one wire.",
    "boss": "A PoE switch delivers both data and power over Ethernet cables to devices like cameras and access points.",
    "sysadmin": "Power over Ethernet (PoE) switches supply DC power alongside data over Cat5e/Cat6 cables, commonly used for IP cameras, VoIP phones, and access points.",
    "emoji": "🔌📶💡",
    "categories": ["Networking","Infrastructure"],
    "related": ["managed switch", "unmanaged switch", "access point"],
    "aliases": ["power over ethernet switch"],
    "use_case": "Using a PoE switch to power and connect multiple IP cameras without extra power bricks.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mesh wi-fi": {
    "eli5": "A team of Wi-Fi helpers spread around your house to make sure the signal reaches everywhere.",
    "boss": "Mesh Wi-Fi uses multiple access points to create a seamless, strong signal throughout a building or home.",
    "sysadmin": "Mesh Wi-Fi systems use multiple interconnected nodes that route wireless traffic dynamically, improving coverage and reliability without relying solely on a central router.",
    "emoji": "📶🏠🧩",
    "categories": ["Networking","Smart Home"],
    "related": ["access point", "dhcp reservation", "unmanaged switch"],
    "aliases": ["mesh wifi"],
    "use_case": "A family installs a 3-node mesh Wi-Fi system to fix weak signals in their basement and attic.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dhcp reservation": {
    "eli5": "Saving a parking spot just for your printer so it always gets the same number (IP).",
    "boss": "DHCP reservation ensures a device always gets the same IP address without setting it manually.",
    "sysadmin": "DHCP reservation binds a MAC address to a specific IP within the DHCP scope, ensuring consistent network behavior while still managed by the DHCP server.",
    "emoji": "🎯📡🔒",
    "categories": ["Networking"],
    "related": ["dhcp", "mesh wi-fi", "unbound dns"],
    "aliases": ["static dhcp"],
    "use_case": "Assigning a reserved IP to a smart TV so it's easier to manage in the firewall and DNS.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dynamic dns": {
    "eli5": "It’s like telling the post office your address changed every time you move, so your mail always finds you.",
    "boss": "Dynamic DNS updates your domain name automatically when your home or office IP address changes.",
    "sysadmin": "Dynamic DNS (DDNS) services monitor WAN IP changes and automatically update DNS records to maintain consistent hostname access for dynamic IPs.",
    "emoji": "🌐🔁🏡",
    "categories": ["Networking","DNS"],
    "related": ["dhcp reservation", "unbound dns", "vpn"],
    "aliases": ["ddns"],
    "use_case": "A user runs a home server and uses Dynamic DNS to access it remotely even when their ISP changes the public IP.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "dmz": {
    "eli5": "A sandbox area between your home and the internet where risky stuff can play without affecting the rest.",
    "boss": "A DMZ is a special network zone that exposes certain services to the internet while keeping your main network secure.",
    "sysadmin": "A Demilitarized Zone (DMZ) is a subnet that separates externally-facing services from internal LAN resources, often protected by firewalls on both sides.",
    "emoji": "🛡️🌐🚧",
    "categories": ["Networking","Security","Firewall"],
    "related": ["firewall", "port forwarding", "vpn"],
    "aliases": ["demilitarized zone"],
    "use_case": "Hosting a public web server in a DMZ so that if it gets compromised, your internal smart home remains protected.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "openwrt": {
    "eli5": "It's like giving your router a brain upgrade to make it smarter and more useful.",
    "boss": "OpenWRT is a customizable, open-source router firmware that unlocks advanced networking features.",
    "sysadmin": "OpenWRT is a Linux-based firmware for embedded routers and network devices, offering granular control over routing, firewalling, VPN, QoS, and package management.",
    "emoji": "📡🔓🐧",
    "categories": ["Networking","Firewall","VPN"],
    "related": ["vyos", "firewall", "dhcp", "dns"],
    "aliases": [],
    "use_case": "A power user flashes OpenWRT on their TP-Link router to set up VLANs and run an ad-blocker.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "vyos": {
    "eli5": "A supercharged router you control with commands, like building your own GPS for internet traffic.",
    "boss": "VyOS is an open-source network operating system used to build advanced firewalls, routers, and VPN servers.",
    "sysadmin": "VyOS is a Debian-based network OS offering CLI-driven configuration for routing, NAT, VPN, VLAN, and firewall rules, often used in virtual environments and bare-metal appliances.",
    "emoji": "🧠📡🖧",
    "categories": ["Networking","Firewall","VPN","Operating Systems"],
    "related": ["openwrt", "proxmox", "firewall"],
    "aliases": [],
    "use_case": "A homelabber deploys VyOS as a virtual router in Proxmox to segment traffic across VLANs and handle WireGuard VPN.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "proxmox": {
    "eli5": "It's like a control panel for running lots of pretend computers on one real one.",
    "boss": "Proxmox is a virtualization platform that allows you to run multiple virtual machines and containers on a single server.",
    "sysadmin": "Proxmox VE (Virtual Environment) is an open-source virtualization management platform that supports KVM virtual machines, LXC containers, ZFS, clustering, and HA.",
    "emoji": "🖥️🧰📦",
    "categories": ["Virtualization","Infrastructure","Self-hosting"],
    "related": ["kvm", "qemu", "home lab", "xcp-ng", "hyper-v"],
    "aliases": ["proxmox ve"],
    "use_case": "A homelabber uses Proxmox to run a mix of VMs and containers for their home automation stack.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "vmware esxi": {
    "eli5": "A powerful program that lets one computer pretend to be many, like hosting a hotel full of digital guests.",
    "boss": "VMware ESXi is enterprise-grade virtualization software that runs multiple operating systems on one physical server.",
    "sysadmin": "VMware ESXi is a bare-metal hypervisor that runs virtual machines directly on hardware, offering robust management via vCenter and deep integration with enterprise ecosystems.",
    "emoji": "🏨💻🛠️",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["proxmox", "hyper-v", "kvm"],
    "aliases": ["esxi"],
    "use_case": "A company uses VMware ESXi to host Windows Server VMs in a secure, high-performance data center.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "xcp-ng": {
    "eli5": "Like Proxmox, but built from Citrix tech—great for running lots of virtual machines on one box.",
    "boss": "XCP-ng is an open-source virtualization platform based on XenServer, used for running VMs with advanced features.",
    "sysadmin": "XCP-ng is a turnkey virtualization hypervisor built on Xen, supporting features like live migration, backups, and integration with Xen Orchestra.",
    "emoji": "💾🔧🧪",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["proxmox", "vmware esxi", "hyper-v"],
    "aliases": [],
    "use_case": "An SMB runs XCP-ng with Xen Orchestra to manage Linux and Windows VMs across several physical hosts.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "hyper-v": {
    "eli5": "Microsoft’s way of letting one computer run many others inside it.",
    "boss": "Hyper-V is Microsoft’s virtualization platform for running and managing multiple virtual machines on Windows systems.",
    "sysadmin": "Hyper-V is a native hypervisor for Windows, providing Type 1 virtualization, VM checkpoints, virtual networking, and integration with Windows Server tools.",
    "emoji": "🪟💻🌀",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["proxmox", "vmware esxi", "virtualbox"],
    "aliases": [],
    "use_case": "A technician uses Hyper-V on Windows Server to spin up isolated test environments for internal apps.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "virtualbox": {
    "eli5": "A virtual playroom where you can safely test new operating systems without messing up your computer.",
    "boss": "VirtualBox is a free virtualization tool that runs different operating systems on your PC.",
    "sysadmin": "Oracle VM VirtualBox is a cross-platform, Type 2 hypervisor that enables local VMs with snapshot, shared folder, and network emulation support.",
    "emoji": "📦🧪🧱",
    "categories": ["Virtualization","Self-hosting"],
    "related": ["hyper-v", "proxmox", "kvm"],
    "aliases": [],
    "use_case": "A student uses VirtualBox to run Ubuntu on their Windows laptop for learning Linux.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "kvm": {
    "eli5": "It’s Linux’s way of letting one computer pretend to be lots of others.",
    "boss": "KVM is a built-in virtualization feature in Linux used to run virtual machines.",
    "sysadmin": "Kernel-based Virtual Machine (KVM) is a Linux kernel module that enables hardware-accelerated virtualization via QEMU and libvirt.",
    "emoji": "🐧🧠💻",
    "categories": ["Virtualization","Operating Systems"],
    "related": ["qemu", "proxmox", "virtualbox"],
    "aliases": ["kernel-based virtual machine"],
    "use_case": "A sysadmin uses KVM to host a fleet of isolated Linux VMs on a single Ubuntu server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "qemu": {
    "eli5": "A tool that helps your computer pretend it’s using different hardware or even a different CPU.",
    "boss": "QEMU is a virtualization tool that emulates hardware and allows running different operating systems or processor types.",
    "sysadmin": "Quick EMUlator (QEMU) is a user-space emulator and virtualizer that provides hardware emulation for x86, ARM, and other architectures, often used with KVM.",
    "emoji": "🧠🎭💾",
    "categories": ["Virtualization","Operating Systems"],
    "related": ["kvm", "proxmox", "hyper-v"],
    "aliases": [],
    "use_case": "Running an ARM-based Linux image on an x86 laptop using QEMU for development.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "pcie passthrough": {
    "eli5": "Letting a virtual machine borrow a real part of your computer, like a video card.",
    "boss": "PCIe passthrough allows a VM to use a real hardware device directly, like a GPU or network card.",
    "sysadmin": "PCI Express passthrough (via VT-d/IOMMU) maps a physical PCIe device to a guest VM for near-native performance, often used for GPU virtualization.",
    "emoji": "🎮⚙️💻",
    "categories": ["Virtualization","Hardware"],
    "related": ["kvm", "proxmox", "gpu passthrough"],
    "aliases": ["pci passthrough"],
    "use_case": "Assigning a GPU to a Windows VM for gaming or video rendering inside Proxmox.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "adguard home": {
    "eli5": "A personal ad blocker that works for your whole house.",
    "boss": "AdGuard Home is a network-level ad and tracker blocker you run locally.",
    "sysadmin": "AdGuard Home is a self-hosted DNS server with filtering, parental controls, and tracking protection, acting as a local resolver for LAN clients.",
    "emoji": "🛡️🌐🚫",
    "categories": ["Privacy","Security","Self-hosting"],
    "related": ["unbound dns", "pi-hole", "firewall"],
    "aliases": [],
    "use_case": "Installing AdGuard Home on a Raspberry Pi to block ads and trackers across all household devices.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "unbound dns": {
    "eli5": "Like having your own phone book so you don’t have to ask Google every time.",
    "boss": "Unbound is a privacy-focused DNS resolver that works without sending requests to third-party servers.",
    "sysadmin": "Unbound is a validating, recursive, caching DNS resolver that supports DNSSEC and runs locally or on LAN for improved speed and privacy.",
    "emoji": "📖🔐🧠",
    "categories": ["Networking","Privacy","DNS"],
    "related": ["adguard home", "cloudflare dns", "dynamic dns"],
    "aliases": [],
    "use_case": "Pairing Unbound with AdGuard Home to reduce reliance on upstream DNS providers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "wireguard": {
    "eli5": "A fast and simple internet tunnel that keeps your stuff safe from snoopers.",
    "boss": "WireGuard is a modern VPN protocol known for being fast, secure, and easy to set up.",
    "sysadmin": "WireGuard is a cryptographically secure VPN protocol with minimal codebase, fast handshake, and kernel integration, ideal for modern deployments.",
    "emoji": "🔐🛣️⚡",
    "categories": ["VPN","Security"],
    "related": ["tailscale", "zerotier", "openvpn"],
    "aliases": [],
    "use_case": "Using WireGuard to securely connect a phone and laptop to a home lab from anywhere.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "openvpn": {
    "eli5": "A trusty old internet tunnel that keeps your online stuff private.",
    "boss": "OpenVPN is a flexible, open-source VPN solution used for secure remote access and site-to-site links.",
    "sysadmin": "OpenVPN is a robust SSL/TLS-based VPN protocol supporting routing, bridging, and authentication via certificates or credentials.",
    "emoji": "🔒🌍🧰",
    "categories": ["VPN","Security"],
    "related": ["wireguard", "tailscale", "vpn"],
    "aliases": [],
    "use_case": "A company uses OpenVPN to let remote workers securely access internal servers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "tailscale": {
    "eli5": "A magical tool that makes your devices feel like they're all on the same Wi-Fi—even when they’re not.",
    "boss": "Tailscale creates secure, private networks between your devices using WireGuard and easy setup.",
    "sysadmin": "Tailscale uses WireGuard under the hood to form a mesh VPN with NAT traversal and device authorization via OAuth providers, perfect for zero-config secure networking.",
    "emoji": "🌐🧙‍♂️🔐",
    "categories": ["VPN","Identity & Access"],
    "related": ["wireguard", "zerotier", "vpn"],
    "aliases": [],
    "use_case": "A user installs Tailscale on all devices to access their home lab and NAS remotely without port forwarding.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "zerotier": {
    "eli5": "A secret clubhouse network your devices can join—no matter where they are in the world.",
    "boss": "ZeroTier creates virtual networks over the internet that feel like local LANs, ideal for remote access or hybrid infrastructure.",
    "sysadmin": "ZeroTier is a hybrid SD-WAN and VPN solution offering Layer 2/3 networking over the internet, using encrypted peer-to-peer links and virtual network controllers.",
    "emoji": "🌍🧩🔐",
    "categories": ["VPN","Networking"],
    "related": ["tailscale", "wireguard", "vpn"],
    "aliases": [],
    "use_case": "Using ZeroTier to access a home Home Assistant instance from a phone while traveling.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cloudflare tunnel": {
    "eli5": "A magic door that lets the internet talk to your home computer without opening your front gate.",
    "boss": "Cloudflare Tunnel (formerly Argo Tunnel) lets you securely expose local services to the internet without port forwarding.",
    "sysadmin": "Cloudflare Tunnel creates a secure outbound connection from your server to Cloudflare, enabling access to local apps via public domain names with DDoS protection and authentication.",
    "emoji": "🛡️🚪🌐",
    "categories": ["VPN","Web Security","Networking"],
    "related": ["cloudflare zero trust", "nginx proxy manager", "tailscale"],
    "aliases": ["argo tunnel"],
    "use_case": "Hosting a personal dashboard behind Cloudflare Tunnel to avoid exposing your IP or opening firewall ports.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cloudflare zero trust": {
    "eli5": "A bodyguard that checks ID before anyone gets near your private apps.",
    "boss": "Cloudflare Zero Trust protects internal applications using identity verification and access controls without needing a VPN.",
    "sysadmin": "Cloudflare Zero Trust is a security model that enforces user-based access to resources through Cloudflare Access, integrating identity providers and device posture policies.",
    "emoji": "🛡️🔐🚫",
    "categories": ["Web Security","Identity & Access"],
    "related": ["cloudflare tunnel", "vpn", "tailscale"],
    "aliases": [],
    "use_case": "Restricting access to internal dev tools using Google login and device posture checks via Cloudflare Zero Trust.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "nginx proxy manager": {
    "eli5": "It’s like a receptionist who sends guests to the right room while remembering everyone’s names.",
    "boss": "NGINX Proxy Manager is a web-based interface that simplifies setting up reverse proxies, SSL, and redirects using NGINX.",
    "sysadmin": "NGINX Proxy Manager is a Docker-based front end to NGINX, allowing users to configure reverse proxies, manage SSL certs via Let's Encrypt, and redirect traffic without editing config files.",
    "emoji": "🧭📥📤",
    "categories": ["Web","Reverse Proxy","Self-hosting"],
    "related": ["caddy", "traefik", "certbot", "cloudflare tunnel"],
    "aliases": [],
    "use_case": "Using NGINX Proxy Manager to route external traffic to Home Assistant with automatic SSL certificates.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "traefik": {
    "eli5": "A super-smart traffic cop that directs web traffic to the right service automatically.",
    "boss": "Traefik is a modern reverse proxy and load balancer that automatically detects and routes requests to apps.",
    "sysadmin": "Traefik is a dynamic edge router designed for microservices, with built-in support for Docker, Kubernetes, Let's Encrypt, metrics, and automatic configuration discovery.",
    "emoji": "🚦🕸️🔄",
    "categories": ["Web","Reverse Proxy","Containers"],
    "related": ["nginx proxy manager", "caddy", "load balancer"],
    "aliases": [],
    "use_case": "Deploying Traefik with Docker to automatically reverse-proxy containers as they spin up.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "caddy": {
    "eli5": "A helpful butler who gets your website online with security and polish, all by himself.",
    "boss": "Caddy is a modern web server with automatic HTTPS and simple configuration, popular for self-hosted sites.",
    "sysadmin": "Caddy is a Go-based web server and reverse proxy that includes automatic TLS via Let's Encrypt, HTTP/2 support, and human-friendly config files.",
    "emoji": "📡🔒🤖",
    "categories": ["Web","Self-hosting"],
    "related": ["nginx proxy manager", "traefik", "certbot"],
    "aliases": [],
    "use_case": "Hosting a Hugo blog using Caddy with automatic SSL and no manual cert renewal.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "wildcard certificate": {
    "eli5": "One key that unlocks every door on your website, no matter the room name.",
    "boss": "A wildcard SSL certificate secures all subdomains of a domain with a single certificate.",
    "sysadmin": "A wildcard certificate uses an asterisk (*) to secure multiple subdomains (e.g., *.example.com) under one certificate, useful for dynamic or multi-service hosting.",
    "emoji": "🔑🌍💫",
    "categories": ["Web Security","Encryption"],
    "related": ["let's encrypt", "certbot", "self-signed certificate"],
    "aliases": [],
    "use_case": "Using a wildcard cert to secure dashboard.example.com, vault.example.com, and blog.example.com with one SSL.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "self-signed certificate": {
    "eli5": "Making your own ID card instead of getting one from a trusted agency.",
    "boss": "A self-signed SSL certificate is created and trusted by the owner, not a public authority—usually for internal or testing use.",
    "sysadmin": "Self-signed certificates are X.509 certs signed with their own private key, not issued by a CA, and require manual trust installation on clients.",
    "emoji": "🧾✍️🔐",
    "categories": ["Web Security","Encryption"],
    "related": ["certbot", "ssl certificate", "let's encrypt"],
    "aliases": [],
    "use_case": "Using a self-signed cert to encrypt a local-only admin interface for a NAS server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "acme client": {
    "eli5": "A helper that talks to the certificate service to get your website a lock badge (SSL).",
    "boss": "An ACME client automates getting SSL certificates from services like Let’s Encrypt.",
    "sysadmin": "An ACME client (Automatic Certificate Management Environment) communicates with a certificate authority to validate domain ownership and request/renew SSL certificates automatically.",
    "emoji": "🤝🔐📜",
    "categories": ["Web Security","Automation"],
    "related": ["certbot", "let's encrypt", "ssl certificate"],
    "aliases": [],
    "use_case": "Using an ACME client in Docker to auto-renew certs for multiple subdomains.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "certbot": {
    "eli5": "A robot that fetches and installs the lock icon for your website (SSL).",
    "boss": "Certbot is a tool that helps automate free SSL certificate issuance from Let’s Encrypt.",
    "sysadmin": "Certbot is an EFF-developed ACME client that facilitates domain validation and auto-installation of Let's Encrypt SSL/TLS certificates on web servers.",
    "emoji": "🤖🔒📜",
    "categories": ["Web Security","Encryption","Automation"],
    "related": ["acme client", "ssl certificate", "let's encrypt"],
    "aliases": [],
    "use_case": "Setting up Certbot to automatically issue HTTPS certs for a personal blog hosted on NGINX.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dropbox api": {
    "eli5": "It’s a way for other apps to open your Dropbox and work with your files (if you say it’s okay).",
    "boss": "The Dropbox API allows developers to integrate Dropbox storage into their apps for file access and sync.",
    "sysadmin": "Dropbox API is a RESTful interface for accessing Dropbox features like file uploads, downloads, sharing, and metadata within third-party apps or automations.",
    "emoji": "📁🔄🔧",
    "categories": ["APIs","Cloud","Productivity"],
    "related": ["api", "cloud storage", "integration"],
    "aliases": [],
    "use_case": "Using the Dropbox API in n8n to automatically save voiceovers to a shared Dropbox folder.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "container": {
    "eli5": "Like putting an app in a lunchbox so it always works the same, no matter where you take it.",
    "boss": "A container packages software and its dependencies into one unit so it can run reliably anywhere.",
    "sysadmin": "Containers are lightweight, portable runtime environments that encapsulate an application, its libraries, and configuration files using OS-level virtualization (e.g., Docker, LXC).",
    "emoji": "📦🐳🚀",
    "categories": ["Containers"],
    "related": ["image", "volume", "bind mount", "docker"],
    "aliases": [],
    "use_case": "Using containers to run a self-hosted app like Vaultwarden without affecting the host system.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "image": {
    "eli5": "It’s like a frozen meal—ready to run once heated (started).",
    "boss": "An image is the blueprint for a container—it includes everything needed to create and run one.",
    "sysadmin": "A container image is a snapshot of a file system and app code, used to launch containers. It includes binaries, libraries, and metadata for runtime execution.",
    "emoji": "🧊📷📦",
    "categories": ["Containers"],
    "related": ["container", "multi-arch image", "alpine image"],
    "aliases": [],
    "use_case": "Pulling a Docker image for NGINX to quickly spin up a web server in a container.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "volume": {
    "eli5": "A separate folder where containers can safely keep their stuff even if restarted.",
    "boss": "A volume is storage outside the container that keeps data safe even when the container is deleted or restarted.",
    "sysadmin": "Volumes are persistent storage abstractions managed by container platforms to store data outside the container’s ephemeral filesystem, ensuring data durability.",
    "emoji": "💾📁🔄",
    "categories": ["Containers","Storage"],
    "related": ["bind mount", "container", "vm backup"],
    "aliases": [],
    "use_case": "Mapping a volume to store PostgreSQL data when running the containerized database.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "bind mount": {
    "eli5": "Letting a container use a real folder on your computer, like sharing a drawer.",
    "boss": "A bind mount directly connects a folder on the host to a container for live file access.",
    "sysadmin": "Bind mounts map a specific directory from the host filesystem into a container at runtime, useful for development or accessing host data directly.",
    "emoji": "🔗📂📦",
    "categories": ["Containers","Filesystems"],
    "related": ["volume", "container", "docker"],
    "aliases": [],
    "use_case": "Using a bind mount to live-edit web files inside a container from your local system.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "network mode": {
    "eli5": "It’s how your container talks to the internet—like choosing a walkie-talkie channel.",
    "boss": "Network mode defines how a container connects to networks—shared, isolated, or bridged.",
    "sysadmin": "Network mode in containers defines the networking stack, such as 'bridge', 'host', or 'none', impacting how the container communicates internally or externally.",
    "emoji": "🌐📡⚙️",
    "categories": ["Containers","Networking"],
    "related": ["container", "port mapping", "docker"],
    "aliases": [],
    "use_case": "Setting a container to host network mode to use the same IP as the host system for a local dashboard.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "healthcheck": {
    "eli5": "It's like a daily checkup to see if an app inside a container is still working.",
    "boss": "A healthcheck is a test that tells if a containerized app is still healthy and responding.",
    "sysadmin": "Healthchecks define custom commands in container runtimes to periodically test container availability, often used for orchestration or auto-restart.",
    "emoji": "❤️📦🔁",
    "categories": ["Containers","Monitoring"],
    "related": ["container", "deployment", "portainer"],
    "aliases": [],
    "use_case": "Configuring a healthcheck in Docker Compose to ensure a web app restarts if it fails.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "port mapping": {
    "eli5": "Like putting a mailbox label so internet traffic knows which container to reach.",
    "boss": "Port mapping exposes a container’s internal service to the outside world through a specified port.",
    "sysadmin": "Port mapping routes traffic from a host port to a container’s internal port, allowing access to containerized services like web apps.",
    "emoji": "📮🔀🌐",
    "categories": ["Containers","Networking"],
    "related": ["container", "network mode", "nginx proxy manager"],
    "aliases": [],
    "use_case": "Mapping port 8080 on your PC to port 80 inside a web container so others can access it.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "entrypoint": {
    "eli5": "It’s the main command the container runs when it wakes up.",
    "boss": "Entrypoint defines what a container does when it starts—it’s the default command.",
    "sysadmin": "The entrypoint specifies the executable run inside the container at launch, acting as the primary process for the container lifecycle.",
    "emoji": "🚪🏁📦",
    "categories": ["Containers"],
    "related": ["docker", "container", "cmd"],
    "aliases": [],
    "use_case": "Defining an entrypoint script in a Dockerfile to initialize and launch an app.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "alpine image": {
    "eli5": "A tiny, super light container image that only has the basics.",
    "boss": "An Alpine image is a minimal Linux-based container image used for fast, secure deployments.",
    "sysadmin": "Alpine is a security-focused, ultra-lightweight Linux distro commonly used as a base container image due to its 5MB footprint and musl/libc compatibility.",
    "emoji": "🗻📦⚡",
    "categories": ["Containers","Operating Systems"],
    "related": ["image", "multi-arch image", "container"],
    "aliases": ["alpine linux image"],
    "use_case": "Using an Alpine image as a base to keep Docker containers lean and fast.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "multi-arch image": {
    "eli5": "A smart container that works on different computers—like PCs or Raspberry Pis—without extra setup.",
    "boss": "Multi-arch images can run on different hardware types, making deployment easier across devices.",
    "sysadmin": "Multi-architecture container images use manifests to support multiple CPU platforms (e.g., x86_64, ARM64), enabling platform-agnostic pulls.",
    "emoji": "🧠🔁💻",
    "categories": ["Containers","Infrastructure"],
    "related": ["image", "alpine image", "deployment"],
    "aliases": ["multi-architecture image"],
    "use_case": "Deploying the same container image to both a Raspberry Pi and a cloud server using Docker's multi-arch support.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "portainer": {
    "eli5": "A dashboard that lets you control all your containers with buttons instead of typing commands.",
    "boss": "Portainer is a web interface that simplifies managing Docker containers and servers.",
    "sysadmin": "Portainer is a lightweight management UI for Docker, Kubernetes, and Swarm that enables container lifecycle control, volume/network setup, and stack deployments.",
    "emoji": "📊🐳🕹️",
    "categories": ["Containers","Self-hosting","Monitoring"],
    "related": ["docker", "container", "healthcheck"],
    "aliases": [],
    "use_case": "Running Portainer to manage a 3-node Docker cluster from one central dashboard.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cockpit": {
    "eli5": "Like a control panel for your Linux computer with buttons instead of command lines.",
    "boss": "Cockpit is a web-based GUI that lets you manage Linux systems easily, without needing to use terminal commands.",
    "sysadmin": "Cockpit is a remote-friendly, browser-accessible interface for managing Linux servers, offering modules for system logs, networking, storage, containers, and system updates.",
    "emoji": "🕹️📊🐧",
    "categories": ["Operating Systems","Self-hosting"],
    "related": ["webmin", "ansible", "ubuntu server"],
    "aliases": [],
    "use_case": "Using Cockpit to reboot, view logs, and manage users on a headless Fedora server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "webmin": {
    "eli5": "A website you use to control your Linux server like a remote control.",
    "boss": "Webmin is a web-based interface for managing Linux systems—like users, updates, and services—without needing terminal access.",
    "sysadmin": "Webmin is a Perl-based system administration tool with a modular web UI for Unix-based systems, supporting user management, cron jobs, services, and package updates.",
    "emoji": "🌐🛠️🐧",
    "categories": ["Operating Systems","Self-hosting"],
    "related": ["cockpit", "ubuntu server", "debian"],
    "aliases": [],
    "use_case": "Managing Samba shares and configuring cron jobs on a Debian server using Webmin.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ansible": {
    "eli5": "It’s like having a robot do your computer chores over the network.",
    "boss": "Ansible automates IT tasks like setting up servers, deploying apps, and managing configurations—all from one command.",
    "sysadmin": "Ansible is an agentless automation tool using YAML playbooks to orchestrate configuration management, software provisioning, and application deployment via SSH.",
    "emoji": "🤖📜🔧",
    "categories": ["Automation","Configuration Management","DevOps"],
    "related": ["terraform", "playbook", "crontab"],
    "aliases": [],
    "use_case": "Running an Ansible playbook to configure firewall rules on all home lab servers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "terraform": {
    "eli5": "It’s like building a house with Lego instructions—but for servers in the cloud.",
    "boss": "Terraform lets you define and build infrastructure—like servers or networks—using code instead of clicking around.",
    "sysadmin": "Terraform is an Infrastructure as Code (IaC) tool using HCL to manage cloud and on-prem resources declaratively across providers like AWS, Azure, and Proxmox.",
    "emoji": "🏗️📦📄",
    "categories": ["Infrastructure","Automation","DevOps"],
    "related": ["ansible", "packer", "deployment"],
    "aliases": [],
    "use_case": "Using Terraform to spin up a complete cloud network with subnets and VMs in under a minute.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "packer": {
    "eli5": "A tool that bakes your software into a nice ready-to-use computer image.",
    "boss": "Packer creates machine images automatically, so you can reuse and deploy them anywhere.",
    "sysadmin": "Packer is a HashiCorp tool that automates the creation of machine images (AMI, VMDK, ISO, etc.) across platforms using configuration files and shell scripts.",
    "emoji": "🧁📸🖥️",
    "categories": ["Automation","DevOps","Infrastructure"],
    "related": ["terraform", "vagrant", "ansible"],
    "aliases": [],
    "use_case": "Using Packer to build a preconfigured Ubuntu image for Proxmox and AWS.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "vagrant": {
    "eli5": "It’s like a magic suitcase that unpacks the same computer environment every time you open it.",
    "boss": "Vagrant makes it easy to spin up and destroy development environments quickly and consistently.",
    "sysadmin": "Vagrant is a tool for building and managing reproducible virtualized dev environments via simple Vagrantfiles, often using VirtualBox or libvirt.",
    "emoji": "🎒💻🔁",
    "categories": ["DevOps","Virtualization"],
    "related": ["packer", "terraform", "virtualbox"],
    "aliases": [],
    "use_case": "Using Vagrant to test a web server stack on a virtual Ubuntu box without affecting your system.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "saltstack": {
    "eli5": "It’s like Ansible’s cousin who prefers talking to servers with an agent already installed.",
    "boss": "SaltStack is a configuration management tool for automating infrastructure and keeping systems in sync.",
    "sysadmin": "SaltStack (Salt) is a Python-based automation and configuration system using a master/minion architecture with remote execution, event-driven orchestration, and YAML states.",
    "emoji": "🧂🤖🧩",
    "categories": ["Configuration Management","DevOps","Automation"],
    "related": ["ansible", "puppet", "chef"],
    "aliases": ["salt"],
    "use_case": "A sysadmin uses Salt to enforce NTP configuration across 50 Linux machines.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "chef": {
    "eli5": "Chef is like a recipe book that tells your servers how to cook up the right configuration.",
    "boss": "Chef automates infrastructure by treating configuration as code, ensuring servers are set up consistently.",
    "sysadmin": "Chef is a Ruby-based configuration management platform that applies 'cookbooks' to nodes to enforce state, using a client-server or local mode.",
    "emoji": "👨‍🍳📖🖥️",
    "categories": ["Configuration Management","DevOps"],
    "related": ["puppet", "ansible", "saltstack"],
    "aliases": [],
    "use_case": "Using Chef cookbooks to deploy and manage a LAMP stack on cloud VMs.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "puppet": {
    "eli5": "You write the rules and Puppet makes sure your servers always follow them.",
    "boss": "Puppet ensures that servers are configured and stay configured the way you want, using automation.",
    "sysadmin": "Puppet is a declarative configuration management tool using a client-server model, where the Puppet agent applies manifests sent from the master to enforce system state.",
    "emoji": "🧸🧾🎮",
    "categories": ["Configuration Management","DevOps"],
    "related": ["chef", "saltstack", "ansible"],
    "aliases": [],
    "use_case": "A company uses Puppet to ensure firewall settings and users are consistent across 100 servers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ubuntu server": {
    "eli5": "It’s the server version of Ubuntu that doesn’t have the flashy windows—just gets stuff done.",
    "boss": "Ubuntu Server is a popular, free Linux distribution used to run server applications in data centers or home labs.",
    "sysadmin": "Ubuntu Server is a headless variant of the Ubuntu OS, optimized for performance and security in server roles, offering LTS releases and cloud integrations.",
    "emoji": "🐧🖥️🔧",
    "categories": ["Operating Systems","Infrastructure"],
    "related": ["debian", "cockpit", "ansible"],
    "aliases": [],
    "use_case": "Installing Ubuntu Server on a NUC to host a local Git server and Docker stack.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "debian": {
    "eli5": "A stable and reliable version of Linux that’s like the grandparent of many other versions.",
    "boss": "Debian is a popular open-source Linux operating system known for stability and long-term support.",
    "sysadmin": "Debian is a widely-used Linux distro based on the Linux kernel with .deb package management, known for its conservative update cycle and use as a base for Ubuntu and others.",
    "emoji": "🐚🐧📦",
    "categories": ["Operating Systems"],
    "related": ["ubuntu server", "cockpit", "webmin"],
    "aliases": [],
    "use_case": "Running Debian on a VPS to host a custom web application with low resource usage.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "almalinux": {
    "eli5": "A free version of the same Linux used in many companies, made to replace CentOS.",
    "boss": "AlmaLinux is an open-source, enterprise-grade Linux distro built to be compatible with Red Hat Enterprise Linux.",
    "sysadmin": "AlmaLinux is a binary-compatible rebuild of RHEL maintained by the community, often used in cloud and enterprise environments post-CentOS.",
    "emoji": "🧬🐧🏢",
    "categories": ["Operating Systems"],
    "related": ["rocky linux", "centos stream", "debian"],
    "aliases": [],
    "use_case": "Using AlmaLinux in a production LAMP stack for a self-hosted enterprise CRM.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "rocky linux": {
    "eli5": "A free, stable Linux made to keep things running smoothly—like CentOS used to do.",
    "boss": "Rocky Linux is an open-source enterprise OS designed as a stable replacement for CentOS after its shift to a rolling-release model.",
    "sysadmin": "Rocky Linux is a RHEL-compatible Linux distribution maintained by the Rocky Enterprise Software Foundation, offering binary-level compatibility and long-term support for server deployments.",
    "emoji": "🪨🐧🏗️",
    "categories": ["Operating Systems"],
    "related": ["almalinux", "centos stream", "debian"],
    "aliases": [],
    "use_case": "A business deploys Rocky Linux across its web servers to maintain compatibility with existing CentOS tools.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "centos stream": {
    "eli5": "The newer, faster-moving cousin of CentOS that shows what Red Hat is cooking next.",
    "boss": "CentOS Stream is a Linux distro that previews the next version of Red Hat Enterprise Linux, used for early development and testing.",
    "sysadmin": "CentOS Stream is a continuously delivered Linux distribution that sits between Fedora and RHEL, offering a rolling release ahead of stable RHEL versions.",
    "emoji": "🚧🐧📈",
    "categories": ["Operating Systems"],
    "related": ["rocky linux", "almalinux", "rhel"],
    "aliases": [],
    "use_case": "A developer tests upcoming RHEL changes by deploying apps on CentOS Stream before official release.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "truenas scale": {
    "eli5": "It’s a smart storage box that can also run apps and containers—like a super-powered filing cabinet.",
    "boss": "TrueNAS SCALE is an open-source NAS operating system that supports Docker containers and Kubernetes in addition to traditional storage services.",
    "sysadmin": "TrueNAS SCALE is a Debian-based NAS OS with support for ZFS, containerization via Docker and Kubernetes, clustering, and Linux-based services.",
    "emoji": "🗃️🐧⚙️",
    "categories": ["Storage","Self-hosting","Virtualization"],
    "related": ["truenas core", "unraid", "zfs", "docker"],
    "aliases": [],
    "use_case": "Running Nextcloud and Plex on a TrueNAS SCALE box while also managing large ZFS storage pools.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "truenas core": {
    "eli5": "A digital vault for storing and protecting your files, built for reliability.",
    "boss": "TrueNAS CORE is a free, BSD-based NAS OS used to manage storage with advanced features like snapshots and replication.",
    "sysadmin": "TrueNAS CORE is a FreeBSD-based storage OS with a web UI, built-in ZFS support, jail-based plugins, and replication for backup and HA storage.",
    "emoji": "🔐🖴🧰",
    "categories": ["Storage","Self-hosting"],
    "related": ["truenas scale", "zfs", "nas"],
    "aliases": [],
    "use_case": "Using TrueNAS CORE to manage a home backup system with hourly snapshots and SMB shares.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "unraid": {
    "eli5": "It’s like a Lego table where you can mix apps, files, and backups without everything falling apart.",
    "boss": "Unraid is a flexible NAS and virtualization platform for home and small businesses that combines storage, Docker, and VMs in one OS.",
    "sysadmin": "Unraid is a Linux-based OS that allows mixed-drive NAS setups with parity, Docker container hosting, and KVM virtual machines via a web interface.",
    "emoji": "🧱🗂️🐳",
    "categories": ["Storage","Virtualization","Self-hosting"],
    "related": ["truenas scale", "openmediavault", "docker"],
    "aliases": [],
    "use_case": "Hosting Plex, Home Assistant, and backups on a single Unraid server using Docker and disk shares.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "openmediavault": {
    "eli5": "A simple way to turn an old computer into a network file cabinet.",
    "boss": "OpenMediaVault is an open-source NAS operating system for managing storage, users, and backups with a web UI.",
    "sysadmin": "OpenMediaVault (OMV) is a Debian-based NAS platform with plugin support, SMB/NFS shares, and Docker/Podman integration.",
    "emoji": "🖥️🗄️🌐",
    "categories": ["Storage","Self-hosting"],
    "related": ["unraid", "debian", "nas"],
    "aliases": ["omv"],
    "use_case": "Using OMV to create a home media and file server with an easy-to-use interface.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "freebsd": {
    "eli5": "It’s like Linux’s lesser-known cousin that’s super stable and runs quietly in the background.",
    "boss": "FreeBSD is a Unix-like operating system known for its stability, security, and use in firewalls, routers, and NAS devices.",
    "sysadmin": "FreeBSD is a free Unix-like OS derived from BSD with features like jails, ZFS support, and fine-grained security, often used in networking and embedded environments.",
    "emoji": "🐚🧱🖥️",
    "categories": ["Operating Systems"],
    "related": ["truenas core", "openbsd", "linux"],
    "aliases": [],
    "use_case": "Running FreeBSD as a base OS for TrueNAS CORE on a ZFS-powered home server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "pi-hole": {
    "eli5": "A blocker box that stops ads and trackers before they reach your devices.",
    "boss": "Pi-hole is a network-wide ad and tracker blocker that filters DNS requests for all devices on your network.",
    "sysadmin": "Pi-hole is a DNS-level sinkhole that filters queries using blocklists to prevent ad and tracking domains, commonly deployed on Raspberry Pi or Docker.",
    "emoji": "🚫📡🕳️",
    "categories": ["Privacy","Networking"],
    "related": ["adguard home", "dns", "unbound dns"],
    "aliases": [],
    "use_case": "Installing Pi-hole on a Raspberry Pi to stop ads across phones, TVs, and smart devices on the home network.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gitops": {
    "eli5": "Using your version control system (like Git) as the boss of your infrastructure.",
    "boss": "GitOps is a DevOps approach that uses Git as the source of truth for automating infrastructure and deployments.",
    "sysadmin": "GitOps is an operational framework that uses Git repositories to manage and trigger declarative infrastructure changes, often integrated with Kubernetes.",
    "emoji": "📁⚙️📤",
    "categories": ["DevOps","Version Control","Automation"],
    "related": ["ansible", "terraform", "deployment"],
    "aliases": [],
    "use_case": "Using GitOps to deploy and rollback Kubernetes manifests by simply committing changes to a Git repo.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "ssh key": {
    "eli5": "A digital key that lets you unlock your server without typing your password.",
    "boss": "An SSH key is a secure way to log into servers without using passwords, often used for automation and security.",
    "sysadmin": "SSH keys use public/private key pairs for secure, encrypted authentication to remote servers over SSH, eliminating the need for password-based logins.",
    "emoji": "🔑📡🧑‍💻",
    "categories": ["Security","Command Line","Identity & Access"],
    "related": ["ssh", "public key", "ansible"],
    "aliases": [],
    "use_case": "Setting up SSH key authentication to log into all lab servers without retyping your password.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "port knocking": {
    "eli5": "A secret knock to open a digital door that looks locked to everyone else.",
    "boss": "Port knocking adds a hidden layer of security by requiring a sequence of connection attempts to open access to services.",
    "sysadmin": "Port knocking is a firewall access control method that opens a port only after a specific sequence of network requests, enhancing stealth and limiting attack surfaces.",
    "emoji": "🚪🫣🔐",
    "categories": ["Security","Firewall"],
    "related": ["firewall", "ssh", "fail2ban"],
    "aliases": [],
    "use_case": "Using port knocking to protect SSH by making it accessible only after a coded port sequence is sent.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "fail2ban": {
    "eli5": "A watchdog that blocks people after too many wrong password tries.",
    "boss": "Fail2Ban watches logs and blocks IPs that look suspicious—like too many login failures.",
    "sysadmin": "Fail2Ban scans service logs for authentication failures or suspicious activity, then adds firewall rules to block the source IP temporarily or permanently.",
    "emoji": "🛡️🚫📜",
    "categories": ["Security","Firewall"],
    "related": ["firewall", "ssh", "port knocking"],
    "aliases": [],
    "use_case": "Running Fail2Ban on a server to ban IPs that repeatedly try incorrect SSH logins.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "rclone": {
    "eli5": "A power tool that helps you move files between cloud drives like Google Drive and Dropbox.",
    "boss": "Rclone is a command-line tool to copy and sync files between cloud providers or local drives.",
    "sysadmin": "Rclone is a Go-based utility that supports syncing, mounting, and encrypting files across cloud storage platforms, SFTP, WebDAV, and local filesystems.",
    "emoji": "🔁☁️💾",
    "categories": ["Backup","Storage","Command Line"],
    "related": ["rsync", "cloud storage", "s3"],
    "aliases": [],
    "use_case": "Syncing a backup folder from a NAS to Google Drive nightly using Rclone.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "rsync": {
    "eli5": "A super-smart copier that only sends the parts of files that changed.",
    "boss": "Rsync is a fast and efficient tool for syncing files between computers or storage devices.",
    "sysadmin": "Rsync is a differential file synchronization tool that compares and transfers only changed data blocks, optimizing bandwidth and time for backups and sync tasks.",
    "emoji": "📁🔄⚡",
    "categories": ["Backup","Command Line"],
    "related": ["rclone", "cronjob", "deployment"],
    "aliases": [],
    "use_case": "Using rsync to mirror a local folder to an external drive every night.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "crontab": {
    "eli5": "A to-do list that your computer runs on a schedule—even if you forget.",
    "boss": "Crontab is how Linux systems schedule tasks to run automatically at set times.",
    "sysadmin": "Crontab is a table of time-based job schedules for the cron daemon, allowing users to run scripts, backups, or maintenance at recurring intervals.",
    "emoji": "📅🕒📜",
    "categories": ["Automation","Operating Systems"],
    "related": ["cronjob", "systemd timer", "rsync"],
    "aliases": [],
    "use_case": "Setting a crontab entry to run a backup script at 2am daily.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cronjob": {
    "eli5": "A task that your computer remembers to do on its own, like watering your digital plants.",
    "boss": "A cronjob is an automated task that runs at regular intervals, like backups or updates.",
    "sysadmin": "Cronjobs are scheduled scripts or commands defined in user or system crontabs, executed by the cron daemon based on time expressions.",
    "emoji": "⏰📂🔁",
    "categories": ["Automation","Operating Systems"],
    "related": ["crontab", "systemd timer", "ansible"],
    "aliases": [],
    "use_case": "Running a cronjob to automatically sync logs from a server every hour.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "systemd timer": {
    "eli5": "A smarter alarm clock that works with Linux’s new scheduling system.",
    "boss": "Systemd timers replace cron for managing scheduled tasks using modern features and better control.",
    "sysadmin": "Systemd timers are scheduling units in systemd that trigger service units based on calendar expressions or monotonic timers, offering logging and dependency management.",
    "emoji": "⏲️🖥️🔧",
    "categories": ["Automation","Operating Systems"],
    "related": ["cronjob", "systemctl", "deployment"],
    "aliases": [],
    "use_case": "Using a systemd timer to restart a containerized service every morning before business hours.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "dns-01 challenge": {
    "eli5": "It’s like putting a note on your domain name to prove you own it—so you can get a security certificate.",
    "boss": "The DNS-01 challenge verifies domain ownership by checking a special DNS record you add temporarily.",
    "sysadmin": "DNS-01 is an ACME challenge type where the domain owner creates a TXT DNS record with a validation token, proving control for issuing SSL certificates via tools like Certbot.",
    "emoji": "📄🔐🧪",
    "categories": ["Web Security","DNS"],
    "related": ["http-01 challenge", "certbot", "ssl certificate"],
    "aliases": [],
    "use_case": "Automating wildcard certificate renewal for your domain using the DNS-01 challenge.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "http-01 challenge": {
    "eli5": "You put a file on your website that says ‘yes, I own this’ so a service can give you HTTPS.",
    "boss": "The HTTP-01 challenge validates your control over a domain by checking for a specific file hosted on your web server.",
    "sysadmin": "HTTP-01 is an ACME challenge that verifies domain control by requesting a token file at `http://domain/.well-known/acme-challenge`, commonly used for Let's Encrypt.",
    "emoji": "🌐🔍🔐",
    "categories": ["Web Security","DNS"],
    "related": ["dns-01 challenge", "certbot", "ssl certificate"],
    "aliases": [],
    "use_case": "Using HTTP-01 to automatically issue a Let's Encrypt cert for a website hosted with NGINX.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "elastic stack": {
    "eli5": "A toolkit that lets you search, store, and visualize your computer logs and data like magic.",
    "boss": "The Elastic Stack (ELK) collects, stores, and analyzes data in real-time—great for monitoring systems and troubleshooting.",
    "sysadmin": "Elastic Stack (ELK) includes Elasticsearch, Logstash, and Kibana for ingesting, indexing, and visualizing logs and metrics across infrastructure.",
    "emoji": "📊🔎📁",
    "categories": ["Monitoring","Analytics"],
    "related": ["fluentd", "logrotate", "grafana"],
    "aliases": ["elk stack"],
    "use_case": "Using the Elastic Stack to view and filter logs from multiple Docker containers and servers.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "fluentd": {
    "eli5": "A helpful log messenger that collects messages from apps and delivers them to the right place.",
    "boss": "Fluentd collects logs from various sources and forwards them to tools like Elasticsearch or cloud storage.",
    "sysadmin": "Fluentd is an open-source data collector that unifies logging layers across systems by parsing, buffering, and forwarding data in real-time.",
    "emoji": "🛎️📦📨",
    "categories": ["Monitoring","Logging"],
    "related": ["elastic stack", "logrotate", "promtail"],
    "aliases": [],
    "use_case": "Using Fluentd to forward application logs to Elasticsearch for centralized analysis.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "logrotate": {
    "eli5": "It’s a cleanup crew for your log files—making sure they don’t get too big.",
    "boss": "Logrotate keeps system logs manageable by rotating, compressing, or deleting old files based on rules.",
    "sysadmin": "Logrotate is a log management utility that automates the rotation, compression, and removal of logs on a schedule to control disk usage and file clutter.",
    "emoji": "♻️🧹📄",
    "categories": ["Monitoring","Automation"],
    "related": ["fluentd", "cronjob", "systemd timer"],
    "aliases": [],
    "use_case": "Rotating NGINX logs weekly and keeping only the last four using logrotate.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "vm backup": {
    "eli5": "Saving a snapshot of your pretend computer so you can bring it back later if something breaks.",
    "boss": "VM backups create copies of virtual machines to restore in case of failure or updates gone wrong.",
    "sysadmin": "VM backup involves capturing snapshots or full disk images of virtual machines using hypervisor tools or third-party solutions, supporting consistency, scheduling, and restore capabilities.",
    "emoji": "🗂️💾📦",
    "categories": ["Backup","Virtualization"],
    "related": ["proxmox", "rsync", "deployment"],
    "aliases": ["virtual machine backup"],
    "use_case": "Backing up all VMs in a Proxmox node to a NAS on a nightly schedule.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "deployment": {
    "eli5": "Putting a finished app out there so people—or devices—can use it.",
    "boss": "Deployment is the process of pushing software or updates to production so it's live and usable.",
    "sysadmin": "Deployment refers to the automated or manual release of application code or infrastructure changes into production environments, often using CI/CD pipelines or scripts.",
    "emoji": "🚀🖥️📦",
    "categories": ["DevOps","Automation"],
    "related": ["ansible", "terraform", "gitops", "vm backup"],
    "aliases": [],
    "use_case": "Using GitHub Actions to automatically deploy a web app after pushing code to the main branch.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "arch linux": {
    "eli5": "It’s a build-it-yourself Linux where you choose every piece—like adult LEGO.",
    "boss": "Arch Linux is a minimalist, do-it-yourself Linux distro aimed at advanced users who want full control over their system.",
    "sysadmin": "Arch Linux is a rolling-release, x86-64 optimized Linux distribution that provides minimal base installs and extensive documentation via the Arch Wiki, appealing to power users.",
    "emoji": "🏗️🐧🧱",
    "categories": ["Operating Systems"],
    "related": ["debian", "ubuntu server", "opensuse"],
    "aliases": [],
    "use_case": "Installing Arch Linux on a workstation to build a lightweight desktop with only essential packages.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "opensuse": {
    "eli5": "A friendly version of Linux that comes with powerful tools and a green lizard mascot.",
    "boss": "openSUSE is a stable and community-driven Linux OS used for workstations, servers, and developers.",
    "sysadmin": "openSUSE is a Linux distribution with tools like YaST for system configuration, offering both stable (Leap) and rolling (Tumbleweed) release models.",
    "emoji": "🦎🐧🛠️",
    "categories": ["Operating Systems"],
    "related": ["arch linux", "debian", "centos stream"],
    "aliases": [],
    "use_case": "Using openSUSE Leap on a workstation for development with built-in YaST configuration tools.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "lidarr": {
    "eli5": "Like a smart music manager that grabs your favorite albums automatically.",
    "boss": "Lidarr is an automation tool that finds, downloads, and organizes music collections from multiple sources.",
    "sysadmin": "Lidarr is a self-hosted Usenet and BitTorrent music downloader that integrates with indexers, download clients, and media servers to manage music libraries.",
    "emoji": "🎶📥🤖",
    "categories": ["Self-hosting","Automation"],
    "related": ["bazarr", "jackett", "prowlarr"],
    "aliases": [],
    "use_case": "Using Lidarr to monitor new album releases and automatically download FLAC versions to your Plex library.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "bazarr": {
    "eli5": "A subtitle fairy that adds words to your movies—without asking.",
    "boss": "Bazarr automatically downloads and manages subtitles for your media collection.",
    "sysadmin": "Bazarr is a companion tool for Sonarr and Radarr that monitors video libraries and fetches matching subtitles from online sources.",
    "emoji": "📺📝🌐",
    "categories": ["Self-hosting","Automation"],
    "related": ["lidarr", "tautulli", "sonarr"],
    "aliases": [],
    "use_case": "Running Bazarr to automatically download subtitles for foreign films in your Plex collection.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "qbittorrent": {
    "eli5": "A program that lets you share and download files from other people—like a digital swap meet.",
    "boss": "qBittorrent is a free and open-source BitTorrent client for downloading and uploading files via peer-to-peer networks.",
    "sysadmin": "qBittorrent is a Qt-based BitTorrent client with features like RSS support, IP filtering, and a built-in search engine, often used in automated media pipelines.",
    "emoji": "📡📁🔄",
    "categories": ["Self-hosting"],
    "related": ["deluge", "rtorrent", "jackett"],
    "aliases": [],
    "use_case": "Using qBittorrent with Sonarr to automatically download and manage TV shows.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "deluge": {
    "eli5": "Another way to download big files by connecting to lots of people who already have them.",
    "boss": "Deluge is a lightweight BitTorrent client used for peer-to-peer file sharing and automation.",
    "sysadmin": "Deluge is a modular, Python-based BitTorrent client supporting headless daemon mode, plugins, and integration with automation tools like Radarr or Sonarr.",
    "emoji": "🌧️📤📡",
    "categories": ["Self-hosting"],
    "related": ["qbittorrent", "rtorrent", "jackett"],
    "aliases": [],
    "use_case": "Deploying Deluge in a Docker container with a web UI to manage torrents remotely.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "rtorrent": {
    "eli5": "A nerdy version of a torrent program you run from the command line.",
    "boss": "rTorrent is a command-line BitTorrent client designed for speed and remote automation.",
    "sysadmin": "rTorrent is a terminal-based BitTorrent client written in C++, often paired with ruTorrent for a web UI and integrated into seedbox or media workflows.",
    "emoji": "📜📡💻",
    "categories": ["Self-hosting","Command Line"],
    "related": ["deluge", "qbittorrent", "jackett"],
    "aliases": [],
    "use_case": "Running rTorrent on a headless server with ruTorrent to manage torrent downloads over the web.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "nzbget": {
    "eli5": "A robot that grabs TV shows and movies from special forums (Usenet).",
    "boss": "NZBGet is a fast, efficient downloader for Usenet binary content using NZB files.",
    "sysadmin": "NZBGet is a lightweight Usenet downloader optimized for low-resource systems, supporting SSL, categories, post-processing, and automation.",
    "emoji": "📨📁🤖",
    "categories": ["Self-hosting"],
    "related": ["sabnzbd", "sonarr", "prowlarr"],
    "aliases": [],
    "use_case": "Using NZBGet with Lidarr to automatically download music files from Usenet.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "sabnzbd": {
    "eli5": "A friendly downloader for grabbing stuff from Usenet and putting it in the right folder.",
    "boss": "SABnzbd is an open-source Usenet downloader that handles NZB files and automates the download process.",
    "sysadmin": "SABnzbd is a Python-based Usenet client with a browser interface and post-processing support, integrating with automation tools like Radarr and Sonarr.",
    "emoji": "💌📥🛠️",
    "categories": ["Self-hosting"],
    "related": ["nzbget", "prowlarr", "ombi"],
    "aliases": [],
    "use_case": "Running SABnzbd in Docker to handle automatic downloads from Usenet with Sonarr.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "jackett": {
    "eli5": "A middleman that helps your apps search lots of torrent sites without knowing how they work.",
    "boss": "Jackett acts as a universal indexer proxy, letting your media automation tools search dozens of torrent sites.",
    "sysadmin": "Jackett translates queries from tools like Sonarr and Radarr into tracker-specific API calls, enabling torrent indexer access from a single endpoint.",
    "emoji": "🧥🔍🌐",
    "categories": ["Self-hosting","Automation"],
    "related": ["prowlarr", "lidarr", "qbittorrent"],
    "aliases": [],
    "use_case": "Connecting Jackett to Sonarr to access private torrent trackers not natively supported.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ombi": {
    "eli5": "A friendly request board where your family can ask for new movies and shows.",
    "boss": "Ombi provides a user-friendly interface for requesting content in your media library, syncing with Plex, Radarr, and Sonarr.",
    "sysadmin": "Ombi is a self-hosted request management system that integrates with Plex and media automation apps to handle and track content requests from users.",
    "emoji": "📋🎬📬",
    "categories": ["Self-hosting","Collaboration"],
    "related": ["tautulli", "radarr", "sabnzbd"],
    "aliases": [],
    "use_case": "Running Ombi so housemates can request movies that Radarr will automatically download.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "tautulli": {
    "eli5": "It shows who’s been watching what on your media server—and when.",
    "boss": "Tautulli tracks usage statistics, play history, and activity from Plex Media Server.",
    "sysadmin": "Tautulli is a monitoring tool for Plex that provides analytics, notifications, and history logs of media playback and user activity.",
    "emoji": "📊🎥👀",
    "categories": ["Monitoring","Self-hosting"],
    "related": ["ombi", "plex", "bazarr"],
    "aliases": [],
    "use_case": "Using Tautulli to see how often each user watches your Plex library and get alerts when streams are started.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "prowlarr": {
    "eli5": "It’s like Jackett’s cooler cousin who knows how to talk to both torrent and Usenet sites.",
    "boss": "Prowlarr is a unified indexer manager for media automation tools like Sonarr and Radarr.",
    "sysadmin": "Prowlarr is an indexer management app that integrates with popular media automation tools, supporting torrent and Usenet indexers with built-in API compatibility.",
    "emoji": "🕵️‍♂️🔍📡",
    "categories": ["Self-hosting","Automation"],
    "related": ["jackett", "nzbget", "sabnzbd"],
    "aliases": [],
    "use_case": "Replacing Jackett with Prowlarr to manage both torrent and Usenet indexers from one dashboard.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "influxdb": {
    "eli5": "A special notebook that writes down changes over time, like temperatures or CPU usage.",
    "boss": "InfluxDB is a time-series database used to store and analyze metrics like system load, temperatures, or network traffic.",
    "sysadmin": "InfluxDB is a purpose-built database optimized for handling timestamped data, supporting high-ingest workloads, retention policies, and Flux or InfluxQL queries.",
    "emoji": "⏱️📊🧠",
    "categories": ["Monitoring","Database"],
    "related": ["telegraf", "grafana", "timescaledb"],
    "aliases": [],
    "use_case": "Using InfluxDB to store server resource metrics collected by Telegraf and visualize them in Grafana.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "telegraf": {
    "eli5": "A sensor collector that gathers info from your devices and sends it to a database.",
    "boss": "Telegraf collects system and service metrics and ships them to time-series databases like InfluxDB.",
    "sysadmin": "Telegraf is a plugin-driven metrics collector written in Go that supports input/output for InfluxDB, Prometheus, and other databases via agents or service integrations.",
    "emoji": "📦📈📡",
    "categories": ["Monitoring","Automation"],
    "related": ["influxdb", "prometheus", "grafana"],
    "aliases": [],
    "use_case": "Installing Telegraf on all Docker hosts to push CPU and disk metrics into InfluxDB.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "netdata": {
    "eli5": "A live dashboard that shows your computer’s heartbeat in colorful charts.",
    "boss": "Netdata monitors system performance in real time with beautiful graphs and alerts.",
    "sysadmin": "Netdata is a real-time performance monitoring tool with zero-configuration dashboards for servers, containers, applications, and network interfaces.",
    "emoji": "📉🧭💻",
    "categories": ["Monitoring"],
    "related": ["glances", "telegraf", "node exporter"],
    "aliases": [],
    "use_case": "Running Netdata to visualize CPU, RAM, and disk usage on a home server with zero setup.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "glances": {
    "eli5": "It gives you a quick glance at everything your computer is doing—all in one place.",
    "boss": "Glances is a system monitoring tool that summarizes CPU, memory, disk, and network usage in a terminal or web dashboard.",
    "sysadmin": "Glances is a Python-based monitoring CLI that aggregates metrics using psutil, with optional web interface and export to time-series databases.",
    "emoji": "👀💻📈",
    "categories": ["Monitoring","Command Line"],
    "related": ["netdata", "telegraf", "grafana"],
    "aliases": [],
    "use_case": "Using Glances in a terminal to check system health while running Ansible playbooks.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "node exporter": {
    "eli5": "A helper that gathers Linux system stats so Prometheus can read them.",
    "boss": "Node Exporter collects hardware and OS metrics for monitoring with Prometheus.",
    "sysadmin": "Node Exporter is a Prometheus metrics exporter that exposes Linux system stats (CPU, RAM, disk, etc.) via HTTP endpoints for scraping.",
    "emoji": "📊🔍🐧",
    "categories": ["Monitoring"],
    "related": ["prometheus", "snmp exporter", "grafana"],
    "aliases": [],
    "use_case": "Installing Node Exporter on all servers to track system performance with Prometheus and Grafana.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "snmp exporter": {
    "eli5": "It speaks SNMP and tells Prometheus what all your network gadgets are doing.",
    "boss": "SNMP Exporter translates SNMP data from network devices into metrics that Prometheus can understand.",
    "sysadmin": "SNMP Exporter polls SNMP-enabled devices (e.g., switches, firewalls) and exposes the collected data as Prometheus metrics via scrape endpoints.",
    "emoji": "📡🧾📈",
    "categories": ["Monitoring","Networking"],
    "related": ["node exporter", "prometheus", "librenms"],
    "aliases": [],
    "use_case": "Using SNMP Exporter to collect traffic and uptime data from managed switches into Grafana dashboards.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "uptime kuma": {
    "eli5": "A watchdog that checks if your websites or services are still alive and barking.",
    "boss": "Uptime Kuma is a self-hosted monitoring tool that tracks service and website uptime with notifications.",
    "sysadmin": "Uptime Kuma is a lightweight uptime monitoring dashboard with HTTP, TCP, and DNS checks, plus push alert support for Discord, Telegram, and email.",
    "emoji": "📶🟢🔔",
    "categories": ["Monitoring","Self-hosting"],
    "related": ["netdata", "smokeping", "grafana"],
    "aliases": [],
    "use_case": "Running Uptime Kuma to track public services and get alerts when containers crash or restart.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "librenms": {
    "eli5": "It’s like a traffic camera for your entire network—watching and alerting when things go wrong.",
    "boss": "LibreNMS is a network monitoring system that gives visibility into devices and alerts you to issues.",
    "sysadmin": "LibreNMS is a PHP-based, SNMP-compatible network monitoring system with auto-discovery, alerting, and API support for routers, switches, servers, and wireless devices.",
    "emoji": "🌐📊🚨",
    "categories": ["Monitoring","Networking"],
    "related": ["snmp exporter", "netdata", "smokeping"],
    "aliases": [],
    "use_case": "Using LibreNMS to monitor network traffic and device health across your home lab and receive alerts on port failures.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "smokeping": {
    "eli5": "A tool that checks how fast your internet responds—and if it hiccups along the way.",
    "boss": "SmokePing measures and graphs your network latency and packet loss over time.",
    "sysadmin": "SmokePing is a latency monitoring tool that uses ICMP (ping) to track response time, jitter, and packet loss, rendering visual graphs for network diagnostics.",
    "emoji": "💨📶📈",
    "categories": ["Monitoring","Networking"],
    "related": ["librenms", "uptime kuma", "prometheus"],
    "aliases": [],
    "use_case": "Running SmokePing to track latency spikes and packet loss during work hours across your home network.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "zigbee2mqtt": {
    "eli5": "It helps smart devices that speak Zigbee talk to your smart home brain over Wi-Fi.",
    "boss": "Zigbee2MQTT lets you connect Zigbee devices to your smart home via MQTT, without relying on proprietary hubs.",
    "sysadmin": "Zigbee2MQTT is a bridge that allows Zigbee-based smart devices to communicate through MQTT brokers by interfacing with a Zigbee coordinator dongle.",
    "emoji": "📡💬🏠",
    "categories": ["Smart Home","IoT"],
    "related": ["mosquitto", "zigbee dongle", "mqtt"],
    "aliases": [],
    "use_case": "Using Zigbee2MQTT with a USB coordinator to control smart plugs and sensors via Home Assistant.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "z-wave js": {
    "eli5": "It’s the interpreter that helps Z-Wave smart devices understand what your smart home is asking.",
    "boss": "Z-Wave JS is a modern JavaScript-based library and integration layer for controlling Z-Wave smart home devices.",
    "sysadmin": "Z-Wave JS is a Node.js-based driver and API layer enabling smart home platforms like Home Assistant to communicate with Z-Wave devices using serial controllers.",
    "emoji": "🌊🔌🏡",
    "categories": ["Smart Home","IoT"],
    "related": ["zigbee2mqtt", "mqtt", "home assistant"],
    "aliases": ["zwave js"],
    "use_case": "Using Z-Wave JS with a USB stick to pair locks, motion sensors, and dimmers inside Home Assistant.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mosquitto": {
    "eli5": "A post office that delivers tiny messages between your smart devices.",
    "boss": "Mosquitto is a lightweight MQTT broker used to pass messages between smart devices and services.",
    "sysadmin": "Eclipse Mosquitto is an open-source MQTT broker that supports the publish/subscribe model, commonly used in IoT and home automation networks.",
    "emoji": "📮📲🔁",
    "categories": ["IoT","Smart Home","Networking Protocols"],
    "related": ["zigbee2mqtt", "mqtt", "home assistant"],
    "aliases": [],
    "use_case": "Running Mosquitto in Docker to relay sensor data between Zigbee2MQTT and Home Assistant.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mariadb": {
    "eli5": "A big digital notebook that apps use to store their stuff—like users, posts, or settings.",
    "boss": "MariaDB is an open-source database server often used to store websites, apps, or service data.",
    "sysadmin": "MariaDB is a MySQL-compatible relational database management system (RDBMS) offering improved performance, features, and open governance after MySQL's acquisition by Oracle.",
    "emoji": "🗃️🐬📊",
    "categories": ["Database"],
    "related": ["mysql", "postgresql", "sqlite"],
    "aliases": [],
    "use_case": "Deploying MariaDB as the backend database for WordPress in a self-hosted Docker stack.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "mysql": {
    "eli5": "One of the most popular tools for storing and organizing data like a big spreadsheet for apps.",
    "boss": "MySQL is a widely-used open-source database server powering websites, apps, and services.",
    "sysadmin": "MySQL is a relational database management system (RDBMS) supporting SQL queries, ACID compliance, and integration with PHP and other web technologies.",
    "emoji": "🐬🗂️🧠",
    "categories": ["Database"],
    "related": ["mariadb", "postgresql", "sqlite"],
    "aliases": [],
    "use_case": "Running MySQL for a self-hosted CRM system that requires structured, relational data storage.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gitea": {
    "eli5": "It’s like your own mini GitHub that you can run at home.",
    "boss": "Gitea is a lightweight, self-hosted Git service for managing code repositories with a web interface.",
    "sysadmin": "Gitea is a painless, Go-based Git server with features like issue tracking, pull requests, and CI hooks, designed for lightweight self-hosted deployments.",
    "emoji": "🐱‍💻📁🔧",
    "categories": ["Version Control","Self-hosting"],
    "related": ["gogs", "git", "github"],
    "aliases": [],
    "use_case": "Hosting a private Git repository for a development project on a Raspberry Pi using Gitea.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gogs": {
    "eli5": "It’s the smaller sibling of Gitea—also a home for your code.",
    "boss": "Gogs is a self-hosted Git service built for efficiency and minimal resource use.",
    "sysadmin": "Gogs (Go Git Service) is a compact, open-source Git platform written in Go, offering a web interface, user management, and Git hosting via HTTP/SSH.",
    "emoji": "📦🖥️🔁",
    "categories": ["Version Control","Self-hosting"],
    "related": ["gitea", "git", "github"],
    "aliases": [],
    "use_case": "Deploying Gogs on a VPS to manage source control without relying on public Git services.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "kill-a-watt": {
    "eli5": "A gadget you plug in to see how much electricity your devices are eating.",
    "boss": "Kill-A-Watt is a device that measures electrical usage, helping track power consumption and cost.",
    "sysadmin": "Kill-A-Watt is a plug-in energy monitor that displays voltage, current, wattage, and kWh usage to evaluate device power consumption and efficiency.",
    "emoji": "🔌⚡📊",
    "categories": ["Hardware","Monitoring"],
    "related": ["power meter", "energy monitoring", "smart plug"],
    "aliases": [],
    "use_case": "Using a Kill-A-Watt to check how much power your always-on homelab server uses.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "rack fan controller": {
    "eli5": "It’s the thermostat for your server rack—it keeps things cool automatically.",
    "boss": "A rack fan controller monitors rack temperature and controls fan speeds to keep hardware cool and safe.",
    "sysadmin": "Rack fan controllers regulate airflow by adjusting fan speeds based on temperature sensors, often used in server enclosures to maintain optimal thermal conditions.",
    "emoji": "🌬️🧊📟",
    "categories": ["Hardware","Infrastructure"],
    "related": ["rackmount server", "temperature sensor", "smart pdu"],
    "aliases": [],
    "use_case": "Installing a rack fan controller to keep network gear from overheating in a closed cabinet.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "noise level monitor": {
    "eli5": "It’s like a microphone that tells you how loud your room is—great for keeping the peace.",
    "boss": "A noise level monitor measures sound levels in an area, often for comfort, compliance, or automation.",
    "sysadmin": "Noise level monitors use decibel sensors to track ambient sound, often integrated with smart home systems for triggering automations or alerts.",
    "emoji": "🔊📉📏",
    "categories": ["Smart Home","Monitoring"],
    "related": ["zigbee2mqtt", "sensor", "environmental monitoring"],
    "aliases": [],
    "use_case": "Using a noise sensor to dim lights automatically when the room gets too loud after bedtime.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "zigbee dongle": {
    "eli5": "A USB stick that lets your computer talk to Zigbee smart devices.",
    "boss": "A Zigbee dongle is a USB radio adapter used to connect Zigbee devices to your home automation system.",
    "sysadmin": "Zigbee dongles act as coordinators for Zigbee networks, interfacing with software like Zigbee2MQTT or ZHA over USB serial connections.",
    "emoji": "📡🔌🏠",
    "categories": ["Smart Home","Hardware","IoT"],
    "related": ["zigbee2mqtt", "mqtt", "usb hub"],
    "aliases": [],
    "use_case": "Adding a Zigbee dongle to Home Assistant to pair and control smart bulbs without a proprietary hub.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "usb hub": {
    "eli5": "A power strip for USB—so you can plug in more devices at once.",
    "boss": "A USB hub expands the number of USB ports available on your computer or server.",
    "sysadmin": "USB hubs allow multiple devices to connect via one USB port, often with power delivery and compatibility for devices like Zigbee dongles or flash drives.",
    "emoji": "🔌🖥️🧃",
    "categories": ["Hardware"],
    "related": ["zigbee dongle", "serial console", "usb flash drive"],
    "aliases": [],
    "use_case": "Using a USB hub to connect a Zigbee dongle, UPS cable, and SSD to a single Raspberry Pi.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "serial console": {
    "eli5": "It’s a special plug that lets you talk directly to a computer, even if it won’t turn on properly.",
    "boss": "A serial console allows direct access to a device’s operating system via a physical or emulated serial port.",
    "sysadmin": "Serial consoles are command-line interfaces accessed via RS-232 or USB for managing servers, routers, and appliances during boot or when network access fails.",
    "emoji": "🖥️🔌📟",
    "categories": ["Infrastructure","Command Line"],
    "related": ["console cable", "ipmi", "out-of-band management"],
    "aliases": [],
    "use_case": "Connecting to a network switch via serial console to reconfigure IP settings after a network failure.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "console cable": {
    "eli5": "A special wire that lets you talk to a device that’s not on the network—like direct messaging a router.",
    "boss": "Console cables connect your computer to network hardware for direct configuration or recovery.",
    "sysadmin": "Console cables (like RJ45-to-USB or serial-to-USB) provide terminal access to routers, switches, and firewalls via serial console ports for initial setup or troubleshooting.",
    "emoji": "🔌📠🖥️",
    "categories": ["Infrastructure","Networking"],
    "related": ["serial console", "ipmi", "out-of-band management"],
    "aliases": [],
    "use_case": "Using a console cable to configure a new firewall before adding it to the network.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "out-of-band management": {
    "eli5": "A secret backdoor to your servers—so you can fix them even if they crash.",
    "boss": "Out-of-band management lets you control hardware remotely even when the OS is down.",
    "sysadmin": "Out-of-band management uses dedicated interfaces (e.g., IPMI, iDRAC, ILO) to access servers below the OS level for power control, BIOS access, and diagnostics.",
    "emoji": "🕳️🖥️🌐",
    "categories": ["Infrastructure","Security"],
    "related": ["ipmi", "idrac", "ilo"],
    "aliases": [],
    "use_case": "Using out-of-band access to reboot and fix a frozen server in a remote data center.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ipmi": {
    "eli5": "It’s like a remote control for your server—even when it’s powered off.",
    "boss": "IPMI is a protocol that lets you manage and monitor servers remotely at the hardware level.",
    "sysadmin": "The Intelligent Platform Management Interface (IPMI) provides hardware-level control for servers via a baseboard management controller (BMC), including remote boot, logs, and sensors.",
    "emoji": "🧠🔧📡",
    "categories": ["Infrastructure","Security"],
    "related": ["idrac", "ilo", "out-of-band management"],
    "aliases": [],
    "use_case": "Accessing IPMI to mount an ISO and reinstall the OS on a headless server.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "idrac": {
    "eli5": "It’s Dell’s magic window into a server, even if the server itself is broken.",
    "boss": "iDRAC is Dell’s remote management system that gives full control of its servers from anywhere.",
    "sysadmin": "Integrated Dell Remote Access Controller (iDRAC) enables full out-of-band management, including virtual media, power cycling, sensor monitoring, and BIOS access.",
    "emoji": "🖥️💡🕹️",
    "categories": ["Infrastructure","Security"],
    "related": ["ipmi", "ilo", "out-of-band management"],
    "aliases": [],
    "use_case": "Using iDRAC to restart a crashed Dell server and boot from a recovery ISO remotely.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ilo": {
    "eli5": "It’s HP’s version of a remote control for their servers.",
    "boss": "ILO (Integrated Lights-Out) is HP’s server management interface for out-of-band control and diagnostics.",
    "sysadmin": "HPE’s Integrated Lights-Out (iLO) provides remote server management with access to power, virtual media, hardware logs, and BIOS settings, similar to IPMI.",
    "emoji": "💡🧰🌐",
    "categories": ["Infrastructure","Security"],
    "related": ["idrac", "ipmi", "out-of-band management"],
    "aliases": ["integrated lights-out"],
    "use_case": "Using ILO to perform a BIOS update on a remote HP server after hours.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cloud sync": {
    "eli5": "It’s like a two-way backpack that keeps your files in sync between your home and the cloud.",
    "boss": "Cloud sync lets you back up or mirror local files to cloud storage providers automatically.",
    "sysadmin": "Cloud sync tools synchronize files between local storage and cloud platforms (e.g., S3, Wasabi), supporting scheduling, versioning, and encryption.",
    "emoji": "☁️🔁📂",
    "categories": ["Backup","Storage","Cloud"],
    "related": ["rclone", "wasabi", "amazon s3"],
    "aliases": [],
    "use_case": "Syncing nightly backups from a TrueNAS system to Backblaze B2 using Cloud Sync tasks.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "backblaze b2": {
    "eli5": "A super-cheap cloud locker for all your important files.",
    "boss": "Backblaze B2 is an affordable cloud storage solution used for backups and data archiving.",
    "sysadmin": "Backblaze B2 is an S3-compatible object storage service offering low-cost cloud storage with APIs for integration into backup workflows.",
    "emoji": "💾☁️🧮",
    "categories": ["Backup","Cloud","Storage"],
    "related": ["rclone", "wasabi", "cloud sync"],
    "aliases": [],
    "use_case": "Backing up server snapshots to Backblaze B2 using rclone with encryption.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "wasabi": {
    "eli5": "A hot cloud vault that stores files affordably without surprise bills.",
    "boss": "Wasabi is a cloud storage service known for flat-rate pricing and no egress fees.",
    "sysadmin": "Wasabi is an S3-compatible cloud object storage provider with predictable pricing, commonly used for offsite backups and archival.",
    "emoji": "🌶️💽☁️",
    "categories": ["Backup","Cloud","Storage"],
    "related": ["backblaze b2", "amazon s3", "cloud sync"],
    "aliases": [],
    "use_case": "Using Wasabi to store 30-day rolling backups from a home NAS with no extra download costs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "amazon s3": {
    "eli5": "A giant digital warehouse where you can store anything—from photos to databases.",
    "boss": "Amazon S3 is Amazon’s cloud storage service for storing files, backups, and large-scale data.",
    "sysadmin": "Amazon Simple Storage Service (S3) is a scalable object storage platform with fine-grained access controls, versioning, lifecycle rules, and widespread tool support.",
    "emoji": "📦☁️🔐",
    "categories": ["Cloud","Storage","Backup"],
    "related": ["wasabi", "backblaze b2", "cloud sync"],
    "aliases": ["s3"],
    "use_case": "Using Amazon S3 as the backend storage for a static website and automated database backups.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "google drive api": {
    "eli5": "It’s how apps can talk to your Google Drive to upload, download, or organize files.",
    "boss": "The Google Drive API lets developers programmatically access and manage files in a user’s Google Drive.",
    "sysadmin": "Google Drive API is a RESTful interface enabling read/write access to Drive files, folder creation, permissions, and automation within custom applications or integrations.",
    "emoji": "📁🤝☁️",
    "categories": ["Cloud","APIs","Productivity"],
    "related": ["rclone", "dropbox api", "cloud sync"],
    "aliases": [],
    "use_case": "Using the Google Drive API in n8n to upload rendered video clips automatically from a local render server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cidr": {
    "eli5": "It’s how computers group and count IP addresses efficiently, like making neat address labels.",
    "boss": "CIDR is a way of organizing IP addresses into blocks using slash notation for easier routing.",
    "sysadmin": "Classless Inter-Domain Routing (CIDR) uses a suffix (e.g., /24) to represent IP ranges, replacing classful networking and enabling subnetting and route aggregation.",
    "emoji": "📦🧮🌐",
    "categories": ["Networking","Networking Protocols"],
    "related": ["subnet", "subnet mask", "ip address"],
    "aliases": ["classless inter-domain routing"],
    "use_case": "Using CIDR notation (like 192.168.1.0/24) in firewall rules to allow a whole subnet to access your services.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "postgresql": {
    "eli5": "A smart, reliable digital notebook that never loses your stuff and understands complex questions.",
    "boss": "PostgreSQL is a powerful, open-source relational database used by many enterprise apps for reliable data storage.",
    "sysadmin": "PostgreSQL is a feature-rich, ACID-compliant RDBMS with support for advanced queries, JSON, stored procedures, full-text search, and extensions like PostGIS and TimescaleDB.",
    "emoji": "🐘📊🔍",
    "categories": ["Database"],
    "related": ["mysql", "mariadb", "timescaledb"],
    "aliases": ["postgres"],
    "use_case": "Running PostgreSQL to store data for a Django-based web application in a self-hosted Docker stack.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "sqlite": {
    "eli5": "A tiny, simple database that lives in one file—no server needed.",
    "boss": "SQLite is a lightweight, file-based database ideal for mobile apps, small tools, and local storage.",
    "sysadmin": "SQLite is a self-contained RDBMS that stores data in a single disk file, supports SQL queries, and requires no configuration or server process.",
    "emoji": "🗃️📁🧩",
    "categories": ["Database"],
    "related": ["postgresql", "mariadb", "mysql"],
    "aliases": [],
    "use_case": "Using SQLite as the backend database for a lightweight note-taking app running on a Raspberry Pi.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "mongodb": {
    "eli5": "Instead of storing data in rows and tables, it uses flexible blocks—like digital LEGO.",
    "boss": "MongoDB is a NoSQL database that stores data in JSON-like documents, great for fast and flexible applications.",
    "sysadmin": "MongoDB is a document-oriented NoSQL database that stores BSON objects, supports replication and sharding, and is ideal for unstructured or dynamic schema data.",
    "emoji": "🍃📦📄",
    "categories": ["Database"],
    "related": ["redis", "sqlite", "postgresql"],
    "aliases": [],
    "use_case": "Using MongoDB to store user profiles and logs for a Node.js web app with a flexible schema.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "redis": {
    "eli5": "It’s like a super-fast sticky note board for computers that need to remember things quickly.",
    "boss": "Redis is a blazing-fast, in-memory database often used for caching, messaging, or real-time apps.",
    "sysadmin": "Redis is an in-memory key-value store that supports strings, hashes, lists, and pub/sub messaging, widely used for caching and ephemeral data storage.",
    "emoji": "🚀🧠📌",
    "categories": ["Database","Infrastructure"],
    "related": ["mongodb", "postgresql", "cache"],
    "aliases": [],
    "use_case": "Deploying Redis to cache database queries in a high-traffic web app and reduce response times.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "timescaledb": {
    "eli5": "A smart calendar notebook built on PostgreSQL, perfect for tracking things that change over time.",
    "boss": "TimescaleDB adds time-series capabilities to PostgreSQL, making it ideal for storing metrics, logs, or sensor data.",
    "sysadmin": "TimescaleDB is a PostgreSQL extension optimized for time-series data, offering compression, retention policies, and fast queries over large volumes of timestamped data.",
    "emoji": "📅📈🐘",
    "categories": ["Database","Monitoring"],
    "related": ["postgresql", "influxdb", "grafana"],
    "aliases": [],
    "use_case": "Storing smart sensor data from Home Assistant in TimescaleDB for easy analysis and visualization with Grafana.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "hostname": {
    "eli5": "It’s like your computer’s name tag so other devices can say hi.",
    "boss": "A hostname is the name assigned to a device on a network to identify it.",
    "sysadmin": "The hostname is a human-readable label assigned to a device, used in DNS resolution and local networking to identify and differentiate systems.",
    "emoji": "🏷️💻🌐",
    "categories": ["Networking","Operating Systems"],
    "related": ["local domain", "mdns", "reverse dns"],
    "aliases": [],
    "use_case": "Setting a hostname like 'media-server' so you can access your NAS by name instead of IP.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "static route": {
    "eli5": "A map that tells your network exactly how to get somewhere—no guessing allowed.",
    "boss": "A static route is a manually set path for network traffic to follow between devices or subnets.",
    "sysadmin": "Static routes define fixed paths in a router or host’s routing table for directing traffic to specific networks without relying on dynamic routing protocols.",
    "emoji": "🗺️➡️📡",
    "categories": ["Networking"],
    "related": ["subnet", "gateway", "split dns"],
    "aliases": [],
    "use_case": "Adding a static route so your smart home VLAN can reach a service hosted on another subnet.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "split dns": {
    "eli5": "It’s like having two address books—one for inside your house and one for the outside world.",
    "boss": "Split DNS lets internal users see private IPs while external users see public ones for the same domain.",
    "sysadmin": "Split DNS uses different DNS records for the same domain depending on where the query comes from (internal vs external), often used for self-hosted apps.",
    "emoji": "📘🔀🌍",
    "categories": ["Networking","DNS"],
    "related": ["dns", "local domain", "reverse dns"],
    "aliases": [],
    "use_case": "Using Split DNS so that 'nextcloud.mydomain.com' resolves to a local IP inside the home and a public IP externally.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "local domain": {
    "eli5": "Your own little internet where you make up the rules and names.",
    "boss": "A local domain is a custom naming system for internal devices not meant to be accessible from the internet.",
    "sysadmin": "Local domains are private DNS zones (e.g., `.home`, `.lan`) managed internally for name resolution in a LAN without relying on public DNS.",
    "emoji": "🏠🌐🔐",
    "categories": ["Networking"],
    "related": ["split dns", "mdns", "hostname"],
    "aliases": [],
    "use_case": "Using a local domain like `nas.home` so you can access devices in your network by name.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  ". local tld": {
    "eli5": "A pretend website ending in `.local` that only works in your house.",
    "boss": ".local is a special domain suffix used for internal devices that don’t need to be on the internet.",
    "sysadmin": ".local is a pseudo–top-level domain used by mDNS and system resolvers (like Avahi or Bonjour) to resolve hostnames within a local network automatically.",
    "emoji": "🌐🧷🏡",
    "categories": ["Networking","DNS"],
    "related": ["local domain", "mdns", "bonjour"],
    "aliases": ["dot local", "dotlocal", "local tld"],
    "use_case": "Accessing `printer.local` without setting up DNS by relying on mDNS.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mdns": {
    "eli5": "It helps devices in your house find each other by name—like magic.",
    "boss": "Multicast DNS (mDNS) lets local devices find each other by hostname without a DNS server.",
    "sysadmin": "mDNS (Multicast DNS) resolves `.local` hostnames on local networks by broadcasting queries to all nearby devices, allowing zero-config service discovery.",
    "emoji": "📡📣🔍",
    "categories": ["Networking Protocols","Smart Home"],
    "related": ["bonjour", ". local tld", "hostname"],
    "aliases": ["multicast dns"],
    "use_case": "Using mDNS to reach your Raspberry Pi at `raspberrypi.local` without DNS setup.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "bonjour": {
    "eli5": "Apple’s magic trick that lets your devices find each other without setup.",
    "boss": "Bonjour is Apple’s implementation of zero-config networking—it helps devices discover each other automatically on local networks.",
    "sysadmin": "Bonjour is Apple’s service discovery protocol built on mDNS, enabling automatic detection of printers, computers, and services within a local subnet.",
    "emoji": "🍎📡🧭",
    "categories": ["Networking Protocols","Smart Home"],
    "related": ["mdns", ". local tld", "local domain"],
    "aliases": [],
    "use_case": "Using Bonjour to automatically detect AirPlay speakers and printers on your home network.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "vaultwarden": {
    "eli5": "A password vault you host yourself so no one else holds the keys.",
    "boss": "Vaultwarden is a self-hosted Bitwarden-compatible password manager that stores encrypted credentials securely.",
    "sysadmin": "Vaultwarden is a lightweight Rust-based Bitwarden API server that supports self-hosted password storage with browser and mobile app sync.",
    "emoji": "🔐🏠🧠",
    "categories": ["Security","Self-hosting"],
    "related": ["bitwarden", "nextcloud", "self-hosted email"],
    "aliases": [],
    "use_case": "Running Vaultwarden on a Raspberry Pi to securely manage family logins and 2FA tokens.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "bitwarden": {
    "eli5": "A digital vault that remembers all your passwords so you don’t have to.",
    "boss": "Bitwarden is a cloud-based password manager that keeps your logins safe and synced across devices.",
    "sysadmin": "Bitwarden is an open-source password manager supporting encrypted vaults, browser extensions, TOTP, and enterprise-level access control, with cloud and self-hosted options.",
    "emoji": "🔑💼🧰",
    "categories": ["Security","Productivity"],
    "related": ["vaultwarden", "2fa", "encryption"],
    "aliases": [],
    "use_case": "Using Bitwarden to manage login credentials across multiple browsers and mobile devices with autofill.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "nextcloud": {
    "eli5": "A personal cloud that lives in your house, not someone else’s.",
    "boss": "Nextcloud is a self-hosted file sharing and collaboration platform that gives you Dropbox-like features without third-party storage.",
    "sysadmin": "Nextcloud is a PHP-based self-hosted cloud suite offering file sync, calendar, contacts, office collaboration, and app integrations with strict data privacy controls.",
    "emoji": "☁️🏠📁",
    "categories": ["Self-hosting","Collaboration","Cloud"],
    "related": ["vaultwarden", "seafile", "syncthing"],
    "aliases": [],
    "use_case": "Hosting Nextcloud on a home server to sync files, calendars, and photos across all your devices.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "syncthing": {
    "eli5": "It keeps your files in sync between your devices without using the cloud.",
    "boss": "Syncthing is a peer-to-peer file synchronization tool for secure, private data sharing between your own devices.",
    "sysadmin": "Syncthing is an open-source decentralized sync tool that uses TLS-encrypted peer-to-peer connections for continuous file replication without third-party servers.",
    "emoji": "🔁🖥️📁",
    "categories": ["Self-hosting","Backup"],
    "related": ["nextcloud", "seafile", "resilio sync"],
    "aliases": [],
    "use_case": "Using Syncthing to keep work files in sync between a desktop, laptop, and phone without Dropbox.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "seafile": {
    "eli5": "A high-speed file-sharing box you run yourself.",
    "boss": "Seafile is a self-hosted cloud storage platform designed for fast file syncing and sharing.",
    "sysadmin": "Seafile is a high-performance file hosting platform with deduplication, encryption, and built-in file versioning, supporting Linux and Docker deployment.",
    "emoji": "📦🚀📤",
    "categories": ["Self-hosting","Cloud"],
    "related": ["nextcloud", "syncthing", "resilio sync"],
    "aliases": [],
    "use_case": "Using Seafile in a small office to sync shared documents with version control and group folders.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "resilio sync": {
    "eli5": "It’s like magic mail between your devices that doesn’t go through the internet.",
    "boss": "Resilio Sync is a peer-to-peer file syncing tool that uses BitTorrent tech to move data securely and quickly.",
    "sysadmin": "Resilio Sync uses peer-to-peer protocols and encryption to synchronize files between devices without cloud storage or central servers, ideal for fast, large transfers.",
    "emoji": "🔗📥🧲",
    "categories": ["Backup","Self-hosting"],
    "related": ["syncthing", "seafile", "nextcloud"],
    "aliases": [],
    "use_case": "Using Resilio Sync to back up video footage from multiple remote locations to a central server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "paperless-ngx": {
    "eli5": "It turns your paper documents into digital ones—and keeps them organized like a filing cabinet.",
    "boss": "Paperless-ngx is a document management system that scans, OCRs, and stores your files for easy searching and access.",
    "sysadmin": "Paperless-ngx is a self-hosted DMS with OCR, tag-based organization, metadata extraction, and a web UI for managing scanned or uploaded PDFs.",
    "emoji": "📄🧾🔍",
    "categories": ["Self-hosting","Productivity"],
    "related": ["nextcloud", "photoprism", "immich"],
    "aliases": [],
    "use_case": "Scanning receipts and uploading them to Paperless-ngx to search and organize them digitally by tags and vendors.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "photoprism": {
    "eli5": "A private photo album you host yourself that helps you search by people, places, and things.",
    "boss": "PhotoPrism is a self-hosted photo management app that automatically organizes, tags, and indexes your pictures.",
    "sysadmin": "PhotoPrism is a privacy-first AI-powered photo library with face recognition, geotagging, duplicate detection, and album creation from local folders or cloud sync.",
    "emoji": "📷🌍🗂️",
    "categories": ["Self-hosting","Cloud"],
    "related": ["immich", "nextcloud", "paperless-ngx"],
    "aliases": [],
    "use_case": "Using PhotoPrism on a home server to auto-tag, organize, and browse family vacation photos.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "immich": {
    "eli5": "It’s like your own personal Google Photos—but without the Google part.",
    "boss": "Immich is a self-hosted photo and video backup platform for mobile devices with instant upload and organization.",
    "sysadmin": "Immich is a TypeScript-based mobile photo backup app that syncs to a self-hosted server, supporting albums, face detection, live photos, and multi-user management.",
    "emoji": "📸🛡️📲",
    "categories": ["Self-hosting","Cloud"],
    "related": ["photoprism", "nextcloud", "paperless-ngx"],
    "aliases": [],
    "use_case": "Backing up smartphone photos to Immich over Wi-Fi instead of using cloud storage providers.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "media server": {
    "eli5": "It’s like a jukebox and movie library for your home that streams to your devices.",
    "boss": "A media server stores and streams movies, music, and photos to devices like smart TVs or phones.",
    "sysadmin": "Media servers host and transcode audio/video content for DLNA, web, and app-based access using platforms like Plex, Jellyfin, or Emby.",
    "emoji": "🎬📡📺",
    "categories": ["Self-hosting","Smart Home"],
    "related": ["plex", "jellyfin", "nextcloud"],
    "aliases": [],
    "use_case": "Setting up a media server to stream 4K movies from a NAS to all TVs in the house.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "self-hosted email": {
    "eli5": "Running your own mailbox server so no big company reads your mail.",
    "boss": "Self-hosted email lets you manage email accounts and servers under your own domain instead of using third-party services.",
    "sysadmin": "Self-hosted email setups include SMTP, IMAP, spam filtering, DKIM/DMARC, and webmail interfaces, using tools like Postfix, Dovecot, and Mailcow.",
    "emoji": "📬🏠🔐",
    "categories": ["Self-hosting","Privacy"],
    "related": ["postfix", "dovecot", "mailcow", "mailu"],
    "aliases": [],
    "use_case": "Hosting your own email server on a VPS using Mailcow for complete control over privacy and spam filtering.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mailcow": {
    "eli5": "A prebuilt email farm you can host yourself that takes care of mailboxes, spam, and webmail.",
    "boss": "Mailcow is a full-featured mail server suite with a modern UI, spam protection, and self-hosting capabilities.",
    "sysadmin": "Mailcow is a Dockerized email server suite that includes Postfix, Dovecot, Rspamd, SOGo webmail, and automated DKIM/SSL management under a unified web UI.",
    "emoji": "🐄📧📬",
    "categories": ["Self-hosting","Email"],
    "related": ["mailu", "postfix", "dovecot"],
    "aliases": [],
    "use_case": "Deploying Mailcow on a VPS to host multiple custom domains with DKIM signing and SOGo webmail access.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "mailu": {
    "eli5": "A smaller, leaner alternative to Mailcow that helps you host your own email server.",
    "boss": "Mailu is a self-hosted email server stack focused on simplicity and Docker-based deployment.",
    "sysadmin": "Mailu is a lightweight mail server suite built on Postfix, Dovecot, and Rspamd, offering webmail, admin UI, and basic DKIM/DMARC setup via Docker.",
    "emoji": "✉️🛠️🐳",
    "categories": ["Self-hosting","Email"],
    "related": ["mailcow", "postfix", "dovecot"],
    "aliases": [],
    "use_case": "Using Mailu to self-host email for a small business domain with minimal server resources.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "postfix": {
    "eli5": "It’s the mailman that takes your outgoing messages and delivers them.",
    "boss": "Postfix is a mail transfer agent that sends and routes outgoing email.",
    "sysadmin": "Postfix is a high-performance MTA that handles SMTP message delivery, queueing, and relay control, often used in self-hosted and enterprise mail stacks.",
    "emoji": "📤📮📨",
    "categories": ["Email","Self-hosting"],
    "related": ["dovecot", "mailcow", "dkim"],
    "aliases": [],
    "use_case": "Using Postfix to relay messages from a WordPress site using SMTP authentication and TLS encryption.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dovecot": {
    "eli5": "It’s the post office where your email waits for you to read it.",
    "boss": "Dovecot is a server that stores and serves incoming emails for retrieval by apps like Outlook or Thunderbird.",
    "sysadmin": "Dovecot is a lightweight IMAP and POP3 server that securely stores email and supports authentication, SSL, and mailbox indexing for fast access.",
    "emoji": "📥🗃️🔑",
    "categories": ["Email","Self-hosting"],
    "related": ["postfix", "mailcow", "mailu"],
    "aliases": [],
    "use_case": "Using Dovecot alongside Postfix to enable secure IMAP access to personal emails hosted at home.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "roundcube": {
    "eli5": "It’s like Gmail, but you host it yourself and it only checks your own mail server.",
    "boss": "Roundcube is a self-hosted webmail app used to access email accounts through a browser.",
    "sysadmin": "Roundcube is a PHP-based IMAP webmail client that connects to self-hosted mail servers like Dovecot, offering themes, plugins, and multi-account support.",
    "emoji": "🌐📧📬",
    "categories": ["Email","Self-hosting"],
    "related": ["dovecot", "mailcow", "webmail"],
    "aliases": [],
    "use_case": "Deploying Roundcube to give users browser-based access to Mailcow-hosted email accounts.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dkim": {
    "eli5": "It’s like signing your email with a secret stamp so people know it’s really from you.",
    "boss": "DKIM adds a digital signature to outgoing emails to prove they came from an authorized server.",
    "sysadmin": "DomainKeys Identified Mail (DKIM) uses cryptographic signatures embedded in email headers to validate message authenticity and protect against spoofing.",
    "emoji": "✍️📧🔐",
    "categories": ["Email","Security"],
    "related": ["dmarc", "spf", "postfix"],
    "aliases": ["domainkeys identified mail"],
    "use_case": "Configuring DKIM in Mailcow so recipients can verify that emails really came from your domain.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "dmarc": {
    "eli5": "It tells mailboxes what to do if your emails look fake—like ignore, quarantine, or block them.",
    "boss": "DMARC builds on SPF and DKIM to protect your domain from email spoofing and phishing attacks.",
    "sysadmin": "Domain-based Message Authentication, Reporting & Conformance (DMARC) is a DNS policy that instructs how to handle emails that fail DKIM/SPF checks and provides reporting capabilities.",
    "emoji": "📋📨🚫",
    "categories": ["Email","Security"],
    "related": ["dkim", "spf", "postfix"],
    "aliases": ["domain-based message authentication reporting and conformance"],
    "use_case": "Setting up a DMARC policy to block spoofed emails claiming to come from your company domain.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "rainloop": {
    "eli5": "A webmail app you host yourself—clean, simple, and fast.",
    "boss": "Rainloop is a lightweight webmail client that connects to IMAP email servers using a sleek browser interface.",
    "sysadmin": "Rainloop is a PHP-based webmail client with IMAP and SMTP support, offering a minimal UI, multi-account support, and simple configuration for self-hosted email environments.",
    "emoji": "🌧️📧💻",
    "categories": ["Email","Self-hosting"],
    "related": ["roundcube", "mailcow", "dovecot"],
    "aliases": [],
    "use_case": "Deploying Rainloop on a VPS to offer a clean web interface for a self-hosted email server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "reverse dns": {
    "eli5": "Instead of turning a name into a number, it turns a number into a name.",
    "boss": "Reverse DNS looks up the domain name associated with an IP address—often used for email validation or logging.",
    "sysadmin": "Reverse DNS (rDNS) uses PTR records to map IP addresses back to domain names, often required for outbound mail servers to avoid being flagged as spam.",
    "emoji": "🔁🌐🧾",
    "categories": ["Networking","DNS"],
    "related": ["dkim", "spf", "hostname"],
    "aliases": ["rdns"],
    "use_case": "Setting up reverse DNS for your mail server's IP to prevent outgoing emails from being rejected by spam filters.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "spf": {
    "eli5": "A list that says who’s allowed to send email for your website.",
    "boss": "SPF is a DNS record that lists which mail servers are allowed to send email for your domain.",
    "sysadmin": "Sender Policy Framework (SPF) is a DNS TXT record that defines authorized SMTP senders for a domain to prevent spoofing and phishing.",
    "emoji": "📄📧🛡️",
    "categories": ["Email","Security"],
    "related": ["dkim", "dmarc", "reverse dns"],
    "aliases": ["sender policy framework"],
    "use_case": "Adding an SPF record to your domain DNS to authorize Mailcow to send emails for your domain.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "apc ups": {
    "eli5": "A battery backup that keeps your stuff running when the power goes out.",
    "boss": "An APC UPS protects your equipment from power outages by keeping devices on temporarily and shutting them down cleanly.",
    "sysadmin": "An APC UPS is an uninterruptible power supply that provides backup power and surge protection, often managed via USB or SNMP for graceful shutdown automation.",
    "emoji": "🔋⚡🔌",
    "categories": ["Hardware","Infrastructure"],
    "related": ["nut", "battery backup", "pdu"],
    "aliases": ["apc uninterruptible power supply"],
    "use_case": "Using an APC UPS to provide 10 minutes of runtime and automatic shutdown for your home lab server during outages.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "nut": {
    "eli5": "A tool that talks to your UPS and tells your server when the power's gone.",
    "boss": "NUT is software that monitors and manages UPS devices, handling shutdowns during power outages.",
    "sysadmin": "Network UPS Tools (NUT) is a suite that supports monitoring and controlling UPS hardware across networks, enabling automation and logging during power events.",
    "emoji": "🧰🔋📉",
    "categories": ["Infrastructure","Monitoring"],
    "related": ["apc ups", "battery backup", "shutdown"],
    "aliases": ["network ups tools"],
    "use_case": "Installing NUT to trigger safe shutdowns on your Proxmox host when the UPS battery runs low.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "battery backup": {
    "eli5": "A battery that jumps in when the lights go out so your stuff doesn’t crash.",
    "boss": "Battery backups keep devices running during short power outages and prevent data loss from sudden shutdowns.",
    "sysadmin": "Battery backups (UPS) provide short-term AC power and surge protection to devices, enabling graceful shutdown and protection during blackouts or voltage drops.",
    "emoji": "🔌🔋⏳",
    "categories": ["Infrastructure","Hardware"],
    "related": ["apc ups", "nut", "power distribution unit"],
    "aliases": [],
    "use_case": "Installing a battery backup to prevent NAS corruption during brownouts and enable scheduled shutdowns.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "power distribution unit": {
    "eli5": "It’s like a fancy power strip that helps organize and control electricity for your servers.",
    "boss": "A PDU is a device that distributes power to multiple components in a server rack.",
    "sysadmin": "Power Distribution Units (PDUs) deliver AC power to rack-mounted equipment, often with monitoring, metering, and remote reboot capabilities via IP.",
    "emoji": "🔌🖧📊",
    "categories": ["Infrastructure","Hardware"],
    "related": ["battery backup", "smart pdu", "rackmount server"],
    "aliases": ["pdu"],
    "use_case": "Using a managed PDU to monitor power usage and remotely reboot a frozen rack server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "flame": {
    "eli5": "A cool homepage that shows buttons to all your apps in one place.",
    "boss": "Flame is a customizable start page or dashboard that links to your self-hosted services with icons and metadata.",
    "sysadmin": "Flame is a self-hosted dashboard written in Node.js, allowing custom icons, bookmarks, and service monitoring for home lab and containerized services.",
    "emoji": "🔥🖥️🏠",
    "categories": ["Self-hosting","Productivity"],
    "related": ["homepage", "dashy", "n8n"],
    "aliases": [],
    "use_case": "Using Flame as your browser start page to access all your self-hosted apps from one screen.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "rss": {
    "eli5": "A feed that delivers new blog posts or podcast episodes to you automatically.",
    "boss": "RSS lets apps fetch updates from websites so you can follow news, blogs, or podcasts in one place.",
    "sysadmin": "RSS (Really Simple Syndication) is an XML-based feed format that allows users and applications to receive updates from websites, including blog posts, torrents, or automation triggers.",
    "emoji": "📡📰🔁",
    "categories": ["Productivity","Web"],
    "related": ["webhooks", "gotify", "n8n"],
    "aliases": ["really simple syndication"],
    "use_case": "Using RSS to monitor a blog and trigger a Telegram alert using n8n when a new post goes live.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "webhooks": {
    "eli5": "It’s like your app tapping another on the shoulder to say 'Hey, something just happened!'",
    "boss": "Webhooks send real-time updates from one service to another based on triggers or events.",
    "sysadmin": "Webhooks are user-defined HTTP callbacks triggered by events, allowing applications to send real-time data to external endpoints for automation or integration.",
    "emoji": "📢🔗📬",
    "categories": ["APIs","Automation"],
    "related": ["webhook relay", "n8n", "discord webhook"],
    "aliases": [],
    "use_case": "Using a webhook to notify Discord when a new issue is opened on a Git repo.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "webhook relay": {
    "eli5": "It’s the mailman that forwards secret notes from outside the house to apps inside.",
    "boss": "Webhook Relay receives external webhooks and securely forwards them to services running on your internal network.",
    "sysadmin": "Webhook Relay is a tunneling and relay service that accepts external webhooks (e.g., GitHub, Stripe) and forwards them to non-public or local services behind NAT/firewalls.",
    "emoji": "📮🛰️🛜",
    "categories": ["APIs","Automation"],
    "related": ["webhooks", "n8n", "reverse proxy"],
    "aliases": [],
    "use_case": "Using Webhook Relay to forward webhook alerts from GitHub to your local n8n instance running behind a firewall.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "n8n": {
    "eli5": "A tool that lets you link apps together like Lego blocks to automate tasks.",
    "boss": "n8n is a self-hosted automation tool that connects different services to create custom workflows without coding.",
    "sysadmin": "n8n (pronounced 'n-eight-n') is a Node.js-based workflow automation tool with a visual editor that supports 350+ integrations, webhook triggers, and conditional logic.",
    "emoji": "🔗⚙️📈",
    "categories": ["Automation","Self-hosting","APIs"],
    "related": ["webhooks", "telegram bot", "gotify"],
    "aliases": [],
    "use_case": "Using n8n to trigger a Telegram alert when a webhook from a smart home device detects motion.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "telegram bot": {
    "eli5": "A chatbot inside Telegram that can send messages or do tasks for you.",
    "boss": "Telegram bots are automated accounts that can send alerts or interact with users in Telegram chats.",
    "sysadmin": "Telegram bots are programmable interfaces to Telegram’s messaging platform, allowing push notifications, command handling, and integrations via Telegram Bot API.",
    "emoji": "🤖📲📨",
    "categories": ["Automation","Collaboration"],
    "related": ["n8n", "pushover", "gotify"],
    "aliases": [],
    "use_case": "Using a Telegram bot to send a message when a self-hosted service goes offline.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "matrix server": {
    "eli5": "Your own chat server that can talk to other servers and apps—kind of like hosting your own Slack.",
    "boss": "Matrix is a decentralized messaging protocol, and a Matrix server lets you host your own chat with bridges to other platforms.",
    "sysadmin": "A Matrix server (e.g., Synapse) is a federated, open standard messaging platform supporting end-to-end encryption, room federation, and integrations with other services like Slack and Discord.",
    "emoji": "🧱💬🌐",
    "categories": ["Self-hosting","Collaboration"],
    "related": ["discord webhook", "gotify", "telegram bot"],
    "aliases": [],
    "use_case": "Hosting a Matrix server to manage internal IT support chat and connect with external Slack rooms.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "discord webhook": {
    "eli5": "A special URL that lets apps send messages directly into a Discord channel.",
    "boss": "Discord webhooks allow automated messages to be sent into Discord from other services.",
    "sysadmin": "Discord webhooks use unique URLs to send JSON payloads directly to channels, enabling alerts, logs, or notifications from other apps or services.",
    "emoji": "🧵📣🧑‍💻",
    "categories": ["Collaboration","Automation"],
    "related": ["webhooks", "n8n", "telegram bot"],
    "aliases": [],
    "use_case": "Using a Discord webhook to post alerts from Grafana when CPU usage spikes on a server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "gotify": {
    "eli5": "A personal push notification service you run yourself—like DIY phone alerts.",
    "boss": "Gotify is a self-hosted push notification server for sending alerts from apps or scripts to your phone or browser.",
    "sysadmin": "Gotify is a lightweight, self-hosted server with REST API and mobile app support for sending real-time notifications securely to authorized users.",
    "emoji": "📱📢🏠",
    "categories": ["Self-hosting","Automation"],
    "related": ["pushover", "ntfy", "telegram bot"],
    "aliases": [],
    "use_case": "Using Gotify to receive instant alerts from a shell script that monitors your backup job.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "pushover": {
    "eli5": "An app that lets your other apps whisper in your ear when something important happens.",
    "boss": "Pushover is a service for sending push notifications to your devices from scripts, apps, or services.",
    "sysadmin": "Pushover is a cloud-based notification API that allows secure, real-time message delivery to phones and browsers, commonly used for automation alerts.",
    "emoji": "📲🔔🌐",
    "categories": ["Automation","Monitoring"],
    "related": ["gotify", "ntfy", "telegram bot"],
    "aliases": [],
    "use_case": "Using Pushover to get notified when your UPS battery drops below 30%.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ntfy": {
    "eli5": "A texting system for your scripts that doesn’t need cloud accounts or companies.",
    "boss": "ntfy is a self-hosted notification tool that lets you send messages from scripts to devices via push or polling.",
    "sysadmin": "ntfy is a lightweight push notification service with MQTT-like pub/sub topics, allowing CLI tools and apps to send messages over HTTP, with support for mobile and web clients.",
    "emoji": "🔔📢📱",
    "categories": ["Self-hosting","Automation"],
    "related": ["gotify", "pushover", "n8n"],
    "aliases": ["ntfy.sh"],
    "use_case": "Using ntfy to notify your phone when a cronjob finishes a daily backup script.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "container registry": {
    "eli5": "A digital warehouse that stores containers so you can grab and run them anywhere.",
    "boss": "A container registry stores container images so they can be deployed easily across environments.",
    "sysadmin": "A container registry is a storage system for OCI or Docker images, supporting push/pull via HTTP API, used in CI/CD and deployment workflows.",
    "emoji": "📦📡🏗️",
    "categories": ["Containers","DevOps"],
    "related": ["oci image", "docker", "deployment"],
    "aliases": [],
    "use_case": "Using a private container registry to store internal app images built by GitHub Actions.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "oci image": {
    "eli5": "A standardized container package that works the same everywhere—like a shipping container.",
    "boss": "An OCI image is a container format that ensures compatibility and portability across platforms and tools.",
    "sysadmin": "OCI (Open Container Initiative) images follow a standard spec for container layers, configs, and manifests, ensuring interoperability across container runtimes.",
    "emoji": "📦🔐🧱",
    "categories": ["Containers","DevOps"],
    "related": ["container registry", "docker", "deployment"],
    "aliases": ["open container initiative image"],
    "use_case": "Publishing OCI-compliant images to GitHub Container Registry for multi-platform support.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "minikube": {
    "eli5": "A toy-sized version of Kubernetes you can play with on your laptop.",
    "boss": "Minikube is a tool that runs a local Kubernetes cluster for testing and development.",
    "sysadmin": "Minikube provisions a single-node Kubernetes cluster locally using VMs or containers, ideal for development, experimentation, and learning Kubernetes.",
    "emoji": "📦🧪🔧",
    "categories": ["Containers","DevOps","Virtualization"],
    "related": ["namespace", "pod", "deployment"],
    "aliases": [],
    "use_case": "Using Minikube to test Kubernetes manifests before deploying them to production clusters.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "namespace": {
    "eli5": "It’s like putting your apps in labeled folders so they don’t get mixed up.",
    "boss": "In Kubernetes, a namespace helps organize resources and prevent naming conflicts between apps.",
    "sysadmin": "Namespaces in Kubernetes allow logical separation of resources within a cluster, enabling isolation, RBAC, and resource quotas.",
    "emoji": "📁🏷️🔐",
    "categories": ["Containers","DevOps"],
    "related": ["pod", "kubernetes", "minikube"],
    "aliases": [],
    "use_case": "Creating separate namespaces for dev, staging, and prod environments in a Minikube cluster.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "pod": {
    "eli5": "A tiny box that holds one or more containers that always stick together.",
    "boss": "A pod is the smallest deployable unit in Kubernetes that can contain one or more tightly linked containers.",
    "sysadmin": "A Kubernetes pod groups one or more containers with shared network, storage, and configuration, enabling co-scheduled and tightly coupled app components.",
    "emoji": "📦🔗🚀",
    "categories": ["Containers","DevOps"],
    "related": ["namespace", "deployment", "minikube"],
    "aliases": [],
    "use_case": "Deploying a pod that runs both an app and a sidecar logging container in Minikube.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "web app manifest": {
    "eli5": "A little file that helps turn a website into something that feels like an app on your phone.",
    "boss": "A Web App Manifest is a JSON file that lets websites be installed like apps with custom icons and splash screens.",
    "sysadmin": "The Web App Manifest defines a PWA's metadata including name, icons, theme color, and launch behavior, enabling installability and app-like UX on mobile and desktop.",
    "emoji": "📱🌐🗂️",
    "categories": ["Web","Mobile"],
    "related": ["pwa", "manifest.json", "service worker"],
    "aliases": [],
    "use_case": "Adding a Web App Manifest to make your site installable on Android home screens as a PWA.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "restic": {
    "eli5": "A smart backpack for your files that remembers what’s already packed so it doesn’t duplicate.",
    "boss": "Restic is a secure and efficient backup tool that stores encrypted snapshots of your data, great for cloud or local backups.",
    "sysadmin": "Restic is a fast, deduplicating, encrypted, and versioned backup CLI tool written in Go, supporting local and remote backends like SFTP, S3, B2, and more.",
    "emoji": "🎒🔐🗂️",
    "categories": ["Backup","Storage"],
    "related": ["duplicati", "urbackup", "proxmox backup server"],
    "aliases": [],
    "use_case": "Using Restic to back up Docker volumes to an S3 bucket with encryption and versioning.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "duplicati": {
    "eli5": "A tool that zips and encrypts your stuff before sending it to the cloud.",
    "boss": "Duplicati is a backup solution that encrypts and compresses your files before sending them to cloud or remote storage.",
    "sysadmin": "Duplicati is a GUI-based backup tool with support for strong encryption, deduplication, scheduling, and backup to cloud services like OneDrive, S3, and WebDAV.",
    "emoji": "🔐💾☁️",
    "categories": ["Backup","Storage"],
    "related": ["restic", "urbackup", "rclone"],
    "aliases": [],
    "use_case": "Scheduling nightly encrypted backups of personal files from a NAS to Google Drive using Duplicati.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "urbackup": {
    "eli5": "A friendly robot that makes regular copies of your computer’s files just in case something breaks.",
    "boss": "UrBackup is a network-based backup solution that handles both image and file backups for multiple clients.",
    "sysadmin": "UrBackup is a client/server backup system supporting image-based and file-level backups over LAN, with web UI, scheduling, and incremental features.",
    "emoji": "🤖💾📶",
    "categories": ["Backup","Self-hosting"],
    "related": ["duplicati", "restic", "proxmox backup server"],
    "aliases": [],
    "use_case": "Running UrBackup on a home server to back up family laptops automatically over Wi-Fi.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "proxmox backup server": {
    "eli5": "A Proxmox tool that takes photos of your VMs and stores them safely.",
    "boss": "Proxmox Backup Server is a dedicated tool for backing up virtual machines, containers, and data in Proxmox environments.",
    "sysadmin": "Proxmox Backup Server is an enterprise-class backup solution for Proxmox VE, supporting deduplication, compression, encryption, and fast incremental VM and container backups.",
    "emoji": "🖥️📦🛡️",
    "categories": ["Backup","Virtualization"],
    "related": ["urbackup", "restic", "snapshot"],
    "aliases": ["pbs"],
    "use_case": "Setting up Proxmox Backup Server on a separate machine to run scheduled VM backups with deduplication.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "timeshift": {
    "eli5": "A time machine for your Linux computer—go back when things break.",
    "boss": "Timeshift creates system restore points so you can roll back your Linux OS if something goes wrong.",
    "sysadmin": "Timeshift is a snapshot tool for Linux systems that backs up and restores system files and configurations, often using rsync or Btrfs.",
    "emoji": "⏪🐧💽",
    "categories": ["Backup","Operating Systems"],
    "related": ["snapshot", "btrfs", "restic"],
    "aliases": [],
    "use_case": "Using Timeshift on a Linux desktop to create a system snapshot before installing kernel updates.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "duckdns": {
    "eli5": "A free duck-themed service that gives your home a name on the internet—even if your IP changes.",
    "boss": "DuckDNS is a free dynamic DNS service that maps your changing home IP to a fixed hostname.",
    "sysadmin": "DuckDNS provides dynamic DNS updates via API or scripts, allowing devices behind residential ISPs to maintain accessible hostnames despite IP changes.",
    "emoji": "🦆🌐🔁",
    "categories": ["Networking","DNS"],
    "related": ["no-ip", "dynamic dns", "namecheap dns"],
    "aliases": [],
    "use_case": "Using DuckDNS to access your self-hosted dashboard remotely even when your IP changes.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "no-ip": {
    "eli5": "It gives your home a name on the web, even if your internet address keeps changing.",
    "boss": "No-IP is a dynamic DNS provider that keeps your domain updated with your changing IP address.",
    "sysadmin": "No-IP offers DDNS services that map domain names to dynamic IPs, with clients to update DNS records automatically on IP changes.",
    "emoji": "🆔🔄🌍",
    "categories": ["Networking","DNS"],
    "related": ["duckdns", "dynamic dns", "route53"],
    "aliases": ["noip"],
    "use_case": "Using No-IP with your router to keep a domain updated for remote access to a self-hosted media server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "namecheap dns": {
    "eli5": "It’s the place where you tell the internet how to find your Namecheap-bought domain.",
    "boss": "Namecheap DNS lets you manage records like A, CNAME, and MX for domains registered with Namecheap.",
    "sysadmin": "Namecheap DNS is a domain management service for configuring A/AAAA, CNAME, TXT, and other DNS records, including dynamic DNS support.",
    "emoji": "🏷️📡🛠️",
    "categories": ["DNS","Networking"],
    "related": ["duckdns", "route53", "dynamic dns"],
    "aliases": [],
    "use_case": "Setting a Namecheap DNS A record to point your domain to a self-hosted web app's public IP.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "route53": {
    "eli5": "Amazon’s phonebook for the internet—it helps people find your stuff online.",
    "boss": "Route 53 is AWS’s scalable DNS service that helps direct traffic to websites or services.",
    "sysadmin": "Amazon Route 53 is a cloud-based DNS and domain management service supporting routing policies, health checks, alias records, and domain registration.",
    "emoji": "🛣️🌍📘",
    "categories": ["DNS","Cloud"],
    "related": ["namecheap dns", "duckdns", "he.net"],
    "aliases": ["amazon route 53"],
    "use_case": "Using Route 53 to manage DNS and failover for multiple app instances hosted on AWS.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "he.net": {
    "eli5": "A techy place where you can manage domains and tunnels, often used by pros.",
    "boss": "HE.net (Hurricane Electric) is a popular DNS provider and tunnel broker used by network professionals.",
    "sysadmin": "Hurricane Electric (HE.net) offers DNS hosting with dynamic DNS support, IPv6 tunnel brokering, and authoritative name server configuration tools.",
    "emoji": "🌪️🔧🧠",
    "categories": ["DNS","Networking"],
    "related": ["route53", "duckdns", "ipv6"],
    "aliases": ["hurricane electric"],
    "use_case": "Using HE.net to host DNS for a domain and create an IPv6 tunnel for a lab environment.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  ".env file": {
    "eli5": "A secret recipe card your app reads to know where stuff is and what to use.",
    "boss": ".env files store configuration like passwords and API keys outside the codebase.",
    "sysadmin": "A `.env` file is a plain text config file used to define environment variables for apps, typically loaded with dotenv libraries for local development or deployment.",
    "emoji": "📄🔑🌍",
    "categories": ["Configuration Management","DevOps"],
    "related": ["dotenv", "config file", ".env.template"],
    "aliases": ["env file"],
    "use_case": "Storing your database password and API key in a .env file to keep sensitive info out of your code.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "dotenv": {
    "eli5": "A helper tool that reads your secret list and gives it to your app.",
    "boss": "Dotenv is a tool that loads environment variables from a .env file into your app at runtime.",
    "sysadmin": "Dotenv is a library used in Node.js, Python, and other environments to parse `.env` files and inject variables into `process.env` at runtime.",
    "emoji": "🧾⚙️📥",
    "categories": ["DevOps","Configuration Management"],
    "related": [".env file", "config file", "environment variable"],
    "aliases": [],
    "use_case": "Using dotenv in a Node.js app to load secrets and configs from a `.env` file securely.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "config file": {
    "eli5": "A settings sheet that tells your app how to behave.",
    "boss": "Config files define how software runs, including ports, paths, and credentials.",
    "sysadmin": "Config files store key-value settings or structured parameters (YAML, JSON, INI, etc.) used to control application behavior and environment setup.",
    "emoji": "📝⚙️🗂️",
    "categories": ["Configuration Management"],
    "related": [".env file", "dotenv", ".env.template"],
    "aliases": [],
    "use_case": "Modifying a YAML config file to change the logging level of a Docker containerized app.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  ".env.template": {
    "eli5": "A blank version of your app’s settings sheet, so others know what info to fill in.",
    "boss": ".env.template is a shared example of environment variables so others can configure the app correctly.",
    "sysadmin": ".env.template files contain placeholder keys for required environment variables, helping teams clone and configure apps with consistent settings.",
    "emoji": "📋🔧📄",
    "categories": ["Configuration Management"],
    "related": [".env file", "dotenv", "config file"],
    "aliases": ["env template"],
    "use_case": "Including a `.env.template` file in a GitHub repo to show contributors which keys the app needs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "s.m.a.r.t.": {
    "eli5": "It’s like a built-in health report for your hard drive that tells you when trouble’s coming.",
    "boss": "S.M.A.R.T. is a system that tracks drive health to predict failures.",
    "sysadmin": "Self-Monitoring, Analysis, and Reporting Technology (S.M.A.R.T.) is built into hard drives and SSDs to log stats like reallocated sectors, power-on hours, and temperature for failure prediction.",
    "emoji": "💽📊⚠️",
    "categories": ["Monitoring","Hardware"],
    "related": ["drive health", "disk temp", "smart monitoring"],
    "aliases": ["smart"],
    "use_case": "Using S.M.A.R.T. tools to check if a hard drive is developing bad sectors before it fails.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "smart monitoring": {
    "eli5": "A regular checkup for your drive to make sure it’s still healthy.",
    "boss": "SMART monitoring tools track hard drive health to prevent data loss.",
    "sysadmin": "SMART monitoring tools (like `smartctl` or TrueNAS alerts) poll disk statistics and raise alerts based on thresholds for predictive maintenance.",
    "emoji": "🩺💽📈",
    "categories": ["Monitoring","Hardware"],
    "related": ["s.m.a.r.t.", "drive health", "disk temp"],
    "aliases": [],
    "use_case": "Enabling SMART monitoring in TrueNAS to get notified when a drive starts reporting errors.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "drive health": {
    "eli5": "How happy and safe your hard drive feels right now.",
    "boss": "Drive health shows the status of your hard disk or SSD—warning signs mean it’s time to back up.",
    "sysadmin": "Drive health reflects aggregate SMART stats like reallocated sectors, error rates, and temperature, helping admins detect early warning signs of failure.",
    "emoji": "💿❤️‍🩹📊",
    "categories": ["Monitoring","Hardware"],
    "related": ["smart monitoring", "disk temp", "s.m.a.r.t."],
    "aliases": [],
    "use_case": "Checking drive health on a NAS to decide whether a noisy drive needs replacing.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "disk temp": {
    "eli5": "It’s how warm your hard drive feels—and too hot is bad news.",
    "boss": "Disk temperature is monitored to ensure your drives don’t overheat and fail prematurely.",
    "sysadmin": "Disk temperature is a SMART metric and physical sensor reading used in NAS and servers to maintain cooling thresholds for drive longevity.",
    "emoji": "🌡️💽🔥",
    "categories": ["Monitoring","Hardware"],
    "related": ["drive health", "s.m.a.r.t.", "smart monitoring"],
    "aliases": ["drive temperature"],
    "use_case": "Monitoring disk temp in TrueNAS to trigger fan speed adjustments for cooling.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "disk utilization": {
    "eli5": "It shows how busy your hard drive is—kind of like checking how hard it’s working.",
    "boss": "Disk utilization measures how much work your drive is doing over time.",
    "sysadmin": "Disk utilization tracks read/write activity and throughput, helping identify I/O bottlenecks or saturation during backups or workloads.",
    "emoji": "📊💽📈",
    "categories": ["Monitoring"],
    "related": ["i/o wait", "cpu load", "smart monitoring"],
    "aliases": [],
    "use_case": "Using Grafana to visualize disk utilization spikes during nightly backup jobs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "i/o wait": {
    "eli5": "It’s the time your computer spends waiting for the hard drive to catch up.",
    "boss": "I/O wait shows how much your system slows down while waiting for disk activity to finish.",
    "sysadmin": "I/O wait is a CPU state indicating the percentage of time the processor is idle, waiting on disk or I/O subsystems to complete operations.",
    "emoji": "⏳💽🖥️",
    "categories": ["Monitoring"],
    "related": ["disk utilization", "cpu load", "swap usage"],
    "aliases": [],
    "use_case": "Monitoring I/O wait to diagnose slowdowns in a VM caused by overloaded disk I/O.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cpu load": {
    "eli5": "It’s how busy your computer’s brain is with work.",
    "boss": "CPU load shows how many tasks are running and waiting on the processor—higher means more stress.",
    "sysadmin": "CPU load is the average number of processes either running or waiting to run on the CPU over a set time (1m/5m/15m), used to assess system performance and bottlenecks.",
    "emoji": "🧠📈🔁",
    "categories": ["Monitoring"],
    "related": ["i/o wait", "disk utilization", "swap usage"],
    "aliases": [],
    "use_case": "Tracking CPU load in Netdata to catch high usage before containers slow down.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "swap usage": {
    "eli5": "When your computer runs out of RAM, it uses a slower backup space called swap.",
    "boss": "Swap usage shows how much data is being temporarily stored on disk because RAM is full.",
    "sysadmin": "Swap usage measures how much virtual memory (on disk) is in use due to exhausted physical RAM, potentially causing performance degradation.",
    "emoji": "💾🧠🔄",
    "categories": ["Monitoring"],
    "related": ["cpu load", "i/o wait", "memory usage"],
    "aliases": [],
    "use_case": "Monitoring swap usage in a containerized server to avoid overcommitting memory and triggering OOM kills.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "authentication proxy": {
    "eli5": "A security guard that checks who you are before letting you into the app.",
    "boss": "An authentication proxy sits in front of apps to verify user identity before allowing access.",
    "sysadmin": "An authentication proxy is a reverse proxy that intercepts HTTP requests and handles identity verification using methods like SSO, OAuth, or LDAP before forwarding them to backend apps.",
    "emoji": "🛂🧑‍💻🔐",
    "categories": ["Security","Identity & Access"],
    "related": ["reverse proxy auth", "oauth proxy", "authelia"],
    "aliases": [],
    "use_case": "Using an authentication proxy to protect internal dashboards with SSO login.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "reverse proxy auth": {
    "eli5": "A middleman that checks your ID before letting you through the gate.",
    "boss": "Reverse proxy authentication verifies users at the proxy level before allowing them to reach the app.",
    "sysadmin": "Reverse proxy authentication is a method where the proxy enforces login or identity checks (e.g., with headers or JWTs) before routing requests to backend services.",
    "emoji": "🚪🔁🧾",
    "categories": ["Security","Web"],
    "related": ["authentication proxy", "oauth proxy", "authelia"],
    "aliases": ["auth proxy"],
    "use_case": "Setting up NGINX with reverse proxy auth to require login before accessing a self-hosted app.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "oauth proxy": {
    "eli5": "A bouncer that checks your ID with Google (or others) before letting you in.",
    "boss": "An OAuth proxy handles login with services like Google or GitHub before granting access to protected apps.",
    "sysadmin": "An OAuth proxy is a middleware service that uses OAuth2 to authenticate users, often with identity providers like Google or GitHub, then injects identity headers for upstream apps.",
    "emoji": "🔐🔗🌐",
    "categories": ["Security","Identity & Access"],
    "related": ["authentication proxy", "reverse proxy auth", "authentik"],
    "aliases": [],
    "use_case": "Using an OAuth proxy to allow access to Grafana only if users sign in with their GitHub account.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "start page": {
    "eli5": "Like a personalized homepage for all your favorite tools and links.",
    "boss": "A start page is a customizable web dashboard where users can organize bookmarks, widgets, and tools.",
    "sysadmin": "Start pages like Homer or Dashy are self-hosted dashboards that provide quick access to apps, containers, and services through YAML-based configuration.",
    "emoji": "🏠🔖📋",
    "categories": ["Self-hosting","Productivity"],
    "related": ["dashy", "homer", "heimdall"],
    "aliases": [],
    "use_case": "Hosting a local start page that links to services like Plex, Portainer, and Home Assistant.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "dashy": {
    "eli5": "A dashboard builder that lets you make your own launchpad for all your stuff.",
    "boss": "Dashy is a customizable dashboard that helps teams and individuals organize and access tools, apps, and services in one place.",
    "sysadmin": "Dashy is a self-hosted YAML-configured dashboard built with Vue, enabling link tiles, icons, status checks, authentication, and dark mode.",
    "emoji": "📋🛠️🌐",
    "categories": ["Self-hosting","Productivity"],
    "related": ["start page", "homer", "heimdall"],
    "aliases": [],
    "use_case": "Deploying Dashy in Docker to monitor and access all services running in a home lab.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "homer": {
    "eli5": "Like a fridge full of magnets and sticky notes, but on your browser.",
    "boss": "Homer is a minimalist self-hosted start page for organizing and accessing apps and links.",
    "sysadmin": "Homer is a static, single-page dashboard that reads a YAML config file to display categorized links, services, icons, and optional health checks.",
    "emoji": "🧲🧾🖥️",
    "categories": ["Self-hosting","Productivity"],
    "related": ["start page", "dashy", "heimdall"],
    "aliases": [],
    "use_case": "Using Homer to create a clean dashboard for managing containers, monitoring, and storage tools.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "heimdall": {
    "eli5": "A button-filled launchpad that makes all your stuff just one click away.",
    "boss": "Heimdall is a home dashboard that makes accessing self-hosted services easy and visually appealing.",
    "sysadmin": "Heimdall is a self-hosted PHP-based app launcher dashboard with optional integrations for app status, icons, and metadata retrieval.",
    "emoji": "🚀🔗🖼️",
    "categories": ["Self-hosting","Productivity"],
    "related": ["start page", "dashy", "homer"],
    "aliases": [],
    "use_case": "Deploying Heimdall on a Raspberry Pi to quickly access your NAS, Plex, and smart home apps.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "fibre channel": {
    "eli5": "A super-fast pipe used in big computer rooms to move data around.",
    "boss": "Fibre Channel is a high-speed network technology used mainly in data centers for connecting servers to storage.",
    "sysadmin": "Fibre Channel is a high-bandwidth, low-latency protocol commonly used in SANs (Storage Area Networks) for block-level data transfer, typically via fiber-optic cables.",
    "emoji": "🚄📡💽",
    "categories": ["Networking","Storage"],
    "related": ["iscsi", "scsi", "s3-compatible storage"],
    "aliases": [],
    "use_case": "Using Fibre Channel in an enterprise SAN to connect ESXi hosts to shared storage arrays.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "scsi": {
    "eli5": "A really old but fast way for computers to talk to drives and scanners.",
    "boss": "SCSI is a long-standing protocol that allows servers and storage devices to communicate efficiently.",
    "sysadmin": "The Small Computer System Interface (SCSI) is a set of standards for connecting and transferring data between computers and peripheral devices, often used in enterprise disks.",
    "emoji": "🔌💿📀",
    "categories": ["Hardware","Storage"],
    "related": ["fibre channel", "iscsi", "virtual machine"],
    "aliases": [],
    "use_case": "Attaching a SCSI virtual disk to a VM in Proxmox for high-performance I/O.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "s3-compatible storage": {
    "eli5": "It’s like a Dropbox box that speaks Amazon’s language—even if it’s not Amazon.",
    "boss": "S3-compatible storage allows tools and apps to store data using the same interface as Amazon S3, even if hosted elsewhere.",
    "sysadmin": "S3-compatible storage refers to object storage systems that support the S3 API, allowing use of tools like rclone, Restic, and MinIO regardless of the provider.",
    "emoji": "📦☁️🔁",
    "categories": ["Cloud","Storage"],
    "related": ["amazon s3", "restic", "backblaze b2"],
    "aliases": [],
    "use_case": "Backing up Docker volumes to a Wasabi bucket using the S3 API via Restic.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "virtual machine": {
    "eli5": "A pretend computer running inside your real computer.",
    "boss": "A virtual machine (VM) is software that emulates a full computer system, allowing you to run multiple OSes on one machine.",
    "sysadmin": "A virtual machine is a software-defined environment that emulates physical hardware, managed by a hypervisor like KVM or VMware to run isolated operating systems.",
    "emoji": "🖥️📦🎛️",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["proxmox", "kvm", "snapshot"],
    "aliases": ["vm"],
    "use_case": "Running a Windows VM on a Linux server to isolate work apps.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "snapshot": {
    "eli5": "It’s like saving a frozen-in-time picture of your system that you can return to later.",
    "boss": "A snapshot is a point-in-time backup of a system or data set that can be restored if something goes wrong.",
    "sysadmin": "A snapshot is a consistent point-in-time image of a volume or VM that can be used for rollback, backup, or cloning, supported by systems like ZFS, LVM, and Proxmox.",
    "emoji": "📸🕒💾",
    "categories": ["Backup","Virtualization"],
    "related": ["zfs", "timeshift", "proxmox backup server"],
    "aliases": [],
    "use_case": "Creating a snapshot before updating a VM in case the update fails.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "live migration": {
    "eli5": "Moving a running computer from one place to another without turning it off.",
    "boss": "Live migration lets you move virtual machines between hosts with zero downtime.",
    "sysadmin": "Live migration is the process of moving a running VM between hypervisors without interruption by syncing memory state and minimizing service disruption.",
    "emoji": "🚚🖥️🔄",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["virtual machine", "proxmox", "kvm"],
    "aliases": [],
    "use_case": "Live migrating a VM from one Proxmox node to another during hardware maintenance.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cold migration": {
    "eli5": "Moving a computer while it’s turned off.",
    "boss": "Cold migration is the process of moving a stopped virtual machine between hosts.",
    "sysadmin": "Cold migration transfers a powered-off VM to another hypervisor or datastore, useful when live migration isn't possible due to hardware or compatibility limits.",
    "emoji": "❄️📦💤",
    "categories": ["Virtualization"],
    "related": ["virtual machine", "snapshot", "live migration"],
    "aliases": [],
    "use_case": "Performing a cold migration to move a VM’s disk to faster storage overnight.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "guest tools": {
    "eli5": "Helpers inside your pretend computer to make it talk better with the host.",
    "boss": "Guest tools improve performance and integration between a virtual machine and its host.",
    "sysadmin": "Guest tools (like QEMU Guest Agent or VMware Tools) enable time syncing, clipboard sharing, shutdown commands, and better performance between VMs and their hypervisors.",
    "emoji": "🔧🖥️🔄",
    "categories": ["Virtualization"],
    "related": ["virtual machine", "proxmox", "kvm"],
    "aliases": [],
    "use_case": "Installing guest tools to enable clean shutdown and IP reporting for VMs in Proxmox.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ballooning": {
    "eli5": "A way for your pretend computer to borrow or return memory based on how busy it is.",
    "boss": "Ballooning dynamically adjusts a virtual machine’s memory usage based on system demand.",
    "sysadmin": "Memory ballooning is a hypervisor technique where a guest VM releases unused memory back to the host or requests more as needed, improving RAM utilization.",
    "emoji": "🎈💾📊",
    "categories": ["Virtualization"],
    "related": ["guest tools", "virtual machine", "kvm"],
    "aliases": [],
    "use_case": "Using ballooning in Proxmox to prevent RAM overcommit from affecting performance.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "container image": {
    "eli5": "A container’s recipe book—it has everything needed to cook up an app.",
    "boss": "A container image is a packaged version of an app with all its code and dependencies, ready to run anywhere.",
    "sysadmin": "A container image is a read-only filesystem bundle that includes binaries, libraries, and metadata required to launch a container, created via tools like Docker or Buildah.",
    "emoji": "📦🐳🧬",
    "categories": ["Containers"],
    "related": ["container", "buildah", "oci image"],
    "aliases": [],
    "use_case": "Using a lightweight Alpine container image to run a minimal Python script.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "buildah": {
    "eli5": "A toolbox that builds container images without needing Docker.",
    "boss": "Buildah is a container image builder that works without a running Docker daemon.",
    "sysadmin": "Buildah is a CLI tool from Red Hat used to build Open Container Initiative (OCI) images from scratch or Dockerfiles, often integrated into CI/CD pipelines.",
    "emoji": "🔧📦📤",
    "categories": ["Containers","DevOps"],
    "related": ["container image", "podman", "oci image"],
    "aliases": [],
    "use_case": "Using Buildah in a CI pipeline to create and push a secure, minimal container image.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "autoscaling": {
    "eli5": "It’s like magic grow or shrink powers for your apps when traffic changes.",
    "boss": "Autoscaling automatically adjusts the number of resources an app uses based on demand.",
    "sysadmin": "Autoscaling enables dynamic scaling of containers, pods, or VMs based on metrics like CPU, memory, or custom thresholds, often controlled by orchestrators like Kubernetes.",
    "emoji": "📈🔄📉",
    "categories": ["Infrastructure","Containers"],
    "related": ["horizontal pod autoscaler", "cluster autoscaler", "kubernetes"],
    "aliases": [],
    "use_case": "Enabling autoscaling in Kubernetes to handle traffic spikes during product launches.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "horizontal pod autoscaler": {
    "eli5": "It adds more little app copies when people start using them a lot.",
    "boss": "HPA automatically creates or removes app pods based on CPU or custom usage.",
    "sysadmin": "Horizontal Pod Autoscaler (HPA) is a Kubernetes controller that adjusts pod counts in a deployment or replica set based on observed metrics like CPU utilization.",
    "emoji": "🧮⚖️📊",
    "categories": ["Containers","Infrastructure"],
    "related": ["autoscaling", "kubernetes", "cluster autoscaler"],
    "aliases": ["hpa"],
    "use_case": "Setting up HPA to spin up more NGINX pods as CPU usage increases during peak hours.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "cluster autoscaler": {
    "eli5": "If your playground gets too crowded, this adds more space automatically.",
    "boss": "Cluster Autoscaler adds or removes computing nodes in your cluster based on resource needs.",
    "sysadmin": "Cluster Autoscaler is a Kubernetes component that automatically scales the number of nodes in a cluster based on unschedulable pods or underutilized resources.",
    "emoji": "📦➕📉",
    "categories": ["Containers","Infrastructure"],
    "related": ["autoscaling", "horizontal pod autoscaler", "kubernetes"],
    "aliases": [],
    "use_case": "Using cluster autoscaler in EKS to spin up new worker nodes during CI builds.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "networking": {
    "eli5": "The wires and invisible waves that help your devices talk to each other.",
    "boss": "Networking is the foundation that connects devices, systems, and services across the internet or local areas.",
    "sysadmin": "Networking covers protocols, interfaces, routing, switching, firewalls, and services that allow devices and applications to communicate reliably and securely.",
    "emoji": "🌐📡🔌",
    "categories": ["Networking"],
    "related": ["subnet", "static route", "split dns"],
    "aliases": [],
    "use_case": "Configuring a home network with VLANs and static routes for different device types.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "subnet": {
    "eli5": "It’s like assigning your neighborhood its own street numbers to stay organized.",
    "boss": "A subnet divides a larger network into smaller, manageable chunks.",
    "sysadmin": "A subnet is a logical segmentation of an IP network, defined by a subnet mask, used to improve routing efficiency and security.",
    "emoji": "📍📊📦",
    "categories": ["Networking"],
    "related": ["cidr", "subnets", "static route"],
    "aliases": [],
    "use_case": "Creating separate subnets for IoT devices and desktops to isolate traffic.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "openshift": {
    "eli5": "A fancy container playground made by Red Hat that adds extra guardrails.",
    "boss": "OpenShift is Red Hat’s enterprise platform for managing containerized applications with added security and tools on top of Kubernetes.",
    "sysadmin": "OpenShift is a Kubernetes distribution by Red Hat that includes a web console, integrated CI/CD, RBAC, monitoring, and S2I builds with enterprise-grade features.",
    "emoji": "🚢🛠️🔒",
    "categories": ["Containers","DevOps"],
    "related": ["kubernetes", "cluster autoscaler", "buildah"],
    "aliases": [],
    "use_case": "Deploying OpenShift to manage microservices with built-in CI pipelines and strict access controls.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "authentik": {
    "eli5": "It’s like your home’s bouncer that only lets in people who show the right badge.",
    "boss": "Authentik is an identity provider that manages secure logins and access to apps using modern protocols like OAuth2 and SAML.",
    "sysadmin": "Authentik is a self-hosted identity provider and access proxy supporting OAuth2, OpenID Connect, SAML, and LDAP, with built-in user directory, SSO, and flow-based policies.",
    "emoji": "🛡️🧑‍💻🔐",
    "categories": ["Security","Identity & Access"],
    "related": ["authelia", "keycloak", "oauth proxy"],
    "aliases": [],
    "use_case": "Deploying Authentik in front of internal dashboards to handle SSO and restrict access by group.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "authelia": {
    "eli5": "A doorman that checks who you are before letting you into your private web apps.",
    "boss": "Authelia is a self-hosted authentication and authorization server that protects internal services with 2FA and SSO.",
    "sysadmin": "Authelia is an authentication and access control server with reverse proxy integration, supporting 2FA, SSO, LDAP, and policy-based rules for securing apps.",
    "emoji": "🔐🚪👥",
    "categories": ["Security","Identity & Access"],
    "related": ["authentik", "oauth proxy", "reverse proxy auth"],
    "aliases": [],
    "use_case": "Using Authelia with NGINX to protect self-hosted apps with 2FA and per-user access control.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "keycloak": {
    "eli5": "It’s like a digital ID office for all your users and apps to share one login.",
    "boss": "Keycloak is an open-source identity and access management platform that provides SSO, login flows, and federation across services.",
    "sysadmin": "Keycloak is a Java-based identity provider supporting OpenID Connect, OAuth2, and SAML, offering user federation, LDAP integration, social login, and admin UI for managing roles and clients.",
    "emoji": "🗝️🧑‍🤝‍🧑🔑",
    "categories": ["Security","Identity & Access"],
    "related": ["authentik", "authelia", "oauth proxy"],
    "aliases": [],
    "use_case": "Using Keycloak to manage logins for internal tools, enforcing group-based access and identity federation with LDAP.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "bookstack": {
    "eli5": "It’s like your own personal Wikipedia you can organize into shelves and books.",
    "boss": "BookStack is a self-hosted wiki platform for creating structured documentation with a simple editor.",
    "sysadmin": "BookStack is a Laravel-based open-source wiki system with a hierarchical structure of Books, Chapters, and Pages, supporting Markdown, WYSIWYG editing, and authentication.",
    "emoji": "📚📝🏠",
    "categories": ["Self-hosting","Productivity"],
    "related": ["wiki.js", "hedgedoc", "runbook"],
    "aliases": [],
    "use_case": "Hosting BookStack in your home lab to document server setups, passwords, and procedures.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "wiki.js": {
    "eli5": "A high-tech notebook you can share online and customize however you want.",
    "boss": "Wiki.js is a modern wiki platform with a sleek interface and support for many content types and integrations.",
    "sysadmin": "Wiki.js is a Node.js-powered wiki system with support for Markdown, Git-backed storage, authentication providers, and visual editing features.",
    "emoji": "🌐📖🛠️",
    "categories": ["Self-hosting","Productivity"],
    "related": ["bookstack", "hedgedoc", "runbook"],
    "aliases": ["wiki js"],
    "use_case": "Using Wiki.js to manage documentation across teams with GitHub sync and SSO.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "hedgedoc": {
    "eli5": "A shared digital notepad where everyone can type and see changes in real-time.",
    "boss": "HedgeDoc is a collaborative Markdown editor ideal for taking notes and drafting documents live.",
    "sysadmin": "HedgeDoc is a self-hosted collaborative Markdown editor with live preview, real-time sync, and support for presentation mode and embedding media.",
    "emoji": "📝🤝💬",
    "categories": ["Self-hosting","Collaboration"],
    "related": ["bookstack", "wiki.js", "joplin server"],
    "aliases": [],
    "use_case": "Hosting HedgeDoc for real-time collaboration during team meetings and documentation sprints.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "joplin server": {
    "eli5": "A safe place to keep all your notes, lists, and ideas—just like your own Evernote.",
    "boss": "Joplin Server lets you sync notes and notebooks between devices using the open-source Joplin app.",
    "sysadmin": "Joplin Server is a self-hosted backend for syncing Joplin notes and attachments across clients, using WebDAV-like APIs and end-to-end encryption support.",
    "emoji": "📓🔒🔁",
    "categories": ["Self-hosting","Productivity"],
    "related": ["hedgedoc", "bookstack", "syncthing"],
    "aliases": [],
    "use_case": "Deploying Joplin Server in Docker to keep encrypted notes synced across devices.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "infrastructure": {
    "eli5": "It’s all the digital and physical stuff that makes computers and the internet work.",
    "boss": "Infrastructure includes the hardware, software, and network systems that support IT operations.",
    "sysadmin": "Infrastructure refers to the foundational physical and virtual resources—servers, networking, storage, power, and cooling—required to run enterprise or cloud services.",
    "emoji": "🏗️💻🌐",
    "categories": ["Infrastructure"],
    "related": ["it infrastructure", "bare metal", "virtualization"],
    "aliases": [],
    "use_case": "Planning the infrastructure for a new office including servers, switches, and racks.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "it infrastructure": {
    "eli5": "The digital skeleton that holds up a company’s tech systems.",
    "boss": "IT infrastructure is everything tech-related that a business needs to operate—servers, networking, storage, and services.",
    "sysadmin": "IT infrastructure encompasses all physical and virtual components—servers, virtualization layers, networking gear, storage, and monitoring—that enable IT services.",
    "emoji": "🏢🖥️🧱",
    "categories": ["Infrastructure"],
    "related": ["infrastructure", "virtualization", "bare metal"],
    "aliases": ["information technology infrastructure"],
    "use_case": "Auditing IT infrastructure to identify outdated servers and optimize costs.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "infrastructure as code": {
    "eli5": "Writing instructions for building computers and networks like you’d write a recipe.",
    "boss": "Infrastructure as Code (IaC) means using code to define and manage IT resources automatically.",
    "sysadmin": "Infrastructure as Code uses declarative or imperative configuration files (e.g., Terraform, Ansible) to provision and manage infrastructure consistently across environments.",
    "emoji": "📜💻🏗️",
    "categories": ["Infrastructure","DevOps"],
    "related": ["terraform", "ansible", "automation"],
    "aliases": ["iac"],
    "use_case": "Using Terraform to provision a cloud database and Kubernetes cluster as code.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "bare metal": {
    "eli5": "It’s like renting the whole house instead of just an apartment.",
    "boss": "Bare metal servers are physical machines that aren’t shared with others—offering full control and performance.",
    "sysadmin": "Bare metal refers to non-virtualized physical servers that host operating systems directly, typically used for high-performance, latency-sensitive, or hardware-specific workloads.",
    "emoji": "🧱🖥️⚙️",
    "categories": ["Infrastructure","Virtualization"],
    "related": ["type 1 hypervisor", "colocation", "rackmount kit"],
    "aliases": [],
    "use_case": "Hosting a Proxmox hypervisor directly on bare metal to maximize VM performance.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "virtualization": {
    "eli5": "Pretending one computer is really many computers.",
    "boss": "Virtualization lets you run multiple operating systems on a single physical machine by creating virtual versions of computers.",
    "sysadmin": "Virtualization abstracts physical hardware to create isolated virtual machines or containers using hypervisors or kernel features like KVM.",
    "emoji": "🖥️📦💡",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["hypervisor", "virtual machine", "type 1 hypervisor"],
    "aliases": [],
    "use_case": "Using virtualization to run Linux and Windows test servers on one physical host.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "hypervisor": {
    "eli5": "A special computer brain that lets one machine pretend to be many.",
    "boss": "A hypervisor allows you to run multiple virtual machines on one physical server by separating hardware from software.",
    "sysadmin": "A hypervisor is virtualization software that creates and manages virtual machines by abstracting hardware. Examples include KVM, ESXi, and Hyper-V.",
    "emoji": "🧠🖥️📦",
    "categories": ["Virtualization"],
    "related": ["type 1 hypervisor", "type 2 hypervisor", "kvm"],
    "aliases": [],
    "use_case": "Using a hypervisor to run isolated VM environments for development, QA, and production on the same server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "type 1 hypervisor": {
    "eli5": "It’s like a landlord who lives in the building—directly managing everything.",
    "boss": "Type 1 hypervisors run directly on hardware and are more efficient for managing VMs in production.",
    "sysadmin": "A Type 1 hypervisor (bare-metal) runs directly on server hardware and hosts guest operating systems without needing a host OS. Examples: VMware ESXi, Xen, Hyper-V.",
    "emoji": "🏢🧠⚙️",
    "categories": ["Virtualization"],
    "related": ["bare metal", "hypervisor", "proxmox ve"],
    "aliases": [],
    "use_case": "Using a Type 1 hypervisor like Proxmox VE to run multiple virtualized servers efficiently on a rackmount host.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "type 2 hypervisor": {
    "eli5": "A pretend computer running inside your existing one, like a toy inside a toy.",
    "boss": "Type 2 hypervisors run on top of an existing OS and are good for testing and development.",
    "sysadmin": "A Type 2 hypervisor runs as a software layer on an existing OS and allows guest VMs. Examples: VirtualBox, VMware Workstation.",
    "emoji": "🎮🖥️🧸",
    "categories": ["Virtualization"],
    "related": ["hypervisor", "virtualbox", "kvm"],
    "aliases": [],
    "use_case": "Running VirtualBox on your laptop as a Type 2 hypervisor to test Linux distros.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "xen": {
    "eli5": "A powerful engine for running pretend computers, used in big cloud services.",
    "boss": "Xen is an open-source hypervisor used to run multiple virtual machines on a physical host.",
    "sysadmin": "Xen is a Type 1 hypervisor that uses paravirtualization or hardware-assisted virtualization, popular in cloud platforms like AWS.",
    "emoji": "🛠️🖥️🧩",
    "categories": ["Virtualization"],
    "related": ["type 1 hypervisor", "kvm", "hypervisor"],
    "aliases": [],
    "use_case": "Using Xen in a research lab to run isolated virtual machines with low overhead.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "proxmox ve": {
    "eli5": "A control panel for running lots of pretend computers on one real machine.",
    "boss": "Proxmox VE is a free virtualization platform that helps manage VMs and containers from a browser.",
    "sysadmin": "Proxmox VE is an open-source virtualization environment with KVM, LXC, ZFS, and web UI for managing virtual machines, backups, HA, and clustering.",
    "emoji": "🖥️📊🧩",
    "categories": ["Virtualization","Infrastructure"],
    "related": ["hypervisor", "kvm", "proxmox backup server"],
    "aliases": ["proxmox virtual environment"],
    "use_case": "Using Proxmox VE to build a small home lab with VMs and LXC containers running on a single server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "rackmount kit": {
    "eli5": "A metal shelf that helps you slide your computers neatly into a cabinet.",
    "boss": "A rackmount kit is a hardware accessory that allows servers or devices to be mounted in a standard 19-inch rack.",
    "sysadmin": "Rackmount kits include rails, brackets, and screws that enable secure installation of rack-compatible devices in data center enclosures.",
    "emoji": "🧰🪛🗄️",
    "categories": ["Hardware","Infrastructure"],
    "related": ["colocation", "data center", "rackmount server"],
    "aliases": [],
    "use_case": "Using a rackmount kit to securely install a firewall appliance in a 4U rack enclosure.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "colocation": {
    "eli5": "It’s like renting space in a tech hotel for your own servers.",
    "boss": "Colocation is hosting your physical servers in a professional data center with power, cooling, and network access.",
    "sysadmin": "Colocation involves placing owned hardware in a third-party data center facility, sharing resources like power, bandwidth, security, and climate control.",
    "emoji": "🏢🔌🌐",
    "categories": ["Infrastructure"],
    "related": ["data center", "bare metal", "rackmount kit"],
    "aliases": [],
    "use_case": "Using colocation to house your server in a Tier III facility for better uptime and redundant power.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "data center": {
    "eli5": "A giant computer warehouse that keeps important servers running 24/7.",
    "boss": "A data center is a secure building that houses computing systems, power, and cooling for businesses and internet services.",
    "sysadmin": "Data centers are specialized facilities designed to host IT infrastructure, offering physical security, climate control, redundant power, networking, and fire suppression systems.",
    "emoji": "🏭💡📶",
    "categories": ["Infrastructure"],
    "related": ["colocation", "uptime tier", "redundant power supply"],
    "aliases": [],
    "use_case": "Moving web hosting servers into a regional data center to improve uptime and security.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "uptime tier": {
    "eli5": "A badge that shows how long a data center can stay online, even during problems.",
    "boss": "Uptime tiers rank data centers by reliability, from Tier I (basic) to Tier IV (high redundancy).",
    "sysadmin": "Uptime Institute defines data center tiers based on redundancy and fault tolerance: Tier I (basic), Tier II (redundant power), Tier III (concurrent maintenance), and Tier IV (fault-tolerant).",
    "emoji": "🔋⏱️🏅",
    "categories": ["Infrastructure"],
    "related": ["data center", "redundant power supply", "cooling unit"],
    "aliases": [],
    "use_case": "Selecting a Tier III data center for colocation to ensure 99.982% uptime and maintenance flexibility.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "redundant power supply": {
    "eli5": "Two plugs instead of one—so your server keeps running if one fails.",
    "boss": "A redundant power supply adds a second PSU to a server so it stays online if one fails.",
    "sysadmin": "Redundant power supplies (dual PSUs) provide continuous power by switching to the backup PSU if the primary fails, commonly used in enterprise servers and switches.",
    "emoji": "🔌⚡🔁",
    "categories": ["Hardware","Infrastructure"],
    "related": ["data center", "uptime tier", "pdu"],
    "aliases": [],
    "use_case": "Installing a redundant PSU in a rackmount NAS to prevent downtime during maintenance or power loss.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cooling unit": {
    "eli5": "A giant air conditioner that keeps the servers from sweating.",
    "boss": "Cooling units control temperature and humidity in data centers to keep equipment running efficiently.",
    "sysadmin": "Data center cooling systems (CRAC, in-row cooling, or liquid cooling) maintain optimal temperature and airflow to prevent overheating of high-density racks.",
    "emoji": "❄️🌬️💻",
    "categories": ["Infrastructure"],
    "related": ["data center", "rackmount kit", "redundant power supply"],
    "aliases": [],
    "use_case": "Monitoring the cooling unit in a server room to maintain a consistent 21°C environment for hardware longevity.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cable management": {
    "eli5": "Keeping your tech spaghetti neatly wrapped and labeled.",
    "boss": "Cable management helps organize wires and connections to improve airflow and prevent confusion.",
    "sysadmin": "Cable management involves using Velcro, trays, labels, and color coding to route and organize network and power cables in racks or server rooms.",
    "emoji": "🪢📏🧰",
    "categories": ["Infrastructure","Networking"],
    "related": ["rackmount kit", "data center", "aggregation switch"],
    "aliases": [],
    "use_case": "Color-coding cables and using Velcro wraps to organize patch panels in a 42U rack.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "network infrastructure": {
    "eli5": "All the wires, boxes, and magic that help your computers talk to each other.",
    "boss": "Network infrastructure includes the routers, switches, and cabling that connect devices in an office, home, or data center.",
    "sysadmin": "Network infrastructure encompasses the physical and logical components—cabling, switches, routers, firewalls, and protocols—used to enable secure communication between devices and services.",
    "emoji": "🌐🔌🏗️",
    "categories": ["Networking","Infrastructure"],
    "related": ["aggregation switch", "console server", "bmc"],
    "aliases": [],
    "use_case": "Upgrading the network infrastructure in a small business to support 10GbE connections and VLAN segmentation.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "aggregation switch": {
    "eli5": "A powerful traffic hub that connects many smaller networks into one big stream.",
    "boss": "An aggregation switch combines traffic from multiple access switches for routing or uplink to the core network.",
    "sysadmin": "Aggregation switches sit between access and core layers, consolidating traffic from edge switches and providing uplinks to routers or backbone networks—often with high-speed 10/40/100GbE ports.",
    "emoji": "🔗📶📡",
    "categories": ["Networking","Infrastructure"],
    "related": ["network infrastructure", "core switch", "layer 3 switch"],
    "aliases": [],
    "use_case": "Using a 10GbE aggregation switch to combine traffic from lab switches into a pfSense router.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "network tap": {
    "eli5": "A tiny spy device that watches all the data flying through a network cable.",
    "boss": "A network tap passively copies network traffic so it can be analyzed without disrupting flow.",
    "sysadmin": "A network tap is a hardware device placed inline between two network devices to mirror traffic to a monitoring tool or IDS without introducing latency or failure risk.",
    "emoji": "🔍📡📥",
    "categories": ["Networking","Monitoring"],
    "related": ["snmp exporter", "packet capture", "network infrastructure"],
    "aliases": [],
    "use_case": "Installing a network tap to feed mirrored traffic into a Suricata IDS for inspection.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "bmc": {
    "eli5": "A tiny helper computer inside your server that lets you control it—even when it's off.",
    "boss": "A BMC is a special chip in servers that allows remote monitoring and control, even if the main system is powered down.",
    "sysadmin": "The Baseboard Management Controller (BMC) is a microcontroller on server motherboards providing out-of-band management using protocols like IPMI or Redfish, enabling remote access, power cycling, and sensor monitoring.",
    "emoji": "🧠🔌🖥️",
    "categories": ["Infrastructure","Hardware"],
    "related": ["ipmi", "idrac", "console server"],
    "aliases": ["baseboard management controller"],
    "use_case": "Using the BMC to remotely reboot a crashed server at a colocation facility.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "console server": {
    "eli5": "A remote keyboard and screen for your servers—even if they crash.",
    "boss": "A console server lets IT teams access and manage servers remotely at a low level—even during reboots or failures.",
    "sysadmin": "A console server provides out-of-band access to serial or KVM console ports on infrastructure, enabling remote management, troubleshooting, and rebooting even when systems are unresponsive.",
    "emoji": "🖥️🔌🛠️",
    "categories": ["Infrastructure","Hardware"],
    "related": ["bmc", "ipmi", "serial console"],
    "aliases": [],
    "use_case": "Using a console server to access the boot screen of a remote router after a failed update.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "nas": {
    "eli5": "A smart hard drive that everyone at home can use to save files.",
    "boss": "NAS stands for Network Attached Storage—a dedicated device for storing and sharing files across a network.",
    "sysadmin": "A NAS is a self-contained storage system connected via Ethernet, offering shared access to files using SMB, NFS, or FTP, often with RAID and user permissions.",
    "emoji": "💾📡🏠",
    "categories": ["Storage","Self-hosting"],
    "related": ["san", "jbod", "truenas core"],
    "aliases": ["network attached storage"],
    "use_case": "Backing up family photos and streaming media from a NAS to smart TVs.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "san": {
    "eli5": "A giant digital closet that gives many servers access to the same storage.",
    "boss": "SAN (Storage Area Network) is a high-speed network that connects servers to storage devices for fast, block-level access.",
    "sysadmin": "A SAN is a specialized network providing block-level access to shared storage resources, using protocols like iSCSI or Fibre Channel for high performance and redundancy.",
    "emoji": "🗃️🔗🚀",
    "categories": ["Storage","Infrastructure"],
    "related": ["nas", "iscsi", "fibre channel"],
    "aliases": ["storage area network"],
    "use_case": "Using a SAN in a data center to provide shared storage to VMware hosts with HA.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "jbod": {
    "eli5": "It’s a pile of drives acting like one big box, but with no safety net.",
    "boss": "JBOD stands for 'Just a Bunch Of Disks'—a simple way to combine drives without redundancy.",
    "sysadmin": "JBOD combines multiple physical disks into a single logical volume without RAID or redundancy—often used for flexible storage where performance or fault tolerance isn't required.",
    "emoji": "📦💽💽",
    "categories": ["Storage"],
    "related": ["nas", "raid", "zfs"],
    "aliases": ["just a bunch of disks"],
    "use_case": "Using JBOD in a backup server to maximize storage space with old hard drives.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ceph": {
    "eli5": "A smart brain that spreads your data across many drives so it stays safe and fast.",
    "boss": "Ceph is a distributed storage platform that balances data across nodes and offers fault tolerance.",
    "sysadmin": "Ceph is a scalable, open-source distributed storage system offering object, block, and file storage with replication and self-healing features.",
    "emoji": "🧠🧩💾",
    "categories": ["Storage","Infrastructure"],
    "related": ["glusterfs", "s3-compatible storage", "san"],
    "aliases": [],
    "use_case": "Using Ceph in a Proxmox cluster for redundant, self-healing storage across nodes.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "glusterfs": {
    "eli5": "A digital jigsaw puzzle that pieces together drives from different servers into one big folder.",
    "boss": "GlusterFS is a scalable storage system that combines multiple disks into a distributed file system.",
    "sysadmin": "GlusterFS is a user-space distributed filesystem that aggregates storage from multiple servers into a single mount point with replication, sharding, and failover.",
    "emoji": "🧱🗃️🔗",
    "categories": ["Storage","Infrastructure"],
    "related": ["ceph", "nas", "san"],
    "aliases": [],
    "use_case": "Using GlusterFS to replicate files across three Raspberry Pis for a fault-tolerant backup system.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "fluent bit": {
    "eli5": "A log delivery truck that collects messages and takes them where they need to go.",
    "boss": "Fluent Bit is a lightweight tool for collecting and shipping logs from apps and servers to storage or analytics tools.",
    "sysadmin": "Fluent Bit is an open-source log processor and forwarder optimized for resource-constrained environments, supporting input parsing, filtering, and output routing to Elasticsearch, Loki, and others.",
    "emoji": "📦🚚📜",
    "categories": ["Monitoring","Analytics"],
    "related": ["filebeat", "logstash", "opentelemetry"],
    "aliases": [],
    "use_case": "Using Fluent Bit on edge devices to send structured logs to Elasticsearch.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "filebeat": {
    "eli5": "A tiny helper that reads log files and sends them to a log collector.",
    "boss": "Filebeat collects log files and sends them to Elasticsearch or Logstash for analysis.",
    "sysadmin": "Filebeat is a lightweight shipper that reads log files and forwards them to Elasticsearch, Logstash, or Kafka, often used as part of the Elastic Stack.",
    "emoji": "🧾📤📊",
    "categories": ["Monitoring","Analytics"],
    "related": ["fluent bit", "logstash", "elasticsearch"],
    "aliases": [],
    "use_case": "Deploying Filebeat to forward app logs from Docker containers to an Elastic Stack dashboard.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "logstash": {
    "eli5": "A smart filter that cleans and sorts your logs before sending them to storage.",
    "boss": "Logstash processes logs from many sources and sends them to Elasticsearch or other systems.",
    "sysadmin": "Logstash is an open-source pipeline that ingests, transforms, and routes logs and metrics from multiple inputs to outputs like Elasticsearch, S3, or Kafka.",
    "emoji": "🧹🗂️📈",
    "categories": ["Analytics","Monitoring"],
    "related": ["filebeat", "elasticsearch", "fluent bit"],
    "aliases": [],
    "use_case": "Using Logstash to enrich logs with geo-IP data before storing them in Elasticsearch.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "elasticsearch": {
    "eli5": "A powerful digital librarian that can search through tons of info really fast.",
    "boss": "Elasticsearch is a search engine and analytics tool that lets you explore large volumes of data efficiently.",
    "sysadmin": "Elasticsearch is a distributed, RESTful search and analytics engine based on Lucene, used for full-text search, log analysis, and real-time dashboards.",
    "emoji": "🔍📊🚀",
    "categories": ["Analytics","Monitoring"],
    "related": ["logstash", "filebeat", "opentelemetry"],
    "aliases": [],
    "use_case": "Using Elasticsearch to index and search logs collected from servers across your environment.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "opentelemetry": {
    "eli5": "A toolkit that watches your app’s health and how fast it runs.",
    "boss": "OpenTelemetry collects metrics, logs, and traces from your apps so you can monitor performance and errors.",
    "sysadmin": "OpenTelemetry is an open-source observability framework for collecting telemetry data (metrics, logs, traces) from applications, services, and infrastructure using standardized APIs and SDKs.",
    "emoji": "📏🔬🧪",
    "categories": ["Monitoring","Analytics"],
    "related": ["elasticsearch", "fluent bit", "prometheus"],
    "aliases": [],
    "use_case": "Instrumenting a Go app with OpenTelemetry to export traces to Grafana Tempo and metrics to Prometheus.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "audit logs": {
    "eli5": "A diary that writes down who did what and when on your system.",
    "boss": "Audit logs are records of system events and user actions used for security and compliance.",
    "sysadmin": "Audit logs capture chronological events like logins, config changes, file access, and admin actions to support incident response, compliance, and debugging.",
    "emoji": "📜🔍📆",
    "categories": ["Monitoring","Security"],
    "related": ["systemd", "logstash", "opentelemetry"],
    "aliases": [],
    "use_case": "Using audit logs to investigate unauthorized login attempts on a self-hosted server.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "systemd": {
    "eli5": "A chore manager for your Linux computer—it starts everything up in the right order.",
    "boss": "Systemd is a core component in many Linux systems that handles startup, services, and logs.",
    "sysadmin": "Systemd is an init system and service manager for Linux that handles boot sequences, service supervision, timers, sockets, and journaling.",
    "emoji": "🛠️🐧⏱️",
    "categories": ["Operating Systems"],
    "related": ["cron", "timer unit", "audit logs"],
    "aliases": [],
    "use_case": "Using systemd to manage and restart your Node.js service automatically after a crash.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cron": {
    "eli5": "A clock that tells your computer when to do stuff automatically.",
    "boss": "Cron is a scheduling tool in Unix systems for running scripts and tasks at set times.",
    "sysadmin": "Cron is a time-based job scheduler in Unix-like systems that reads crontab files to run shell commands periodically.",
    "emoji": "⏰📝🔁",
    "categories": ["Operating Systems","Automation"],
    "related": ["systemd", "timer unit", "cronjob"],
    "aliases": [],
    "use_case": "Using cron to back up your MySQL database every night at 2 AM.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "timer unit": {
    "eli5": "A newer version of cron that works better with Linux’s built-in tools.",
    "boss": "Timer units are part of systemd that allow you to schedule jobs like cron but with more flexibility.",
    "sysadmin": "Systemd timer units trigger service units on a defined schedule or delay, offering logging, accuracy, and dependency benefits over traditional cron.",
    "emoji": "🧭⏱️📆",
    "categories": ["Operating Systems","Automation"],
    "related": ["systemd", "cron", "cronjob"],
    "aliases": [],
    "use_case": "Replacing a cron job with a systemd timer unit to log and manage failed executions.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "runbook": {
    "eli5": "An instruction sheet for fixing or running things when they break.",
    "boss": "A runbook is a documented step-by-step guide for IT teams to handle routine or emergency operations.",
    "sysadmin": "A runbook is an operational guide containing procedures, diagnostics, scripts, and manual recovery steps for systems and services—used in automation and incident response.",
    "emoji": "📓⚙️🆘",
    "categories": ["Productivity","DevOps"],
    "related": ["bookstack", "wiki.js", "cron"],
    "aliases": [],
    "use_case": "Creating a runbook for restoring a crashed VM, with screenshots and commands included.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "schema markup": {
    "eli5": "Extra code that helps Google understand what your webpage is really about.",
    "boss": "Schema markup adds context to your website content for search engines to show rich results.",
    "sysadmin": "Schema markup is structured data in JSON-LD, Microdata, or RDFa formats embedded in web pages to enhance SEO by describing entities, reviews, products, etc.",
    "emoji": "🧩📄🔎",
    "categories": ["Web"],
    "related": ["json-ld", "canonical url", "semantic html"],
    "aliases": [],
    "use_case": "Adding schema markup to blog posts so Google shows star ratings and author info in search results.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "json-ld": {
    "eli5": "A way to add invisible labels to your website so search engines understand what’s there.",
    "boss": "JSON-LD is a format used to insert structured data into websites for better search engine visibility.",
    "sysadmin": "JSON-LD (JavaScript Object Notation for Linked Data) is a structured data format embedded in HTML via `<script>` tags, widely used for schema markup and semantic relationships.",
    "emoji": "🗃️🔗🌐",
    "categories": ["Web"],
    "related": ["schema markup", "semantic html", "canonical url"],
    "aliases": ["json linked data"],
    "use_case": "Using JSON-LD to define an organization’s contact info and logo in a website’s head.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "canonical url": {
    "eli5": "It’s the main version of a webpage, so search engines don’t get confused.",
    "boss": "A canonical URL tells search engines which version of a page is the official one to avoid SEO duplication.",
    "sysadmin": "A canonical URL is specified with the `<link rel='canonical'>` tag to prevent duplicate content issues by identifying the preferred version of a page.",
    "emoji": "🔗🏷️📄",
    "categories": ["Web"],
    "related": ["schema markup", "json-ld", "semantic html"],
    "aliases": [],
    "use_case": "Adding canonical URLs to blog archives to ensure search engines index only the main post.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "alt text": {
    "eli5": "A short label that explains what a picture is—just in case it doesn’t show up.",
    "boss": "Alt text describes images so visually impaired users and search engines can understand them.",
    "sysadmin": "Alt text is HTML image metadata (`alt` attribute) used for accessibility, SEO, and fallback display when images fail to load.",
    "emoji": "🖼️🔤👁️‍🗨️",
    "categories": ["Web","Accessibility"],
    "related": ["semantic html", "h1 tag", "screen reader"],
    "aliases": ["alt attribute"],
    "use_case": "Writing meaningful alt text for product images so screen readers can describe them to users.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "h1 tag": {
    "eli5": "It’s the big headline at the top of your webpage.",
    "boss": "The H1 tag tells search engines and users what your page is mainly about.",
    "sysadmin": "The `<h1>` HTML tag defines the main heading on a webpage, carrying high semantic weight for accessibility and SEO.",
    "emoji": "🔠🏷️📢",
    "categories": ["Web"],
    "related": ["semantic html", "alt text", "schema markup"],
    "aliases": [],
    "use_case": "Making sure each page has a single, descriptive H1 tag to improve search engine ranking.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "semantic html": {
    "eli5": "HTML with meaning—so both humans and robots know what each part of the page is.",
    "boss": "Semantic HTML uses tags that describe content structure, improving SEO and accessibility.",
    "sysadmin": "Semantic HTML uses meaningful tags like `<article>`, `<section>`, `<nav>`, and `<footer>` to define page layout, helping search engines and assistive tech parse content.",
    "emoji": "🔖🧠📐",
    "categories": ["Web"],
    "related": ["alt text", "schema markup", "h1 tag"],
    "aliases": [],
    "use_case": "Refactoring a webpage with semantic HTML to enhance screen reader navigation and SEO.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "app shell": {
    "eli5": "The outer frame of a web app—like a storefront that stays put while the inside changes.",
    "boss": "The app shell is the static part of a PWA that loads instantly and gives users a native app feel.",
    "sysadmin": "App shell architecture separates static UI elements from dynamic content, allowing PWAs to cache and quickly render interface elements even while offline.",
    "emoji": "🏪🧱📲",
    "categories": ["Web","Mobile"],
    "related": ["web app manifest", "pwa", "service worker"],
    "aliases": [],
    "use_case": "Building a PWA with an app shell to make the core UI load instantly even on slow connections.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "sonarr": {
    "eli5": "A robot helper that finds and downloads your favorite TV shows automatically.",
    "boss": "Sonarr is a tool that automates the download, organization, and monitoring of TV series using Usenet or torrents.",
    "sysadmin": "Sonarr is a .NET-based PVR that monitors RSS feeds from indexers, manages TV series, handles failed downloads, and integrates with clients like NZBGet and qBittorrent.",
    "emoji": "📺🤖🔁",
    "categories": ["Self-hosting"],
    "related": ["radarr", "lidarr", "prowlarr"],
    "aliases": [],
    "use_case": "Running Sonarr in Docker to auto-download and rename TV shows with metadata from TheTVDB.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "daemonset": {
    "eli5": "Imagine having a janitor on every floor of a building who does the same job. A DaemonSet makes sure each floor (node) has that janitor (pod) running.",
    "boss": "A DaemonSet in Kubernetes ensures that a specific pod runs on all—or selected—nodes in a cluster. It's great for deploying things like log collectors or monitoring agents.",
    "sysadmin": "DaemonSets are Kubernetes objects that ensure a copy of a pod is running on all (or specified) nodes in the cluster. Commonly used for cluster-wide services like log shipping, monitoring, or networking.",
    "emoji": "🧹📦🔁",
    "categories": ["Containers"],
    "related": ["statefulset", "pod", "kubernetes networkpolicy", "node pool"],
    "aliases": [],
    "use_case": "Deploying a node-level monitoring agent like Prometheus Node Exporter across all nodes in a Kubernetes cluster.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "statefulset": {
    "eli5": "It’s like giving each kid in a classroom their own locker and nametag—so they always get the same seat and spot, no matter what.",
    "boss": "StatefulSets help run applications in Kubernetes that need stable network IDs and persistent storage, such as databases.",
    "sysadmin": "StatefulSets manage the deployment and scaling of stateful applications in Kubernetes. Unlike regular pods, they provide consistent naming, persistent volumes, and ordered deployments.",
    "emoji": "🏷️📁🔒",
    "categories": ["Containers"],
    "related": ["daemonset", "persistent volume", "pod", "kubernetes networkpolicy"],
    "aliases": [],
    "use_case": "Running a Cassandra cluster where each node must maintain its own identity and storage across restarts.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "service": {
    "eli5": "It’s like a front desk that tells people where to find the right room, even if the rooms change.",
    "boss": "In Kubernetes, a Service acts as a stable network endpoint to connect to pods, even when the pod IPs change.",
    "sysadmin": "A Kubernetes Service provides a persistent IP and DNS name to expose a set of pods, supporting internal or external access with load balancing.",
    "emoji": "📞🗂️🔀",
    "categories": ["Containers"],
    "related": ["ingress", "loadbalancer", "pod", "kubernetes networkpolicy"],
    "aliases": [],
    "use_case": "Exposing a backend API to other internal microservices through a ClusterIP service.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "ingress": {
    "eli5": "Think of it like a smart doorman that routes incoming visitors to the right apartment inside a building.",
    "boss": "Ingress in Kubernetes is a way to route external traffic to internal services based on rules like URLs or hostnames.",
    "sysadmin": "Ingress is an API object in Kubernetes that manages external HTTP(S) access to services, with features like path-based routing, TLS termination, and virtual hosting.",
    "emoji": "🚪🌐🧭",
    "categories": ["Containers"],
    "related": ["service", "loadbalancer", "kubernetes networkpolicy", "tls"],
    "aliases": [],
    "use_case": "Using an Ingress controller to expose multiple web apps under different URLs on the same IP address.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "loadbalancer": {
    "eli5": "Like a traffic cop directing cars evenly between open lanes, a load balancer sends visitors to the least busy server.",
    "boss": "A LoadBalancer distributes incoming network traffic across multiple servers to ensure no one gets overloaded and apps stay available.",
    "sysadmin": "In Kubernetes, a LoadBalancer type service provisions an external IP and forwards traffic to backend pods, often integrating with cloud provider load balancers.",
    "emoji": "⚖️🌍🔁",
    "categories": ["Containers", "Networking"],
    "related": ["service", "ingress", "proxy server", "reverse proxy"],
    "aliases": [],
    "use_case": "Exposing a public-facing website using a Kubernetes LoadBalancer service in AWS that auto-assigns an external IP.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "persistent volume": {
    "eli5": "Like a USB drive that remembers your stuff even if you unplug it and plug it into another computer.",
    "boss": "A Persistent Volume (PV) in Kubernetes gives pods durable storage that survives pod restarts or rescheduling.",
    "sysadmin": "Persistent Volumes are cluster-wide storage resources provisioned manually or dynamically, abstracting the underlying storage backend and binding to Persistent Volume Claims.",
    "emoji": "💾📦📁",
    "categories": ["Containers", "Storage"],
    "related": ["statefulset", "volume", "kubernetes networkpolicy", "storage"],
    "aliases": ["pv"],
    "use_case": "Provisioning networked storage for a PostgreSQL pod that needs to retain data even after restarts.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "configmap": {
    "eli5": "Like a shared recipe card that tells everyone in the kitchen how to cook something—without baking it into the dish.",
    "boss": "ConfigMaps let you keep configuration settings separate from code so you can change behavior without rebuilding containers.",
    "sysadmin": "A ConfigMap is a Kubernetes API object used to store non-sensitive configuration data such as environment variables, CLI arguments, or config files, and inject them into pods.",
    "emoji": "🗺️⚙️📄",
    "categories": ["Containers"],
    "related": ["secret", "helm", "kustomize", "deployment"],
    "aliases": [],
    "use_case": "Mounting a custom Nginx config file into a pod using a ConfigMap.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "secret": {
    "eli5": "Like a locked box that holds passwords or keys, only certain people are allowed to open it.",
    "boss": "A Secret in Kubernetes safely stores sensitive data like API keys, passwords, and certificates, separate from the app code.",
    "sysadmin": "Kubernetes Secrets are base64-encoded key-value pairs designed for securely injecting confidential data into pods via environment variables or mounted files.",
    "emoji": "🔐📦🔑",
    "categories": ["Containers", "Security"],
    "related": ["configmap", "helm", "kubernetes networkpolicy", "identity provider"],
    "aliases": [],
    "use_case": "Injecting a TLS certificate into a web server pod using a Kubernetes Secret.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "helm": {
    "eli5": "Like an app store for Kubernetes, Helm helps you install and manage apps with a few commands.",
    "boss": "Helm simplifies deploying Kubernetes applications by bundling them into reusable charts and handling configuration with templates.",
    "sysadmin": "Helm is a Kubernetes package manager that uses 'charts' to define, install, and upgrade applications. It supports templating and versioning for repeatable deployments.",
    "emoji": "⛵📦🛠️",
    "categories": ["Containers", "Configuration Management"],
    "related": ["kustomize", "configmap", "secret", "deployment"],
    "aliases": [],
    "use_case": "Installing Prometheus and Grafana using the Bitnami Helm charts for quick deployment and configuration.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "kustomize": {
    "eli5": "It’s like using stickers to customize a toy—Kustomize lets you tweak Kubernetes setups without changing the original files.",
    "boss": "Kustomize enables you to manage Kubernetes manifests without copying files. It lets you layer and customize deployments cleanly.",
    "sysadmin": "Kustomize is a Kubernetes-native configuration tool that allows you to patch, override, and compose YAML resources declaratively without using templates.",
    "emoji": "🎨🧩📄",
    "categories": ["Containers", "Configuration Management"],
    "related": ["helm", "configmap", "secret", "deployment"],
    "aliases": [],
    "use_case": "Creating environment-specific Kubernetes deployments (dev, staging, prod) using a common base with Kustomize overlays.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "node pool": {
    "eli5": "Imagine splitting a classroom into different groups, each with different tools—node pools let you group servers in a similar way.",
    "boss": "A node pool is a set of nodes within a Kubernetes cluster that share the same configuration, such as size, OS, or labels.",
    "sysadmin": "In Kubernetes, a node pool is a subset of nodes managed together, typically with common roles or resource types. It allows for tailored scaling and OS-level configuration per group.",
    "emoji": "🧑‍🔧📦🏗️",
    "categories": ["Containers"],
    "related": ["daemonset", "statefulset", "kubernetes networkpolicy", "pod"],
    "aliases": [],
    "use_case": "Using GPU-enabled node pools for AI workloads while keeping regular web services in general-purpose node pools.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "provisioning": {
    "eli5": "It’s like setting up a new phone with all your favorite apps and settings before using it.",
    "boss": "Provisioning prepares IT resources—like servers or containers—for use, including installing software and setting configurations.",
    "sysadmin": "Provisioning refers to the automated setup of infrastructure components, such as virtual machines, containers, or user accounts, with required software and configurations.",
    "emoji": "🔧📦🚀",
    "categories": ["Infrastructure", "DevOps"],
    "related": ["cloud-init", "kickstart", "terraform apply", "pxe boot"],
    "aliases": [],
    "use_case": "Automatically provisioning a VM with the latest Ubuntu image, Docker, and a preloaded web app.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "pxe boot": {
    "eli5": "Like turning on a new computer and it asks the network what it should become.",
    "boss": "PXE Boot allows a computer to boot up over a network without needing a local drive, often used in automated deployments.",
    "sysadmin": "Preboot Execution Environment (PXE) enables devices to retrieve and boot operating system images over the network, commonly used in OS deployment pipelines.",
    "emoji": "📡💻🔄",
    "categories": ["Infrastructure"],
    "related": ["kickstart", "cloud-init", "preseed", "provisioning"],
    "aliases": ["preboot execution environment"],
    "use_case": "Booting diskless workstations in a computer lab using PXE to load Linux images from a deployment server.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "kickstart": {
    "eli5": "Like using a pre-filled form to set up a bunch of computers the same way.",
    "boss": "Kickstart automates Red Hat-based Linux installs by using pre-written configuration files to speed up deployments.",
    "sysadmin": "Kickstart is an automated installation method for Red Hat and CentOS, using a script file to define partitions, packages, and post-install commands.",
    "emoji": "🚀📄🐧",
    "categories": ["Infrastructure"],
    "related": ["pxe boot", "cloud-init", "preseed", "provisioning"],
    "aliases": [],
    "use_case": "Using Kickstart files to deploy hundreds of CentOS servers with consistent settings in a data center.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "preseed": {
    "eli5": "Like giving instructions ahead of time so your friend can build a LEGO set without asking questions.",
    "boss": "Preseed lets you automate Ubuntu and Debian installs by feeding in answers to all the usual setup prompts.",
    "sysadmin": "Preseed is a Debian-based method for automating OS installations via a config file that pre-answers the installer's questions.",
    "emoji": "🤖📄🐧",
    "categories": ["Infrastructure"],
    "related": ["pxe boot", "kickstart", "cloud-init", "provisioning"],
    "aliases": [],
    "use_case": "Using Preseed to automate Ubuntu server installation for virtual machines in a home lab.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "cloud-init": {
    "eli5": "Like handing a welcome packet to a new employee that tells them exactly how to set up their desk.",
    "boss": "Cloud-init configures cloud instances at launch—setting hostnames, SSH keys, and more—based on predefined scripts.",
    "sysadmin": "Cloud-init is a widely used tool for customizing Linux cloud instances during boot with tasks like user creation, software install, and networking setup.",
    "emoji": "☁️🐧📦",
    "categories": ["Cloud", "Infrastructure"],
    "related": ["kickstart", "preseed", "provisioning", "ignition config"],
    "aliases": [],
    "use_case": "Spinning up an EC2 instance that automatically installs NGINX and applies security patches using cloud-init.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ignition config": {
    "eli5": "Like giving a builder a detailed blueprint before they start assembling furniture.",
    "boss": "Ignition is a config system used during Fedora CoreOS and Flatcar OS boot to set up disks, users, and networking.",
    "sysadmin": "Ignition configures machines in early boot by writing filesystems, creating users, and setting systemd units—mainly for Fedora CoreOS and compatible OSes.",
    "emoji": "🧨📁🖥️",
    "categories": ["Infrastructure"],
    "related": ["cloud-init", "provisioning", "fedora", "flatcar"],
    "aliases": ["ignition"],
    "use_case": "Provisioning a Fedora CoreOS node in a Kubernetes cluster using Ignition to set up systemd units and user accounts.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "drift detection": {
    "eli5": "Like checking if your LEGO tower still looks like the instructions say it should.",
    "boss": "Drift detection checks if your infrastructure still matches the original configuration or if someone made changes manually.",
    "sysadmin": "Infrastructure drift detection monitors config management or IaC systems like Terraform to identify divergence between actual and declared system state.",
    "emoji": "🧭🔍⚠️",
    "categories": ["Infrastructure", "Configuration Management"],
    "related": ["terraform plan", "terraform apply", "state file", "declarative infrastructure"],
    "aliases": [],
    "use_case": "Using drift detection in Terraform Cloud to alert when someone manually modifies a VM outside of code.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "declarative infrastructure": {
    "eli5": "It's like writing a grocery list and having a robot automatically go shop for you—no instructions needed.",
    "boss": "Declarative infrastructure describes what your systems should look like, and the tools figure out how to get there.",
    "sysadmin": "This is an IaC pattern where infrastructure is defined via desired state files (e.g., Terraform, Kubernetes manifests), allowing automation tools to reconcile real vs expected configuration.",
    "emoji": "📜🤖🏗️",
    "categories": ["Infrastructure", "DevOps"],
    "related": ["idempotency", "terraform apply", "drift detection", "state file"],
    "aliases": [],
    "use_case": "Defining all infrastructure in Terraform so engineers never have to touch the cloud console manually.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "idempotency": {
    "eli5": "Like pressing a light switch twice—it won’t double-turn the lights on, it just keeps the state correct.",
    "boss": "Idempotency ensures that running the same operation multiple times has the same effect, which is critical in automation.",
    "sysadmin": "In IaC and APIs, idempotency means repeating an action yields the same system state—it's crucial for reliable, repeatable operations like provisioning or updates.",
    "emoji": "🔁🧘‍♂️📏",
    "categories": ["Infrastructure", "Automation"],
    "related": ["declarative infrastructure", "terraform apply", "state file", "drift detection"],
    "aliases": [],
    "use_case": "Using Ansible playbooks that can run repeatedly without causing unintended changes thanks to idempotency.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "state file": {
    "eli5": "Like a diary that tracks everything you’ve done, so you don’t repeat or mess up the same task twice.",
    "boss": "State files record what infrastructure has been deployed, so tools like Terraform know what exists and what needs changing.",
    "sysadmin": "Terraform’s state file tracks deployed resources and metadata, enabling plan and apply operations to compare actual infrastructure to the desired state.",
    "emoji": "📓💾📊",
    "categories": ["Infrastructure", "DevOps"],
    "related": ["terraform plan", "terraform apply", "drift detection", "declarative infrastructure"],
    "aliases": [],
    "use_case": "Storing Terraform's state file remotely in an S3 bucket for team collaboration and consistent deployments.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "terraform plan": {
    "eli5": "It’s like a dry run before rearranging your furniture—you see what will change before actually doing anything.",
    "boss": "Terraform Plan previews what will be added, changed, or destroyed before applying infrastructure changes.",
    "sysadmin": "Running `terraform plan` shows a proposed execution plan by comparing the current state file with configuration code, without making actual changes.",
    "emoji": "📐👀📋",
    "categories": ["Infrastructure", "DevOps"],
    "related": ["terraform apply", "state file", "drift detection", "idempotency"],
    "aliases": [],
    "use_case": "Running `terraform plan` in CI to verify infrastructure changes before approving a pull request.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "terraform apply": {
    "eli5": "Like saying 'make it so' after reviewing your blueprint for building a treehouse.",
    "boss": "Terraform Apply executes the infrastructure changes you've approved and defined in code.",
    "sysadmin": "`terraform apply` deploys resources as specified in configuration files by updating or creating infrastructure to match the declared state.",
    "emoji": "🚀🔧📦",
    "categories": ["Infrastructure", "DevOps"],
    "related": ["terraform plan", "state file", "idempotency", "declarative infrastructure"],
    "aliases": [],
    "use_case": "Running `terraform apply` to spin up a new set of EC2 instances after validating the plan output.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "inventory file": {
    "eli5": "Like a contact list that tells your helper robot which devices to talk to and where to find them.",
    "boss": "An inventory file lists systems and their variables for automation tools like Ansible to manage infrastructure.",
    "sysadmin": "In Ansible, the inventory file defines managed hosts, groups, and host-specific variables used during playbook execution.",
    "emoji": "📇📋🖧",
    "categories": ["Automation", "Configuration Management"],
    "related": ["ansible", "role", "playbook", "module"],
    "aliases": [],
    "use_case": "Creating a dynamic inventory file to manage AWS EC2 hosts with Ansible.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "role": {
    "eli5": "It's like assigning chores in a house—one person does dishes, another takes out trash. A role gives specific tasks.",
    "boss": "In infrastructure and automation, a role defines a reusable set of tasks or permissions for systems or users.",
    "sysadmin": "In Ansible, a role is a modular structure that bundles tasks, variables, files, and templates for reusable automation. In IAM, a role defines permissions for users or systems.",
    "emoji": "🎭🧰🗂️",
    "categories": ["Automation", "Configuration Management"],
    "related": ["inventory file", "module", "playbook", "ansible"],
    "aliases": [],
    "use_case": "Creating an Ansible role that installs and configures NGINX across all web servers.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "module": {
    "eli5": "Think of a LEGO set—each box builds a part of something bigger. A module is that self-contained piece.",
    "boss": "A module is a reusable package of code or configuration used in infrastructure, automation, or programming to simplify complex systems.",
    "sysadmin": "In Terraform or Ansible, a module is a collection of files and resources that can be reused to manage infrastructure or configurations across environments.",
    "emoji": "📦🔁🧱",
    "categories": ["Automation", "Infrastructure"],
    "related": ["role", "inventory file", "terraform apply", "ansible"],
    "aliases": [],
    "use_case": "Using a Terraform module to consistently deploy S3 buckets with versioning and tags across projects.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "loki": {
    "eli5": "Like a notebook that only writes down what you say, not the entire conversation—Loki just stores log lines, not full metrics.",
    "boss": "Loki is a log aggregation tool built by Grafana Labs that organizes logs by labels and integrates seamlessly with Grafana dashboards.",
    "sysadmin": "Loki is a horizontally scalable log aggregation system that indexes metadata (labels) rather than log content, optimizing storage and performance for observability stacks.",
    "emoji": "📜🔍📈",
    "categories": ["Monitoring", "Logging"],
    "related": ["prometheus", "grafana", "alertmanager", "blackbox exporter"],
    "aliases": [],
    "use_case": "Using Loki to collect and visualize container logs within a Grafana dashboard for troubleshooting.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "alertmanager": {
    "eli5": "Like a digital smoke alarm that knows who to call when something’s wrong.",
    "boss": "Alertmanager handles alerts from Prometheus and routes them via email, Slack, or other channels based on rules.",
    "sysadmin": "Alertmanager is part of the Prometheus ecosystem and manages alert deduplication, silencing, and notification routing using custom rules.",
    "emoji": "🚨📧📲",
    "categories": ["Monitoring"],
    "related": ["prometheus", "loki", "blackbox exporter", "grafana"],
    "aliases": [],
    "use_case": "Notifying a Slack channel when a Kubernetes pod exceeds CPU thresholds via Alertmanager.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "blackbox exporter": {
    "eli5": "It’s like a robot that checks if the lights are on in your house from the outside—without going in.",
    "boss": "Blackbox Exporter is a Prometheus add-on that checks availability of services (like websites or ports) by probing them externally.",
    "sysadmin": "Blackbox Exporter enables Prometheus to probe endpoints using HTTP, HTTPS, DNS, TCP, or ICMP, often used for uptime and availability checks.",
    "emoji": "🕵️‍♂️🌐📡",
    "categories": ["Monitoring"],
    "related": ["prometheus", "alertmanager", "loki", "uptime robot"],
    "aliases": [],
    "use_case": "Monitoring HTTP availability of a web app from multiple locations using Prometheus and Blackbox Exporter.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "301 redirect": {
    "eli5": "Like changing your home address and putting up a sign that says, 'I moved here permanently!'",
    "boss": "A 301 Redirect tells browsers and search engines that a webpage has permanently moved to a new URL.",
    "sysadmin": "A 301 status code is an HTTP response that permanently redirects traffic from one URL to another, maintaining SEO rankings and avoiding broken links.",
    "emoji": "📦➡️🏠",
    "categories": ["Web"],
    "related": ["302 redirect", "seo", "open graph", "meta tags"],
    "aliases": [],
    "use_case": "Redirecting traffic from an old blog post URL to its updated version using a 301 rule in Nginx.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "302 redirect": {
    "eli5": "Like leaving a sticky note saying, 'I’m not home, but check this place for now!'",
    "boss": "A 302 Redirect is used when a webpage is temporarily moved and will eventually return to its original location.",
    "sysadmin": "The 302 status code performs a temporary HTTP redirect, useful when content is temporarily unavailable at its usual URL.",
    "emoji": "📦↪️🕐",
    "categories": ["Web"],
    "related": ["301 redirect", "seo", "meta tags", "web server"],
    "aliases": [],
    "use_case": "Redirecting traffic to a maintenance page while the main site is undergoing updates using a 302 rule.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "404 not found": {
    "eli5": "It’s like knocking on a door that doesn’t exist—nobody’s home, and the house might not be either.",
    "boss": "A 404 Not Found error means the server couldn’t find the requested resource, like a broken link or deleted page.",
    "sysadmin": "HTTP 404 is a client-side error response indicating the server cannot locate the requested URL. It often appears when URLs are mistyped or content has been removed.",
    "emoji": "🚪❌🔍",
    "categories": ["Web"],
    "related": ["403 forbidden", "500 internal server error", "seo", "status code"],
    "aliases": [],
    "use_case": "Serving a custom 404 error page when a user visits a non-existent product URL on an e-commerce site.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "403 forbidden": {
    "eli5": "Like showing up at a party but the bouncer says, 'You’re not on the list.'",
    "boss": "A 403 Forbidden error means the server understood the request but refuses to allow access—often due to permissions.",
    "sysadmin": "HTTP 403 is a status code indicating the resource is restricted and the user does not have authorization to access it, despite a valid request.",
    "emoji": "🚷🔒🛑",
    "categories": ["Web Security"],
    "related": ["404 not found", "401 unauthorized", "seo", "access control"],
    "aliases": [],
    "use_case": "Blocking access to an admin area from unauthorized IPs and returning a 403 error.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "500 internal server error": {
    "eli5": "Like a vending machine saying 'something broke inside, sorry!'",
    "boss": "A 500 Internal Server Error means something went wrong on the server, but it doesn’t tell you what exactly.",
    "sysadmin": "An HTTP 500 error is a generic server error indicating an unhandled condition in the backend application, such as misconfigurations or runtime exceptions.",
    "emoji": "🧯🔥💻",
    "categories": ["Web"],
    "related": ["404 not found", "seo", "web server", "status code"],
    "aliases": [],
    "use_case": "Investigating a 500 error caused by a PHP application misconfiguring database credentials.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "seo": {
    "eli5": "It’s like putting up signs and lights so more people notice your lemonade stand on the street.",
    "boss": "SEO (Search Engine Optimization) improves how well your site ranks in search engines so customers can find you more easily.",
    "sysadmin": "SEO involves optimizing website structure, content, and metadata to improve visibility in search engine result pages (SERPs).",
    "emoji": "🔍📈🌐",
    "categories": ["Web", "Analytics"],
    "related": ["meta tags", "open graph", "301 redirect", "google search console"],
    "aliases": ["search engine optimization"],
    "use_case": "Improving page speed and adding structured data to boost SEO rankings on Google.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "meta tags": {
    "eli5": "They’re like invisible labels on a webpage that help search engines and social media understand what it's about.",
    "boss": "Meta tags provide descriptive info about a webpage—like its title, description, and social media preview settings.",
    "sysadmin": "Meta tags are snippets of HTML inside a webpage's head element that define metadata for SEO, sharing, and browser behavior.",
    "emoji": "🏷️💬📑",
    "categories": ["Web"],
    "related": ["seo", "meta title", "meta description", "open graph"],
    "aliases": [],
    "use_case": "Adding meta tags to improve how a webpage appears when shared on Facebook or Twitter.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "meta title": {
    "eli5": "Like the title of a book—it tells you what the page is about before you open it.",
    "boss": "A meta title is what appears as the clickable headline in search engine results, critical for SEO.",
    "sysadmin": "The meta title is an HTML element that defines the page title shown on browser tabs and SERPs. It’s one of the most important on-page SEO elements.",
    "emoji": "📘🖱️🔤",
    "categories": ["Web"],
    "related": ["meta tags", "meta description", "seo", "open graph"],
    "aliases": [],
    "use_case": "Optimizing meta titles with target keywords to improve click-through rates from Google search results.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "meta description": {
    "eli5": "It’s like a short summary on the back of a book—it helps readers decide if they want to read it.",
    "boss": "The meta description gives a brief summary of the page’s content, often shown in search results to attract clicks.",
    "sysadmin": "An HTML meta tag that provides a description of a web page, influencing how search engines display results and impacting SEO click-through rates.",
    "emoji": "📝🔍💬",
    "categories": ["Web"],
    "related": ["meta title", "meta tags", "seo", "open graph"],
    "aliases": [],
    "use_case": "Writing compelling meta descriptions to entice users to click on blog posts in search results.",
    "jargon_score": 1,
    "level": "Beginner"
  },
  "open graph": {
    "eli5": "It’s like adding a photo, title, and summary to a party invite—so when people see it online, they want to click.",
    "boss": "Open Graph tags let you control how your webpage appears when shared on social media platforms like Facebook or LinkedIn.",
    "sysadmin": "Open Graph is a protocol used via meta tags in HTML to define rich previews (image, title, description) when web pages are shared on social networks.",
    "emoji": "🔗📸💬",
    "categories": ["Web", "Analytics"],
    "related": ["meta tags", "meta title", "seo", "twitter card"],
    "aliases": [],
    "use_case": "Adding Open Graph tags to control preview images and titles when blog articles are shared on LinkedIn.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "twitter card": {
    "eli5": "It’s like dressing up your tweet with a picture and title to make it more exciting when someone shares a link.",
    "boss": "Twitter Cards allow your website to display rich media previews in tweets, improving engagement and click-throughs.",
    "sysadmin": "Twitter Card meta tags define how a shared link appears on Twitter, including summary, image, and video previews.",
    "emoji": "🐦🖼️💬",
    "categories": ["Web", "Analytics"],
    "related": ["open graph", "meta tags", "seo", "social engineering"],
    "aliases": [],
    "use_case": "Adding a Twitter Card to ensure blog post previews show a large image and description on Twitter.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "cls": {
    "eli5": "It’s like a webpage jumping around while loading—annoying and confusing!",
    "boss": "Cumulative Layout Shift (CLS) measures how much content unexpectedly shifts as a page loads—important for user experience.",
    "sysadmin": "CLS is a Core Web Vital metric that quantifies visual stability by measuring layout shifts that occur during page load.",
    "emoji": "📉📲🔄",
    "categories": ["Web", "Analytics"],
    "related": ["core web vitals", "lighthouse", "tti", "ttfb"],
    "aliases": ["cumulative layout shift"],
    "use_case": "Reducing CLS by reserving space for images and ads so content doesn't jump during page load.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "ttfb": {
    "eli5": "It’s like waiting at a restaurant—you want the waiter to show up fast, not stare at an empty table.",
    "boss": "Time to First Byte (TTFB) measures how quickly a server responds to a browser’s request—it’s key for website performance.",
    "sysadmin": "TTFB is a web performance metric measuring the time between a client’s HTTP request and the first byte received from the server.",
    "emoji": "⏱️💾🌐",
    "categories": ["Web", "Analytics"],
    "related": ["tti", "cls", "core web vitals", "server"],
    "aliases": ["time to first byte"],
    "use_case": "Improving TTFB by enabling caching and reducing server response time in a WordPress site.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "tti": {
    "eli5": "It’s like when a game loads and finally lets you press 'Start'—that’s TTI.",
    "boss": "Time to Interactive (TTI) measures how long it takes for a webpage to become fully usable for the visitor.",
    "sysadmin": "TTI is a web performance metric that tracks when a page becomes reliably interactive—i.e., no long tasks block input response.",
    "emoji": "⏳👆💡",
    "categories": ["Web", "Analytics"],
    "related": ["ttfb", "cls", "core web vitals", "lighthouse"],
    "aliases": ["time to interactive"],
    "use_case": "Using Lighthouse to analyze and reduce TTI on a single-page app by deferring non-critical scripts.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "web security": {
    "eli5": "It’s like adding locks, cameras, and guards to your digital house—so no one breaks in.",
    "boss": "Web security protects websites from attacks like hacking, data theft, and malware, ensuring user safety and trust.",
    "sysadmin": "Web security involves applying technologies and best practices like TLS, secure headers, input validation, and access controls to safeguard web applications.",
    "emoji": "🔐🌐🛡️",
    "categories": ["Web Security"],
    "related": ["content security policy", "xss", "hsts", "csrf"],
    "aliases": [],
    "use_case": "Enabling HTTPS and setting security headers to prevent XSS and clickjacking on a login page.",
    "jargon_score": 2,
    "level": "Beginner"
  },
  "content security policy": {
    "eli5": "It’s like telling your webpage, 'Only trust food from this kitchen—no outside snacks allowed.'",
    "boss": "A Content Security Policy (CSP) tells browsers which content is safe to load, helping block attacks like XSS.",
    "sysadmin": "CSP is a web security standard that restricts which sources are allowed for scripts, styles, images, and other resources, mitigating injection threats.",
    "emoji": "📜🚫🔒",
    "categories": ["Web Security"],
    "related": ["web security", "xss", "hsts", "secure headers"],
    "aliases": ["csp"],
    "use_case": "Implementing CSP to prevent inline scripts from executing on a financial dashboard site.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "xss": {
    "eli5": "Like someone sneaking graffiti onto your whiteboard—except it’s malicious code on your website.",
    "boss": "Cross-Site Scripting (XSS) is a security vulnerability where attackers inject malicious scripts into trusted websites.",
    "sysadmin": "XSS allows attackers to execute arbitrary JavaScript in users’ browsers by exploiting unsanitized user inputs, leading to session theft or redirection.",
    "emoji": "🖊️💣💻",
    "categories": ["Web Security"],
    "related": ["web security", "content security policy", "secure headers", "csrf"],
    "aliases": ["cross-site scripting"],
    "use_case": "Sanitizing form inputs on a contact page to prevent stored XSS payloads from executing.",
    "jargon_score": 3,
    "level": "Beginner"
  },
  "harvester": {
    "eli5": "It’s like a farmer’s all-in-one machine—but instead of crops, it manages virtual machines and containers.",
    "boss": "Harvester is an open-source hyperconverged infrastructure (HCI) platform that combines virtualization with Kubernetes.",
    "sysadmin": "Harvester uses KubeVirt and Longhorn to manage VMs and container workloads in a Kubernetes-native environment, ideal for hybrid infrastructure.",
    "emoji": "🌾🖥️🧩",
    "categories": ["Virtualization", "Infrastructure"],
    "related": ["proxmox ve", "kubernetes", "virtual machine", "vm templates"],
    "aliases": [],
    "use_case": "Deploying Harvester to run virtual machines and containers side-by-side on edge servers with centralized Kubernetes management.",
    "jargon_score": 4,
    "level": "Beginner"
  },
  "netbios": {
    "eli5": "It’s like shouting someone’s name across a room so you can find them in a crowd—but on a network.",
    "boss": "NetBIOS helps computers on a local network identify and connect with each other by name rather than IP.",
    "sysadmin": "NetBIOS (Network Basic Input/Output System) is a legacy protocol that enables applications on different computers to communicate within a LAN using names, typically associated with SMB and Windows networking.",
    "emoji": "📣💻🧭",
    "categories": ["Networking Protocols"],
    "related": ["dns", "smb", "cifs", "windows server"],
    "aliases": ["network basic input output system"],
    "use_case": "Accessing a shared Windows folder on the network using a computer name resolved through NetBIOS.",
    "jargon_score": 3,
    "level": "Beginner"
  }
}